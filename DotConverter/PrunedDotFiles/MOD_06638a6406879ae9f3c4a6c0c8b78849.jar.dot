digraph "" {
"r0 := @this: com.mindprod.networkcam.NetworkCam"->"staticinvoke <com.mindprod.common11.VersionCheck: boolean isJavaVersionOK(int,int,int,java.awt.Container)>";
 "staticinvoke <com.mindprod.common11.VersionCheck: boolean isJavaVersionOK(int,int,int,java.awt.Container)>"->"ifne staticinvoke <com.mindprod.networkcam.NetworkCam: int getCameraNumber()>";
 "ifne staticinvoke <com.mindprod.networkcam.NetworkCam: int getCameraNumber()>"->"return";
 "ifne staticinvoke <com.mindprod.networkcam.NetworkCam: int getCameraNumber()>"->"staticinvoke <com.mindprod.networkcam.NetworkCam: int getCameraNumber()>";
 "staticinvoke <com.mindprod.networkcam.NetworkCam: int getCameraNumber()>"->"staticput <com.mindprod.networkcam.NetworkCam: int cameraNumber>";
 "staticput <com.mindprod.networkcam.NetworkCam: int cameraNumber>"->"specialinvoke <com.mindprod.networkcam.NetworkCam: java.lang.String getCameraNameParameter()>";
 "specialinvoke <com.mindprod.networkcam.NetworkCam: java.lang.String getCameraNameParameter()>"->"fieldput <com.mindprod.networkcam.NetworkCam: java.lang.String cameraName>";
 "fieldput <com.mindprod.networkcam.NetworkCam: java.lang.String cameraName>"->"specialinvoke <com.mindprod.networkcam.NetworkCam: boolean getBooleanParameter(java.lang.String,boolean)>";
 "specialinvoke <com.mindprod.networkcam.NetworkCam: boolean getBooleanParameter(java.lang.String,boolean)>"->"fieldput <com.mindprod.networkcam.NetworkCam: boolean quiet>";
 "fieldput <com.mindprod.networkcam.NetworkCam: boolean quiet>"->"staticget <com.mindprod.networkcam.NetworkCam: java.lang.Class class$com$mindprod$networkcam$NetworkCam>";
 "staticget <com.mindprod.networkcam.NetworkCam: java.lang.Class class$com$mindprod$networkcam$NetworkCam>"->"ifnonnull staticget <com.mindprod.networkcam.NetworkCam: java.lang.Class class$com$mindprod$networkcam$NetworkCam>";
 "ifnonnull staticget <com.mindprod.networkcam.NetworkCam: java.lang.Class class$com$mindprod$networkcam$NetworkCam>"->"push 'com.mindprod.networkcam.NetworkCam'";
 "push 'com.mindprod.networkcam.NetworkCam'"->"staticinvoke <com.mindprod.networkcam.NetworkCam: java.lang.Class class$(java.lang.String)>";
 "staticinvoke <com.mindprod.networkcam.NetworkCam: java.lang.Class class$(java.lang.String)>"->"staticput <com.mindprod.networkcam.NetworkCam: java.lang.Class class$com$mindprod$networkcam$NetworkCam>";
 "staticput <com.mindprod.networkcam.NetworkCam: java.lang.Class class$com$mindprod$networkcam$NetworkCam>"->"goto load.r r0";
 "goto load.r r0"->"virtualinvoke <java.lang.Class: java.net.URL getResource(java.lang.String)>";
 "virtualinvoke <java.lang.Class: java.net.URL getResource(java.lang.String)>"->"virtualinvoke <com.mindprod.networkcam.NetworkCam: java.applet.AudioClip getAudioClip(java.net.URL)>";
 "virtualinvoke <com.mindprod.networkcam.NetworkCam: java.applet.AudioClip getAudioClip(java.net.URL)>"->"fieldput <com.mindprod.networkcam.NetworkCam: java.applet.AudioClip clickSound>";
 "fieldput <com.mindprod.networkcam.NetworkCam: java.applet.AudioClip clickSound>"->"fieldget <com.mindprod.networkcam.NetworkCam: boolean quiet>";
 "fieldget <com.mindprod.networkcam.NetworkCam: boolean quiet>"->"specialinvoke <com.mindprod.networkcam.NetworkCam: java.applet.AudioClip getFrogSound()>";
 "specialinvoke <com.mindprod.networkcam.NetworkCam: java.applet.AudioClip getFrogSound()>"->"fieldput <com.mindprod.networkcam.NetworkCam: java.applet.AudioClip frogSound>";
 "fieldput <com.mindprod.networkcam.NetworkCam: java.applet.AudioClip frogSound>"->"specialinvoke <com.mindprod.networkcam.NetworkCam: int getNumericParameter(java.lang.String,int,int,int)>";
 "specialinvoke <com.mindprod.networkcam.NetworkCam: int getNumericParameter(java.lang.String,int,int,int)>"->"fieldput <com.mindprod.networkcam.NetworkCam: long refreshFast>";
 "fieldput <com.mindprod.networkcam.NetworkCam: long refreshFast>"->"specialinvoke <com.mindprod.networkcam.NetworkCam: int getNumericParameter(java.lang.String,int,int,int)>";
 "specialinvoke <com.mindprod.networkcam.NetworkCam: int getNumericParameter(java.lang.String,int,int,int)>"->"fieldput <com.mindprod.networkcam.NetworkCam: long refreshSlow>";
 "fieldput <com.mindprod.networkcam.NetworkCam: long refreshSlow>"->"specialinvoke <com.mindprod.networkcam.NetworkCam: int getNumericParameter(java.lang.String,int,int,int)>";
 "specialinvoke <com.mindprod.networkcam.NetworkCam: int getNumericParameter(java.lang.String,int,int,int)>"->"fieldput <com.mindprod.networkcam.NetworkCam: long refreshTimeout>";
 "fieldput <com.mindprod.networkcam.NetworkCam: long refreshTimeout>"->"specialinvoke <com.mindprod.networkcam.NetworkCam: java.net.URL getURLParameter(java.lang.String)>";
 "specialinvoke <com.mindprod.networkcam.NetworkCam: java.net.URL getURLParameter(java.lang.String)>"->"fieldput <com.mindprod.networkcam.NetworkCam: java.net.URL camURL>";
 "fieldput <com.mindprod.networkcam.NetworkCam: java.net.URL camURL>"->"specialinvoke <com.mindprod.networkcam.NetworkCam: boolean getBooleanParameter(java.lang.String,boolean)>";
 "specialinvoke <com.mindprod.networkcam.NetworkCam: boolean getBooleanParameter(java.lang.String,boolean)>"->"fieldput <com.mindprod.networkcam.NetworkCam: boolean flip>";
 "fieldput <com.mindprod.networkcam.NetworkCam: boolean flip>"->"specialinvoke <com.mindprod.networkcam.NetworkCam: boolean getBooleanParameter(java.lang.String,boolean)>";
 "specialinvoke <com.mindprod.networkcam.NetworkCam: boolean getBooleanParameter(java.lang.String,boolean)>"->"fieldput <com.mindprod.networkcam.NetworkCam: boolean mirror>";
 "fieldput <com.mindprod.networkcam.NetworkCam: boolean mirror>"->"specialinvoke <com.mindprod.networkcam.NetworkCam: int getNumericParameter(java.lang.String,int,int,int)>";
 "specialinvoke <com.mindprod.networkcam.NetworkCam: int getNumericParameter(java.lang.String,int,int,int)>"->"fieldput <com.mindprod.networkcam.NetworkCam: int rotateDegrees>";
 "fieldput <com.mindprod.networkcam.NetworkCam: int rotateDegrees>"->"fieldget <com.mindprod.networkcam.NetworkCam: java.awt.Image camImage>";
 "fieldget <com.mindprod.networkcam.NetworkCam: java.awt.Image camImage>"->"ifnonnull staticget <java.lang.System: java.io.PrintStream out>";
 "ifnonnull staticget <java.lang.System: java.io.PrintStream out>"->"fieldget <com.mindprod.networkcam.NetworkCam: java.net.URL camURL>";
 "fieldget <com.mindprod.networkcam.NetworkCam: java.net.URL camURL>"->"ifnull staticget <java.lang.System: java.io.PrintStream out>";
 "ifnull staticget <java.lang.System: java.io.PrintStream out>"->"fieldget <com.mindprod.networkcam.NetworkCam: java.net.URL camURL>";
 "fieldget <com.mindprod.networkcam.NetworkCam: java.net.URL camURL>"->"specialinvoke <com.mindprod.networkcam.NetworkCam: java.awt.Image getUncachedImage(java.net.URL)>";
 "specialinvoke <com.mindprod.networkcam.NetworkCam: java.awt.Image getUncachedImage(java.net.URL)>"->"fieldput <com.mindprod.networkcam.NetworkCam: java.awt.Image camImage>";
 "fieldput <com.mindprod.networkcam.NetworkCam: java.awt.Image camImage>"->"staticget <java.lang.System: java.io.PrintStream out>";
 "staticget <java.lang.System: java.io.PrintStream out>"->"new java.lang.StringBuffer";
 "new java.lang.StringBuffer"->"specialinvoke <java.lang.StringBuffer: void <init>()>";
 "specialinvoke <java.lang.StringBuffer: void <init>()>"->"virtualinvoke <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>";
 "virtualinvoke <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>"->"virtualinvoke <com.mindprod.networkcam.NetworkCam: int getWidth()>";
 "virtualinvoke <com.mindprod.networkcam.NetworkCam: int getWidth()>"->"virtualinvoke <java.lang.StringBuffer: java.lang.StringBuffer append(int)>";
 "virtualinvoke <java.lang.StringBuffer: java.lang.StringBuffer append(int)>"->"virtualinvoke <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>";
 "virtualinvoke <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>"->"virtualinvoke <com.mindprod.networkcam.NetworkCam: int getHeight()>";
 "virtualinvoke <com.mindprod.networkcam.NetworkCam: int getHeight()>"->"virtualinvoke <java.lang.StringBuffer: java.lang.StringBuffer append(int)>";
 "virtualinvoke <java.lang.StringBuffer: java.lang.StringBuffer append(int)>"->"virtualinvoke <java.lang.StringBuffer: java.lang.String toString()>";
 "virtualinvoke <java.lang.StringBuffer: java.lang.String toString()>"->"virtualinvoke <java.io.PrintStream: void println(java.lang.String)>";
 "virtualinvoke <java.io.PrintStream: void println(java.lang.String)>"->"fieldget <com.mindprod.networkcam.NetworkCam: boolean flip>";
 "fieldget <com.mindprod.networkcam.NetworkCam: boolean flip>"->"fieldget <com.mindprod.networkcam.NetworkCam: boolean mirror>";
 "fieldget <com.mindprod.networkcam.NetworkCam: boolean mirror>"->"fieldget <com.mindprod.networkcam.NetworkCam: int rotateDegrees>";
 "fieldget <com.mindprod.networkcam.NetworkCam: int rotateDegrees>"->"new java.awt.geom.AffineTransform";
 "new java.awt.geom.AffineTransform"->"specialinvoke <java.awt.geom.AffineTransform: void <init>()>";
 "specialinvoke <java.awt.geom.AffineTransform: void <init>()>"->"fieldput <com.mindprod.networkcam.NetworkCam: java.awt.geom.AffineTransform transform>";
 "fieldput <com.mindprod.networkcam.NetworkCam: java.awt.geom.AffineTransform transform>"->"fieldget <com.mindprod.networkcam.NetworkCam: java.awt.geom.AffineTransform transform>";
 "fieldget <com.mindprod.networkcam.NetworkCam: java.awt.geom.AffineTransform transform>"->"virtualinvoke <com.mindprod.networkcam.NetworkCam: int getWidth()>";
 "virtualinvoke <com.mindprod.networkcam.NetworkCam: int getWidth()>"->"virtualinvoke <com.mindprod.networkcam.NetworkCam: int getHeight()>";
 "virtualinvoke <com.mindprod.networkcam.NetworkCam: int getHeight()>"->"virtualinvoke <java.awt.geom.AffineTransform: void translate(double,double)>";
 "virtualinvoke <java.awt.geom.AffineTransform: void translate(double,double)>"->"fieldget <com.mindprod.networkcam.NetworkCam: boolean flip>";
 "fieldget <com.mindprod.networkcam.NetworkCam: boolean flip>"->"fieldget <com.mindprod.networkcam.NetworkCam: java.awt.geom.AffineTransform transform>";
 "fieldget <com.mindprod.networkcam.NetworkCam: java.awt.geom.AffineTransform transform>"->"virtualinvoke <java.awt.geom.AffineTransform: void scale(double,double)>";
 "virtualinvoke <java.awt.geom.AffineTransform: void scale(double,double)>"->"fieldget <com.mindprod.networkcam.NetworkCam: boolean mirror>";
 "fieldget <com.mindprod.networkcam.NetworkCam: boolean mirror>"->"fieldget <com.mindprod.networkcam.NetworkCam: java.awt.geom.AffineTransform transform>";
 "fieldget <com.mindprod.networkcam.NetworkCam: java.awt.geom.AffineTransform transform>"->"virtualinvoke <java.awt.geom.AffineTransform: void scale(double,double)>";
 "virtualinvoke <java.awt.geom.AffineTransform: void scale(double,double)>"->"fieldget <com.mindprod.networkcam.NetworkCam: int rotateDegrees>";
 "fieldget <com.mindprod.networkcam.NetworkCam: int rotateDegrees>"->"fieldget <com.mindprod.networkcam.NetworkCam: int rotateDegrees>";
 "fieldget <com.mindprod.networkcam.NetworkCam: int rotateDegrees>"->"fieldget <com.mindprod.networkcam.NetworkCam: java.awt.geom.AffineTransform transform>";
 "fieldget <com.mindprod.networkcam.NetworkCam: java.awt.geom.AffineTransform transform>"->"fieldget <com.mindprod.networkcam.NetworkCam: int rotateDegrees>";
 "fieldget <com.mindprod.networkcam.NetworkCam: int rotateDegrees>"->"virtualinvoke <java.awt.geom.AffineTransform: void quadrantRotate(int)>";
 "virtualinvoke <java.awt.geom.AffineTransform: void quadrantRotate(int)>"->"goto load.r r0";
 "goto load.r r0"->"fieldget <com.mindprod.networkcam.NetworkCam: java.awt.geom.AffineTransform transform>";
 "fieldget <com.mindprod.networkcam.NetworkCam: java.awt.geom.AffineTransform transform>"->"virtualinvoke <com.mindprod.networkcam.NetworkCam: int getWidth()>";
 "virtualinvoke <com.mindprod.networkcam.NetworkCam: int getWidth()>"->"virtualinvoke <com.mindprod.networkcam.NetworkCam: int getHeight()>";
 "virtualinvoke <com.mindprod.networkcam.NetworkCam: int getHeight()>"->"virtualinvoke <java.awt.geom.AffineTransform: void translate(double,double)>";
 "virtualinvoke <java.awt.geom.AffineTransform: void translate(double,double)>"->"goto load.r r0";
 "goto load.r r0"->"virtualinvoke <com.mindprod.networkcam.NetworkCam: void setLayout(java.awt.LayoutManager)>";
 "virtualinvoke <com.mindprod.networkcam.NetworkCam: void setLayout(java.awt.LayoutManager)>"->"staticget <java.awt.Color: java.awt.Color black>";
 "staticget <java.awt.Color: java.awt.Color black>"->"virtualinvoke <com.mindprod.networkcam.NetworkCam: void setBackground(java.awt.Color)>";
 "virtualinvoke <com.mindprod.networkcam.NetworkCam: void setBackground(java.awt.Color)>"->"new com.mindprod.common11.ResizingImageViewer";
 "new com.mindprod.common11.ResizingImageViewer"->"fieldget <com.mindprod.networkcam.NetworkCam: java.awt.geom.AffineTransform transform>";
 "fieldget <com.mindprod.networkcam.NetworkCam: java.awt.geom.AffineTransform transform>"->"specialinvoke <com.mindprod.common11.ResizingImageViewer: void <init>(java.awt.geom.AffineTransform)>";
 "specialinvoke <com.mindprod.common11.ResizingImageViewer: void <init>(java.awt.geom.AffineTransform)>"->"fieldput <com.mindprod.networkcam.NetworkCam: com.mindprod.common11.ResizingImageViewer camViewer>";
 "fieldput <com.mindprod.networkcam.NetworkCam: com.mindprod.common11.ResizingImageViewer camViewer>"->"fieldget <com.mindprod.networkcam.NetworkCam: com.mindprod.common11.ResizingImageViewer camViewer>";
 "fieldget <com.mindprod.networkcam.NetworkCam: com.mindprod.common11.ResizingImageViewer camViewer>"->"staticget <java.awt.Color: java.awt.Color black>";
 "staticget <java.awt.Color: java.awt.Color black>"->"virtualinvoke <com.mindprod.common11.ResizingImageViewer: void setBackground(java.awt.Color)>";
 "virtualinvoke <com.mindprod.common11.ResizingImageViewer: void setBackground(java.awt.Color)>"->"fieldget <com.mindprod.networkcam.NetworkCam: com.mindprod.common11.ResizingImageViewer camViewer>";
 "fieldget <com.mindprod.networkcam.NetworkCam: com.mindprod.common11.ResizingImageViewer camViewer>"->"virtualinvoke <com.mindprod.networkcam.NetworkCam: java.awt.Dimension getSize()>";
 "virtualinvoke <com.mindprod.networkcam.NetworkCam: java.awt.Dimension getSize()>"->"virtualinvoke <com.mindprod.common11.ResizingImageViewer: void setSize(java.awt.Dimension)>";
 "virtualinvoke <com.mindprod.common11.ResizingImageViewer: void setSize(java.awt.Dimension)>"->"fieldget <com.mindprod.networkcam.NetworkCam: com.mindprod.common11.ResizingImageViewer camViewer>";
 "fieldget <com.mindprod.networkcam.NetworkCam: com.mindprod.common11.ResizingImageViewer camViewer>"->"virtualinvoke <com.mindprod.common11.ResizingImageViewer: void setLocation(int,int)>";
 "virtualinvoke <com.mindprod.common11.ResizingImageViewer: void setLocation(int,int)>"->"fieldget <com.mindprod.networkcam.NetworkCam: com.mindprod.common11.ResizingImageViewer camViewer>";
 "fieldget <com.mindprod.networkcam.NetworkCam: com.mindprod.common11.ResizingImageViewer camViewer>"->"new com.mindprod.networkcam.NetworkCam$1";
 "new com.mindprod.networkcam.NetworkCam$1"->"specialinvoke <com.mindprod.networkcam.NetworkCam$1: void <init>(com.mindprod.networkcam.NetworkCam)>";
 "specialinvoke <com.mindprod.networkcam.NetworkCam$1: void <init>(com.mindprod.networkcam.NetworkCam)>"->"virtualinvoke <com.mindprod.common11.ResizingImageViewer: void addMouseListener(java.awt.event.MouseListener)>";
 "virtualinvoke <com.mindprod.common11.ResizingImageViewer: void addMouseListener(java.awt.event.MouseListener)>"->"fieldget <com.mindprod.networkcam.NetworkCam: com.mindprod.common11.ResizingImageViewer camViewer>";
 "fieldget <com.mindprod.networkcam.NetworkCam: com.mindprod.common11.ResizingImageViewer camViewer>"->"virtualinvoke <com.mindprod.networkcam.NetworkCam: java.awt.Component add(java.awt.Component)>";
 "virtualinvoke <com.mindprod.networkcam.NetworkCam: java.awt.Component add(java.awt.Component)>"->"virtualinvoke <com.mindprod.networkcam.NetworkCam: void validate()>";
 "virtualinvoke <com.mindprod.networkcam.NetworkCam: void validate()>"->"virtualinvoke <com.mindprod.networkcam.NetworkCam: void setVisible(boolean)>";
 "virtualinvoke <com.mindprod.networkcam.NetworkCam: void setVisible(boolean)>"->"return";
"fieldget <com.mindprod.networkcam.NetworkCam: java.awt.geom.AffineTransform transform>";
 "fieldget <com.mindprod.networkcam.NetworkCam: java.awt.geom.AffineTransform transform>"->"fieldget <com.mindprod.networkcam.NetworkCam: int rotateDegrees>";
 "fieldget <com.mindprod.networkcam.NetworkCam: int rotateDegrees>"->"staticinvoke <java.lang.Math: double toRadians(double)>";
 "staticinvoke <java.lang.Math: double toRadians(double)>"->"virtualinvoke <java.awt.geom.AffineTransform: void rotate(double)>";
"fieldput <com.mindprod.networkcam.NetworkCam: java.awt.geom.AffineTransform transform>";
 "ifnonnull staticget <com.mindprod.networkcam.NetworkCam: java.lang.Class class$com$mindprod$networkcam$NetworkCam>"->"staticget <com.mindprod.networkcam.NetworkCam: java.lang.Class class$com$mindprod$networkcam$NetworkCam>";
 "staticget <com.mindprod.networkcam.NetworkCam: java.lang.Class class$com$mindprod$networkcam$NetworkCam>"->}
