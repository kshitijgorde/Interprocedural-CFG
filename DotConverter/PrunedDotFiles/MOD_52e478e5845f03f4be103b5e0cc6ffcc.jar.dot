digraph "" {
"new java.awt.Color";
 "new java.awt.Color"->"virtualinvoke <lvbox: java.lang.String a(java.lang.String,java.lang.String)>";
 "virtualinvoke <lvbox: java.lang.String a(java.lang.String,java.lang.String)>"->"staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>";
 "staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>"->"new java.awt.Color";
 "new java.awt.Color"->"specialinvoke <java.awt.Color: void <init>(int)>";
 "specialinvoke <java.awt.Color: void <init>(int)>"->"fieldput <lvbox: java.awt.Color n>";
 "fieldput <lvbox: java.awt.Color n>"->"fieldget <lvbox: java.awt.Color n>";
 "fieldget <lvbox: java.awt.Color n>"->"virtualinvoke <java.awt.Component: void setBackground(java.awt.Color)>";
 "virtualinvoke <java.awt.Component: void setBackground(java.awt.Color)>"->"virtualinvoke <java.awt.Component: java.awt.Container getParent()>";
 "virtualinvoke <java.awt.Component: java.awt.Container getParent()>"->"fieldget <lvbox: java.awt.Color n>";
 "fieldget <lvbox: java.awt.Color n>"->"virtualinvoke <java.awt.Component: void setBackground(java.awt.Color)>";
 "virtualinvoke <java.awt.Component: void setBackground(java.awt.Color)>"->"virtualinvoke <java.awt.Component: java.awt.Container getParent()>";
 "virtualinvoke <java.awt.Component: java.awt.Container getParent()>"->"virtualinvoke <java.awt.Component: void repaint()>";
 "virtualinvoke <java.awt.Component: void repaint()>"->"virtualinvoke <lvbox: int a(java.lang.String,java.lang.String,int)>";
 "virtualinvoke <lvbox: int a(java.lang.String,java.lang.String,int)>"->"specialinvoke <java.awt.Color: void <init>(int)>";
 "specialinvoke <java.awt.Color: void <init>(int)>"->"fieldput <lvbox: java.awt.Color m>";
 "fieldput <lvbox: java.awt.Color m>"->"virtualinvoke <java.awt.Component: java.awt.Dimension size()>";
 "virtualinvoke <java.awt.Component: java.awt.Dimension size()>"->"fieldget <java.awt.Dimension: int width>";
 "fieldget <java.awt.Dimension: int width>"->"virtualinvoke <java.awt.Component: java.awt.Dimension size()>";
 "virtualinvoke <java.awt.Component: java.awt.Dimension size()>"->"fieldget <java.awt.Dimension: int height>";
 "fieldget <java.awt.Dimension: int height>"->"virtualinvoke <java.awt.Component: java.awt.Graphics getGraphics()>";
 "virtualinvoke <java.awt.Component: java.awt.Graphics getGraphics()>"->"fieldput <lvbox: java.awt.Graphics 'goto'>";
 "fieldput <lvbox: java.awt.Graphics 'goto'>"->"virtualinvoke <java.awt.Component: java.awt.Image createImage(int,int)>";
 "virtualinvoke <java.awt.Component: java.awt.Image createImage(int,int)>"->"fieldput <lvbox: java.awt.Image do>";
 "fieldput <lvbox: java.awt.Image do>"->"fieldget <lvbox: java.awt.Image do>";
 "fieldget <lvbox: java.awt.Image do>"->"virtualinvoke <java.awt.Image: java.awt.Graphics getGraphics()>";
 "virtualinvoke <java.awt.Image: java.awt.Graphics getGraphics()>"->"fieldput <lvbox: java.awt.Graphics z>";
 "fieldput <lvbox: java.awt.Graphics z>"->"virtualinvoke <java.awt.Component: java.awt.Image createImage(int,int)>";
 "virtualinvoke <java.awt.Component: java.awt.Image createImage(int,int)>"->"fieldput <lvbox: java.awt.Image 'char'>";
 "fieldput <lvbox: java.awt.Image 'char'>"->"fieldget <lvbox: java.awt.Image 'char'>";
 "fieldget <lvbox: java.awt.Image 'char'>"->"virtualinvoke <java.awt.Image: java.awt.Graphics getGraphics()>";
 "virtualinvoke <java.awt.Image: java.awt.Graphics getGraphics()>"->"fieldput <lvbox: java.awt.Graphics r>";
 "fieldput <lvbox: java.awt.Graphics r>"->"new java.awt.MediaTracker";
 "new java.awt.MediaTracker"->"specialinvoke <java.awt.MediaTracker: void <init>(java.awt.Component)>";
 "specialinvoke <java.awt.MediaTracker: void <init>(java.awt.Component)>"->"fieldput <lvbox: java.awt.MediaTracker k>";
 "fieldput <lvbox: java.awt.MediaTracker k>"->"new java.awt.Color";
 "new java.awt.Color"->"virtualinvoke <lvbox: int a(java.lang.String,java.lang.String,int)>";
 "virtualinvoke <lvbox: int a(java.lang.String,java.lang.String,int)>"->"specialinvoke <java.awt.Color: void <init>(int)>";
 "specialinvoke <java.awt.Color: void <init>(int)>"->"fieldput <lvbox: java.awt.Color 'void'>";
 "fieldput <lvbox: java.awt.Color 'void'>"->"virtualinvoke <lvbox: int 'if'(java.lang.String,java.lang.String)>";
 "virtualinvoke <lvbox: int 'if'(java.lang.String,java.lang.String)>"->"virtualinvoke <lvbox: int 'if'(java.lang.String,java.lang.String)>";
 "virtualinvoke <lvbox: int 'if'(java.lang.String,java.lang.String)>"->"virtualinvoke <lvbox: int 'if'(java.lang.String,java.lang.String)>";
 "virtualinvoke <lvbox: int 'if'(java.lang.String,java.lang.String)>"->"virtualinvoke <lvbox: int 'if'(java.lang.String,java.lang.String)>";
 "virtualinvoke <lvbox: int 'if'(java.lang.String,java.lang.String)>"->"virtualinvoke <lvbox: java.lang.String a(java.lang.String,java.lang.String)>";
 "virtualinvoke <lvbox: java.lang.String a(java.lang.String,java.lang.String)>"->"virtualinvoke <java.lang.String: boolean equalsIgnoreCase(java.lang.String)>";
 "virtualinvoke <java.lang.String: boolean equalsIgnoreCase(java.lang.String)>"->"virtualinvoke <lvbox: java.lang.String a(java.lang.String,java.lang.String)>";
 "virtualinvoke <lvbox: java.lang.String a(java.lang.String,java.lang.String)>"->"fieldput <lvbox: java.lang.String b>";
 "fieldput <lvbox: java.lang.String b>"->"virtualinvoke <lvbox: java.lang.String a(java.lang.String,java.lang.String)>";
 "virtualinvoke <lvbox: java.lang.String a(java.lang.String,java.lang.String)>"->"fieldput <lvbox: java.lang.String q>";
 "fieldput <lvbox: java.lang.String q>"->"virtualinvoke <lvbox: java.lang.String a(java.lang.String,java.lang.String)>";
 "virtualinvoke <lvbox: java.lang.String a(java.lang.String,java.lang.String)>"->"fieldput <lvbox: java.lang.String for>";
 "fieldput <lvbox: java.lang.String for>"->"virtualinvoke <lvbox: java.lang.String a(java.lang.String,java.lang.String)>";
 "virtualinvoke <lvbox: java.lang.String a(java.lang.String,java.lang.String)>"->"fieldput <lvbox: java.lang.String i>";
 "fieldput <lvbox: java.lang.String i>"->"virtualinvoke <lvbox: java.lang.String a(java.lang.String,java.lang.String)>";
 "virtualinvoke <lvbox: java.lang.String a(java.lang.String,java.lang.String)>"->"virtualinvoke <lvbox: int 'if'(java.lang.String,java.lang.String)>";
 "virtualinvoke <lvbox: int 'if'(java.lang.String,java.lang.String)>"->"ifnull new java.util.StringTokenizer";
 "ifnull new java.util.StringTokenizer"->"new java.net.URL";
 "new java.net.URL"->"virtualinvoke <java.applet.Applet: java.net.URL getDocumentBase()>";
 "virtualinvoke <java.applet.Applet: java.net.URL getDocumentBase()>"->"specialinvoke <java.net.URL: void <init>(java.net.URL,java.lang.String)>";
 "specialinvoke <java.net.URL: void <init>(java.net.URL,java.lang.String)>"->"fieldput <lvbox: java.net.URL 'null'>";
 "fieldput <lvbox: java.net.URL 'null'>"->"goto new java.util.StringTokenizer";
 "goto new java.util.StringTokenizer"->"new java.util.StringTokenizer";
 "new java.util.StringTokenizer"->"new java.lang.StringBuffer";
 "new java.lang.StringBuffer"->"specialinvoke <java.lang.StringBuffer: void <init>()>";
 "specialinvoke <java.lang.StringBuffer: void <init>()>"->"virtualinvoke <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>";
 "virtualinvoke <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>"->"fieldget <lvbox: java.lang.String b>";
 "fieldget <lvbox: java.lang.String b>"->"virtualinvoke <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>";
 "virtualinvoke <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>"->"virtualinvoke <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>";
 "virtualinvoke <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>"->"fieldget <lvbox: java.lang.String b>";
 "fieldget <lvbox: java.lang.String b>"->"virtualinvoke <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>";
 "virtualinvoke <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>"->"virtualinvoke <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>";
 "virtualinvoke <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>"->"virtualinvoke <java.lang.StringBuffer: java.lang.String toString()>";
 "virtualinvoke <java.lang.StringBuffer: java.lang.String toString()>"->"virtualinvoke <lvbox: java.lang.String a(java.lang.String,java.lang.String)>";
 "virtualinvoke <lvbox: java.lang.String a(java.lang.String,java.lang.String)>"->"fieldget <lvbox: java.lang.String b>";
 "fieldget <lvbox: java.lang.String b>"->"specialinvoke <java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>";
 "specialinvoke <java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>"->"new java.awt.Font";
 "new java.awt.Font"->"virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>";
 "virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>"->"virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>";
 "virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>"->"staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>";
 "staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>"->"virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>";
 "virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>"->"staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>";
 "staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>"->"specialinvoke <java.awt.Font: void <init>(java.lang.String,int,int)>";
 "specialinvoke <java.awt.Font: void <init>(java.lang.String,int,int)>"->"fieldput <lvbox: java.awt.Font font>";
 "fieldput <lvbox: java.awt.Font font>"->"goto load.r r0";
 "goto load.r r0"->"fieldget <lvbox: java.awt.Font font>";
 "fieldget <lvbox: java.awt.Font font>"->"virtualinvoke <java.awt.Component: java.awt.FontMetrics getFontMetrics(java.awt.Font)>";
 "virtualinvoke <java.awt.Component: java.awt.FontMetrics getFontMetrics(java.awt.Font)>"->"fieldput <lvbox: java.awt.FontMetrics 'case'>";
 "fieldput <lvbox: java.awt.FontMetrics 'case'>"->"fieldget <lvbox: java.awt.FontMetrics 'case'>";
 "fieldget <lvbox: java.awt.FontMetrics 'case'>"->"virtualinvoke <java.awt.FontMetrics: int getAscent()>";
 "virtualinvoke <java.awt.FontMetrics: int getAscent()>"->"fieldget <lvbox: java.awt.FontMetrics 'case'>";
 "fieldget <lvbox: java.awt.FontMetrics 'case'>"->"virtualinvoke <java.awt.FontMetrics: int getDescent()>";
 "virtualinvoke <java.awt.FontMetrics: int getDescent()>"->"fieldget <lvbox: java.awt.FontMetrics 'case'>";
 "fieldget <lvbox: java.awt.FontMetrics 'case'>"->"virtualinvoke <java.awt.FontMetrics: int stringWidth(java.lang.String)>";
 "virtualinvoke <java.awt.FontMetrics: int stringWidth(java.lang.String)>"->"new java.util.Vector";
 "new java.util.Vector"->"specialinvoke <java.util.Vector: void <init>()>";
 "specialinvoke <java.util.Vector: void <init>()>"->"new java.net.URL";
 "new java.net.URL"->"virtualinvoke <java.applet.Applet: java.net.URL getDocumentBase()>";
 "virtualinvoke <java.applet.Applet: java.net.URL getDocumentBase()>"->"fieldget <lvbox: java.lang.String q>";
 "fieldget <lvbox: java.lang.String q>"->"specialinvoke <java.net.URL: void <init>(java.net.URL,java.lang.String)>";
 "specialinvoke <java.net.URL: void <init>(java.net.URL,java.lang.String)>"->"virtualinvoke <java.net.URL: java.net.URLConnection openConnection()>";
 "virtualinvoke <java.net.URL: java.net.URLConnection openConnection()>"->"new java.io.DataInputStream";
 "new java.io.DataInputStream"->"virtualinvoke <java.net.URLConnection: java.io.InputStream getInputStream()>";
 "virtualinvoke <java.net.URLConnection: java.io.InputStream getInputStream()>"->"specialinvoke <java.io.DataInputStream: void <init>(java.io.InputStream)>";
 "specialinvoke <java.io.DataInputStream: void <init>(java.io.InputStream)>"->"goto load.r $r38";
 "goto load.r $r38"->"virtualinvoke <java.io.DataInputStream: java.lang.String readLine()>";
 "virtualinvoke <java.io.DataInputStream: java.lang.String readLine()>"->"ifnonnull new java.util.StringTokenizer";
 "ifnonnull new java.util.StringTokenizer"->"virtualinvoke <java.util.Vector: void addElement(java.lang.Object)>";
 "virtualinvoke <java.util.Vector: void addElement(java.lang.Object)>"->"virtualinvoke <java.io.FilterInputStream: void close()>";
 "virtualinvoke <java.io.FilterInputStream: void close()>"->"goto load.r r0";
 "goto load.r r0"->"virtualinvoke <java.util.Vector: int size()>";
 "virtualinvoke <java.util.Vector: int size()>"->"fieldput <lvbox: java.awt.Image[] t>";
 "fieldput <lvbox: java.awt.Image[] t>"->"fieldput <lvbox: java.net.URL[] p>";
 "fieldput <lvbox: java.net.URL[] p>"->"fieldput <lvbox: java.lang.String[] c>";
 "fieldput <lvbox: java.lang.String[] c>"->"goto load.i $r38";
 "goto load.i $r38"->"ifcmplt.i new java.util.StringTokenizer";
 "ifcmplt.i new java.util.StringTokenizer"->"return";
 "ifcmplt.i new java.util.StringTokenizer"->"new java.util.StringTokenizer";
 "new java.util.StringTokenizer"->"virtualinvoke <java.util.Vector: java.lang.Object elementAt(int)>";
 "virtualinvoke <java.util.Vector: java.lang.Object elementAt(int)>"->"fieldget <lvbox: java.lang.String b>";
 "fieldget <lvbox: java.lang.String b>"->"specialinvoke <java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>";
 "specialinvoke <java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>"->"virtualinvoke <java.util.StringTokenizer: boolean hasMoreTokens()>";
 "virtualinvoke <java.util.StringTokenizer: boolean hasMoreTokens()>"->"virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>";
 "virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>"->"goto load.r $r39";
 "goto load.r $r39"->"virtualinvoke <java.util.StringTokenizer: boolean hasMoreTokens()>";
 "virtualinvoke <java.util.StringTokenizer: boolean hasMoreTokens()>"->"virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>";
 "virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>"->"virtualinvoke <java.lang.String: boolean startsWith(java.lang.String)>";
 "virtualinvoke <java.lang.String: boolean startsWith(java.lang.String)>"->"ifne goto load.r $r39";
 "ifne goto load.r $r39"->"fieldget <lvbox: java.net.URL[] p>";
 "fieldget <lvbox: java.net.URL[] p>"->"new java.net.URL";
 "new java.net.URL"->"virtualinvoke <java.applet.Applet: java.net.URL getDocumentBase()>";
 "virtualinvoke <java.applet.Applet: java.net.URL getDocumentBase()>"->"specialinvoke <java.net.URL: void <init>(java.net.URL,java.lang.String)>";
 "specialinvoke <java.net.URL: void <init>(java.net.URL,java.lang.String)>"->"goto goto load.r $r39";
 "goto goto load.r $r39"->"goto load.r $r39";
 "goto load.r $r39"->"virtualinvoke <java.util.StringTokenizer: boolean hasMoreTokens()>";
 "virtualinvoke <java.util.StringTokenizer: boolean hasMoreTokens()>"->"virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>";
 "virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>"->"virtualinvoke <java.lang.String: boolean startsWith(java.lang.String)>";
 "virtualinvoke <java.lang.String: boolean startsWith(java.lang.String)>"->"fieldget <lvbox: java.lang.String[] c>";
 "fieldget <lvbox: java.lang.String[] c>"->"goto goto load.r r0";
 "goto goto load.r r0"->"goto load.r r0";
 "goto load.r r0"->"virtualinvoke <java.util.StringTokenizer: boolean hasMoreTokens()>";
 "virtualinvoke <java.util.StringTokenizer: boolean hasMoreTokens()>"->"virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>";
 "virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>"->"staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>";
 "staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>"->"goto load.r r0";
 "goto load.r r0"->"virtualinvoke <java.lang.String: int indexOf(java.lang.String)>";
 "virtualinvoke <java.lang.String: int indexOf(java.lang.String)>"->"virtualinvoke <java.lang.String: java.lang.String toLowerCase()>";
 "virtualinvoke <java.lang.String: java.lang.String toLowerCase()>"->"virtualinvoke <java.lang.String: boolean endsWith(java.lang.String)>";
 "virtualinvoke <java.lang.String: boolean endsWith(java.lang.String)>"->"virtualinvoke <java.lang.String: java.lang.String toLowerCase()>";
 "virtualinvoke <java.lang.String: java.lang.String toLowerCase()>"->"virtualinvoke <java.lang.String: boolean endsWith(java.lang.String)>";
 "virtualinvoke <java.lang.String: boolean endsWith(java.lang.String)>"->"fieldget <lvbox: java.awt.Image[] t>";
 "fieldget <lvbox: java.awt.Image[] t>"->"virtualinvoke <java.applet.Applet: java.net.URL getDocumentBase()>";
 "virtualinvoke <java.applet.Applet: java.net.URL getDocumentBase()>"->"virtualinvoke <java.applet.Applet: java.awt.Image getImage(java.net.URL,java.lang.String)>";
 "virtualinvoke <java.applet.Applet: java.awt.Image getImage(java.net.URL,java.lang.String)>"->"fieldget <lvbox: java.awt.MediaTracker k>";
 "fieldget <lvbox: java.awt.MediaTracker k>"->"fieldget <lvbox: java.awt.Image[] t>";
 "fieldget <lvbox: java.awt.Image[] t>"->"virtualinvoke <java.awt.MediaTracker: void addImage(java.awt.Image,int)>";
 "virtualinvoke <java.awt.MediaTracker: void addImage(java.awt.Image,int)>"->"fieldget <lvbox: java.awt.MediaTracker k>";
 "fieldget <lvbox: java.awt.MediaTracker k>"->"virtualinvoke <java.awt.MediaTracker: boolean checkID(int,boolean)>";
 "virtualinvoke <java.awt.MediaTracker: boolean checkID(int,boolean)>"->"goto load.r r0";
 "goto load.r r0"->"fieldget <lvbox: java.awt.Image[] t>";
 "fieldget <lvbox: java.awt.Image[] t>"->"virtualinvoke <java.awt.Component: java.awt.Image createImage(int,int)>";
 "virtualinvoke <java.awt.Component: java.awt.Image createImage(int,int)>"->"fieldget <lvbox: java.awt.Image[] t>";
 "fieldget <lvbox: java.awt.Image[] t>"->"virtualinvoke <java.awt.Image: java.awt.Graphics getGraphics()>";
 "virtualinvoke <java.awt.Image: java.awt.Graphics getGraphics()>"->"fieldget <lvbox: java.awt.Color n>";
 "fieldget <lvbox: java.awt.Color n>"->"virtualinvoke <java.awt.Graphics: void setColor(java.awt.Color)>";
 "virtualinvoke <java.awt.Graphics: void setColor(java.awt.Color)>"->"virtualinvoke <java.awt.Graphics: void fillRect(int,int,int,int)>";
 "virtualinvoke <java.awt.Graphics: void fillRect(int,int,int,int)>"->"fieldget <lvbox: java.awt.Color 'void'>";
 "fieldget <lvbox: java.awt.Color 'void'>"->"virtualinvoke <java.awt.Graphics: void setColor(java.awt.Color)>";
 "virtualinvoke <java.awt.Graphics: void setColor(java.awt.Color)>"->"fieldget <lvbox: java.awt.Font font>";
 "fieldget <lvbox: java.awt.Font font>"->"virtualinvoke <java.awt.Graphics: void setFont(java.awt.Font)>";
 "virtualinvoke <java.awt.Graphics: void setFont(java.awt.Font)>"->"new java.util.StringTokenizer";
 "new java.util.StringTokenizer"->"specialinvoke <java.util.StringTokenizer: void <init>(java.lang.String)>";
 "specialinvoke <java.util.StringTokenizer: void <init>(java.lang.String)>"->"goto load.r $r39";
 "goto load.r $r39"->"virtualinvoke <java.util.StringTokenizer: boolean hasMoreTokens()>";
 "virtualinvoke <java.util.StringTokenizer: boolean hasMoreTokens()>"->"fieldget <lvbox: java.awt.FontMetrics 'case'>";
 "fieldget <lvbox: java.awt.FontMetrics 'case'>"->"virtualinvoke <java.awt.FontMetrics: int stringWidth(java.lang.String)>";
 "virtualinvoke <java.awt.FontMetrics: int stringWidth(java.lang.String)>"->"virtualinvoke <lvbox: void a(java.awt.Graphics,java.lang.String,int,int,int)>";
 "virtualinvoke <lvbox: void a(java.awt.Graphics,java.lang.String,int,int,int)>"->"virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>";
 "virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>"->"fieldget <lvbox: java.awt.FontMetrics 'case'>";
 "fieldget <lvbox: java.awt.FontMetrics 'case'>"->"virtualinvoke <java.awt.FontMetrics: int stringWidth(java.lang.String)>";
 "virtualinvoke <java.awt.FontMetrics: int stringWidth(java.lang.String)>"->"fieldget <lvbox: java.awt.FontMetrics 'case'>";
 "fieldget <lvbox: java.awt.FontMetrics 'case'>"->"virtualinvoke <java.awt.FontMetrics: int stringWidth(java.lang.String)>";
 "virtualinvoke <java.awt.FontMetrics: int stringWidth(java.lang.String)>"->"virtualinvoke <lvbox: void a(java.awt.Graphics,java.lang.String,int,int,int)>";
 "virtualinvoke <lvbox: void a(java.awt.Graphics,java.lang.String,int,int,int)>"->"goto new java.lang.StringBuffer";
 "goto new java.lang.StringBuffer"->"new java.lang.StringBuffer";
 "new java.lang.StringBuffer"->"specialinvoke <java.lang.StringBuffer: void <init>()>";
 "specialinvoke <java.lang.StringBuffer: void <init>()>"->"virtualinvoke <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>";
 "virtualinvoke <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>"->"virtualinvoke <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>";
 "virtualinvoke <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>"->"virtualinvoke <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>";
 "virtualinvoke <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>"->"virtualinvoke <java.lang.StringBuffer: java.lang.String toString()>";
 "virtualinvoke <java.lang.StringBuffer: java.lang.String toString()>"-> "staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>"->"fieldget <lvbox: java.lang.String[] c>";
 "fieldget <lvbox: java.lang.String[] c>"->"fieldget <lvbox: java.lang.String i>";
 "fieldget <lvbox: java.lang.String i>"->"fieldget <lvbox: java.lang.String[] c>";
 "fieldget <lvbox: java.lang.String[] c>"->"fieldget <lvbox: java.lang.String i>";
 "fieldget <lvbox: java.lang.String i>"-> "specialinvoke <java.net.URL: void <init>(java.net.URL,java.lang.String)>"->"fieldget <lvbox: java.net.URL[] p>";
 "fieldget <lvbox: java.net.URL[] p>"->"fieldget <lvbox: java.net.URL 'null'>";
 "fieldget <lvbox: java.net.URL 'null'>"->"fieldget <lvbox: java.net.URL[] p>";
 "fieldget <lvbox: java.net.URL[] p>"->"fieldget <lvbox: java.net.URL 'null'>";
 "fieldget <lvbox: java.net.URL 'null'>"->"fieldget <lvbox: java.lang.String for>";
 "fieldget <lvbox: java.lang.String for>"-> "virtualinvoke <java.io.FilterInputStream: void close()>"->"goto load.r r0";
 "goto load.r r0"->"new java.lang.StringBuffer";
 "new java.lang.StringBuffer"->"specialinvoke <java.lang.StringBuffer: void <init>()>";
 "specialinvoke <java.lang.StringBuffer: void <init>()>"->"virtualinvoke <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>";
 "virtualinvoke <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>"->"virtualinvoke <java.lang.StringBuffer: java.lang.StringBuffer append(int)>";
 "virtualinvoke <java.lang.StringBuffer: java.lang.StringBuffer append(int)>"->"virtualinvoke <java.lang.StringBuffer: java.lang.String toString()>";
 "virtualinvoke <java.lang.StringBuffer: java.lang.String toString()>"->"virtualinvoke <lvbox: java.lang.String a(java.lang.String,java.lang.String)>";
 "virtualinvoke <lvbox: java.lang.String a(java.lang.String,java.lang.String)>"->"virtualinvoke <java.lang.String: boolean equals(java.lang.Object)>";
 "virtualinvoke <java.lang.String: boolean equals(java.lang.Object)>"->"virtualinvoke <java.util.Vector: void addElement(java.lang.Object)>";
 "ifnonnull new java.util.StringTokenizer"->"new java.util.StringTokenizer";
 "new java.util.StringTokenizer"->"specialinvoke <java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>";
 "specialinvoke <java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>"->"virtualinvoke <java.util.StringTokenizer: boolean hasMoreTokens()>";
 "virtualinvoke <java.util.StringTokenizer: boolean hasMoreTokens()>"->"ifnonnull new java.lang.StringBuffer";
 "ifnonnull new java.lang.StringBuffer"->"virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>";
 "virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>"->"goto goto load.r $r38";
 "goto goto load.r $r38"->"goto load.r $r38";
 "ifnonnull new java.lang.StringBuffer"->"new java.lang.StringBuffer";
 "new java.lang.StringBuffer"->"specialinvoke <java.lang.StringBuffer: void <init>()>";
 "specialinvoke <java.lang.StringBuffer: void <init>()>"->"virtualinvoke <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>";
 "virtualinvoke <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>"->"virtualinvoke <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>";
 "virtualinvoke <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>"->"virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>";
 "virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>"->"virtualinvoke <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>";
 "virtualinvoke <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>"->"virtualinvoke <java.lang.StringBuffer: java.lang.String toString()>";
 "virtualinvoke <java.lang.StringBuffer: java.lang.String toString()>"->"virtualinvoke <java.util.Vector: void addElement(java.lang.Object)>";
 "virtualinvoke <java.util.Vector: void addElement(java.lang.Object)>"-> "specialinvoke <java.awt.Font: void <init>(java.lang.String,int,int)>"->"new java.awt.Font";
 "new java.awt.Font"->"specialinvoke <java.awt.Font: void <init>(java.lang.String,int,int)>";
 "specialinvoke <java.awt.Font: void <init>(java.lang.String,int,int)>"->"fieldput <lvbox: java.awt.Font font>";
 "specialinvoke <java.net.URL: void <init>(java.net.URL,java.lang.String)>"->}
