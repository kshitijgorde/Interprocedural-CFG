digraph "" {
"virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>";
 "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"->"virtualinvoke <java.lang.String: int indexOf(java.lang.String)>";
 "virtualinvoke <java.lang.String: int indexOf(java.lang.String)>"->"staticinvoke <java.lang.System: void exit(int)>";
 "staticinvoke <java.lang.System: void exit(int)>"->"virtualinvoke <java.lang.String: int indexOf(java.lang.String)>";
 "virtualinvoke <java.lang.String: int indexOf(java.lang.String)>"->"staticinvoke <java.lang.System: void exit(int)>";
 "staticinvoke <java.lang.System: void exit(int)>"->"virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>";
 "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"->"virtualinvoke <java.lang.String: boolean equals(java.lang.Object)>";
 "virtualinvoke <java.lang.String: boolean equals(java.lang.Object)>"->"staticinvoke <java.lang.System: void exit(int)>";
 "staticinvoke <java.lang.System: void exit(int)>"->"goto load.r r0";
 "goto load.r r0"->"virtualinvoke <typewriter: java.awt.Color get_color(java.lang.String)>";
 "virtualinvoke <typewriter: java.awt.Color get_color(java.lang.String)>"->"fieldput <typewriter: java.awt.Color bgcolor>";
 "fieldput <typewriter: java.awt.Color bgcolor>"->"virtualinvoke <typewriter: java.awt.Color get_color(java.lang.String)>";
 "virtualinvoke <typewriter: java.awt.Color get_color(java.lang.String)>"->"fieldput <typewriter: java.awt.Color cap_fgcolor>";
 "fieldput <typewriter: java.awt.Color cap_fgcolor>"->"virtualinvoke <typewriter: java.awt.Color get_color(java.lang.String)>";
 "virtualinvoke <typewriter: java.awt.Color get_color(java.lang.String)>"->"fieldput <typewriter: java.awt.Color txt_fgcolor>";
 "fieldput <typewriter: java.awt.Color txt_fgcolor>"->"virtualinvoke <typewriter: java.awt.Color get_color(java.lang.String)>";
 "virtualinvoke <typewriter: java.awt.Color get_color(java.lang.String)>"->"fieldput <typewriter: java.awt.Color bdcolor>";
 "fieldput <typewriter: java.awt.Color bdcolor>"->"virtualinvoke <typewriter: java.awt.Color get_color(java.lang.String)>";
 "virtualinvoke <typewriter: java.awt.Color get_color(java.lang.String)>"->"fieldput <typewriter: java.awt.Color mocolor>";
 "fieldput <typewriter: java.awt.Color mocolor>"->"virtualinvoke <typewriter: java.awt.Font get_font(java.lang.String)>";
 "virtualinvoke <typewriter: java.awt.Font get_font(java.lang.String)>"->"fieldput <typewriter: java.awt.Font txt_font>";
 "fieldput <typewriter: java.awt.Font txt_font>"->"virtualinvoke <typewriter: java.awt.Font get_font(java.lang.String)>";
 "virtualinvoke <typewriter: java.awt.Font get_font(java.lang.String)>"->"fieldput <typewriter: java.awt.Font cap_font>";
 "fieldput <typewriter: java.awt.Font cap_font>"->"new java.lang.Integer";
 "new java.lang.Integer"->"virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>";
 "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"->"virtualinvoke <typewriter: java.lang.String remove_space(java.lang.String)>";
 "virtualinvoke <typewriter: java.lang.String remove_space(java.lang.String)>"->"specialinvoke <java.lang.Integer: void <init>(java.lang.String)>";
 "specialinvoke <java.lang.Integer: void <init>(java.lang.String)>"->"virtualinvoke <java.lang.Integer: int intValue()>";
 "virtualinvoke <java.lang.Integer: int intValue()>"->"goto load.r r0";
 "goto load.r r0"->"virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>";
 "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"->"fieldput <typewriter: java.lang.String window>";
 "fieldput <typewriter: java.lang.String window>"->"goto load.r r0";
 "goto load.r r0"->"fieldget <typewriter: java.awt.Color bgcolor>";
 "fieldget <typewriter: java.awt.Color bgcolor>"->"virtualinvoke <java.awt.Component: void setBackground(java.awt.Color)>";
 "virtualinvoke <java.awt.Component: void setBackground(java.awt.Color)>"->"virtualinvoke <java.awt.Component: java.awt.Toolkit getToolkit()>";
 "virtualinvoke <java.awt.Component: java.awt.Toolkit getToolkit()>"->"fieldget <typewriter: java.awt.Font txt_font>";
 "fieldget <typewriter: java.awt.Font txt_font>"->"virtualinvoke <java.awt.Toolkit: java.awt.FontMetrics getFontMetrics(java.awt.Font)>";
 "virtualinvoke <java.awt.Toolkit: java.awt.FontMetrics getFontMetrics(java.awt.Font)>"->"fieldput <typewriter: java.awt.FontMetrics fm>";
 "fieldput <typewriter: java.awt.FontMetrics fm>"->"fieldget <typewriter: java.awt.FontMetrics fm>";
 "fieldget <typewriter: java.awt.FontMetrics fm>"->"virtualinvoke <java.awt.FontMetrics: int getHeight()>";
 "virtualinvoke <java.awt.FontMetrics: int getHeight()>"->"fieldget <typewriter: java.awt.FontMetrics fm>";
 "fieldget <typewriter: java.awt.FontMetrics fm>"->"virtualinvoke <java.awt.FontMetrics: int getAscent()>";
 "virtualinvoke <java.awt.FontMetrics: int getAscent()>"->"virtualinvoke <java.awt.Component: java.awt.Toolkit getToolkit()>";
 "virtualinvoke <java.awt.Component: java.awt.Toolkit getToolkit()>"->"fieldget <typewriter: java.awt.Font cap_font>";
 "fieldget <typewriter: java.awt.Font cap_font>"->"virtualinvoke <java.awt.Toolkit: java.awt.FontMetrics getFontMetrics(java.awt.Font)>";
 "virtualinvoke <java.awt.Toolkit: java.awt.FontMetrics getFontMetrics(java.awt.Font)>"->"fieldput <typewriter: java.awt.FontMetrics fm>";
 "fieldput <typewriter: java.awt.FontMetrics fm>"->"fieldget <typewriter: java.awt.FontMetrics fm>";
 "fieldget <typewriter: java.awt.FontMetrics fm>"->"virtualinvoke <java.awt.FontMetrics: int getHeight()>";
 "virtualinvoke <java.awt.FontMetrics: int getHeight()>"->"fieldget <typewriter: java.awt.FontMetrics fm>";
 "fieldget <typewriter: java.awt.FontMetrics fm>"->"virtualinvoke <java.awt.FontMetrics: int getAscent()>";
 "virtualinvoke <java.awt.FontMetrics: int getAscent()>"->"new java.io.DataInputStream";
 "new java.io.DataInputStream"->"new java.net.URL";
 "new java.net.URL"->"virtualinvoke <java.applet.Applet: java.net.URL getCodeBase()>";
 "virtualinvoke <java.applet.Applet: java.net.URL getCodeBase()>"->"specialinvoke <java.net.URL: void <init>(java.net.URL,java.lang.String)>";
 "specialinvoke <java.net.URL: void <init>(java.net.URL,java.lang.String)>"->"virtualinvoke <java.net.URL: java.io.InputStream openStream()>";
 "virtualinvoke <java.net.URL: java.io.InputStream openStream()>"->"specialinvoke <java.io.DataInputStream: void <init>(java.io.InputStream)>";
 "specialinvoke <java.io.DataInputStream: void <init>(java.io.InputStream)>"->"goto load.r $r41";
 "goto load.r $r41"->"virtualinvoke <java.io.DataInputStream: java.lang.String readLine()>";
 "virtualinvoke <java.io.DataInputStream: java.lang.String readLine()>"->"goto load.r i0";
 "goto load.r i0"->"goto load.r r0";
 "goto load.r r0"->"new java.awt.Point";
 "new java.awt.Point"->"specialinvoke <java.awt.Point: void <init>(int,int)>";
 "specialinvoke <java.awt.Point: void <init>(int,int)>"->"fieldput <typewriter: java.awt.Point mouse_point>";
 "fieldput <typewriter: java.awt.Point mouse_point>"->"return";
"virtualinvoke <java.lang.String: int indexOf(java.lang.String)>";
 "virtualinvoke <java.lang.String: int indexOf(java.lang.String)>"->"fieldget <typewriter: java.util.Vector news_group>";
 "fieldget <typewriter: java.util.Vector news_group>"->"new java.lang.String";
 "new java.lang.String"->"specialinvoke <java.lang.String: void <init>(java.lang.String)>";
 "specialinvoke <java.lang.String: void <init>(java.lang.String)>"->"virtualinvoke <java.util.Vector: void addElement(java.lang.Object)>";
 "virtualinvoke <java.util.Vector: void addElement(java.lang.Object)>"->"virtualinvoke <java.lang.String: java.lang.String substring(int)>";
 "virtualinvoke <java.lang.String: java.lang.String substring(int)>"->"virtualinvoke <java.lang.String: int lastIndexOf(java.lang.String)>";
 "virtualinvoke <java.lang.String: int lastIndexOf(java.lang.String)>"->"virtualinvoke <java.lang.String: java.lang.String substring(int,int)>";
 "virtualinvoke <java.lang.String: java.lang.String substring(int,int)>"->"virtualinvoke <java.lang.String: int indexOf(java.lang.String)>";
 "virtualinvoke <java.lang.String: int indexOf(java.lang.String)>"->"virtualinvoke <java.lang.String: java.lang.String substring(int)>";
 "virtualinvoke <java.lang.String: java.lang.String substring(int)>"->"fieldget <typewriter: java.util.Vector all_caps>";
 "fieldget <typewriter: java.util.Vector all_caps>"->"virtualinvoke <typewriter: java.lang.String get_next_string(java.lang.String)>";
 "virtualinvoke <typewriter: java.lang.String get_next_string(java.lang.String)>"->"virtualinvoke <java.util.Vector: void addElement(java.lang.Object)>";
 "virtualinvoke <java.util.Vector: void addElement(java.lang.Object)>"->"fieldget <typewriter: java.util.Vector news_group>";
 "fieldget <typewriter: java.util.Vector news_group>"->"virtualinvoke <typewriter: java.lang.String get_next_string(java.lang.String)>";
 "virtualinvoke <typewriter: java.lang.String get_next_string(java.lang.String)>"->"virtualinvoke <java.util.Vector: void addElement(java.lang.Object)>";
 "virtualinvoke <java.util.Vector: void addElement(java.lang.Object)>"->"virtualinvoke <typewriter: java.lang.String get_next_string(java.lang.String)>";
 "virtualinvoke <typewriter: java.lang.String get_next_string(java.lang.String)>"->"virtualinvoke <java.lang.String: int length()>";
 "virtualinvoke <java.lang.String: int length()>"->"virtualinvoke <java.lang.String: int indexOf(java.lang.String)>";
 "virtualinvoke <java.lang.String: int indexOf(java.lang.String)>"->"virtualinvoke <java.lang.String: java.lang.String substring(int)>";
 "virtualinvoke <java.lang.String: java.lang.String substring(int)>"->"virtualinvoke <typewriter: java.lang.String get_next_string(java.lang.String)>";
 "virtualinvoke <typewriter: java.lang.String get_next_string(java.lang.String)>"->"virtualinvoke <typewriter: java.util.Vector parse_words(java.lang.String)>";
 "virtualinvoke <typewriter: java.util.Vector parse_words(java.lang.String)>"->"virtualinvoke <typewriter: java.util.Vector parse_lines(java.util.Vector)>";
 "virtualinvoke <typewriter: java.util.Vector parse_lines(java.util.Vector)>"->"goto load.i i42";
 "goto load.i i42"->"virtualinvoke <java.util.Vector: int size()>";
 "virtualinvoke <java.util.Vector: int size()>"->"fieldget <typewriter: java.util.Vector all_rects>";
 "fieldget <typewriter: java.util.Vector all_rects>"->"new java.awt.Rectangle";
 "new java.awt.Rectangle"->"virtualinvoke <java.awt.Component: java.awt.Dimension size()>";
 "virtualinvoke <java.awt.Component: java.awt.Dimension size()>"->"fieldget <java.awt.Dimension: int width>";
 "fieldget <java.awt.Dimension: int width>"->"specialinvoke <java.awt.Rectangle: void <init>(int,int,int,int)>";
 "specialinvoke <java.awt.Rectangle: void <init>(int,int,int,int)>"->"virtualinvoke <java.util.Vector: void addElement(java.lang.Object)>";
 "virtualinvoke <java.util.Vector: void addElement(java.lang.Object)>"->"fieldget <typewriter: java.util.Vector back_rects>";
 "fieldget <typewriter: java.util.Vector back_rects>"->"new java.awt.Rectangle";
 "new java.awt.Rectangle"->"virtualinvoke <java.awt.Component: java.awt.Dimension size()>";
 "virtualinvoke <java.awt.Component: java.awt.Dimension size()>"->"fieldget <java.awt.Dimension: int width>";
 "fieldget <java.awt.Dimension: int width>"->"specialinvoke <java.awt.Rectangle: void <init>(int,int,int,int)>";
 "specialinvoke <java.awt.Rectangle: void <init>(int,int,int,int)>"->"virtualinvoke <java.util.Vector: void addElement(java.lang.Object)>";
 "virtualinvoke <java.util.Vector: void addElement(java.lang.Object)>"->"virtualinvoke <java.lang.String: int indexOf(java.lang.String)>";
 "virtualinvoke <java.lang.String: int indexOf(java.lang.String)>"->"virtualinvoke <java.lang.String: java.lang.String substring(int)>";
 "virtualinvoke <java.lang.String: java.lang.String substring(int)>"->"fieldget <typewriter: java.util.Vector all_urls>";
 "fieldget <typewriter: java.util.Vector all_urls>"->"virtualinvoke <typewriter: java.lang.String get_next_string(java.lang.String)>";
 "virtualinvoke <typewriter: java.lang.String get_next_string(java.lang.String)>"->"virtualinvoke <typewriter: java.lang.String parse_url(java.lang.String)>";
 "virtualinvoke <typewriter: java.lang.String parse_url(java.lang.String)>"->"virtualinvoke <java.util.Vector: void addElement(java.lang.Object)>";
 "virtualinvoke <java.util.Vector: void addElement(java.lang.Object)>"->"virtualinvoke <java.io.DataInputStream: java.lang.String readLine()>";
 "virtualinvoke <java.io.DataInputStream: java.lang.String readLine()>"-> "virtualinvoke <java.io.DataInputStream: java.lang.String readLine()>"->"staticget <java.lang.System: java.io.PrintStream out>";
 "staticget <java.lang.System: java.io.PrintStream out>"->"virtualinvoke <java.io.PrintStream: void println(java.lang.Object)>";
"virtualinvoke <java.util.Vector: java.lang.Object elementAt(int)>";
 "virtualinvoke <java.util.Vector: java.lang.Object elementAt(int)>"->"virtualinvoke <java.lang.String: int length()>";
 "virtualinvoke <java.lang.String: int length()>"->"fieldget <typewriter: java.util.Vector news_group>";
 "fieldget <typewriter: java.util.Vector news_group>"->"virtualinvoke <java.util.Vector: void addElement(java.lang.Object)>";
 "virtualinvoke <java.util.Vector: void addElement(java.lang.Object)>"-> "specialinvoke <java.io.DataInputStream: void <init>(java.io.InputStream)>"-> "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"-> "virtualinvoke <java.lang.Integer: int intValue()>"-> "staticinvoke <java.lang.System: void exit(int)>"->"staticinvoke <java.lang.System: void exit(int)>";
}
