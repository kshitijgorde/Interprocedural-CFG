// 
// Decompiled by Procyon v0.5.30
// 

package b.a.c;

import b.a.a.e;

public class j implements a
{
    protected static double[] a;
    
    public static double a(final double n) {
        final double n2 = (n - 2451545.0) / 365.25 + 2000.0;
        final int c = e.c(n2);
        final double a = a(c - 1);
        final double a2 = a(c);
        final double a3 = a(c + 1);
        final double n3 = a2 - a;
        final double n4 = a3 - a2;
        final double n5 = n4 - n3;
        final double n6 = n2 - c;
        return a2 + n6 * (n3 + n4 + n6 * n5) / 2.0;
    }
    
    public static double b(final double n) {
        double n2 = n;
        for (int i = 0; i < 5; ++i) {
            n2 = n + a(n2) / 86400.0;
        }
        return n2;
    }
    
    public static double c(final double n) {
        return n - a(n) / 86400.0;
    }
    
    protected static double a(final int n) {
        if (n < -500) {
            final double n2 = (n - 1820.0) / 100.0;
            return -20.0 + 32.0 * n2 * n2;
        }
        if (n < 500) {
            final double n3 = n / 100.0;
            return 10583.6 - 1014.41 * n3 + 33.78311 * n3 * n3 - 5.952053 * n3 * n3 * n3 - 0.1798452 * n3 * n3 * n3 * n3 + 0.022174192 * n3 * n3 * n3 * n3 * n3 + 0.0090316521 * n3 * n3 * n3 * n3 * n3 * n3;
        }
        if (n < 1600) {
            final double n4 = (n - 1000.0) / 100.0;
            return 1574.2 - 556.01 * n4 + 71.23472 * n4 * n4 + 0.319781 * n4 * n4 * n4 - 0.8503463 * n4 * n4 * n4 * n4 - 0.005050998 * n4 * n4 * n4 * n4 * n4 + 0.0083572073 * n4 * n4 * n4 * n4 * n4 * n4;
        }
        if (n < 2015) {
            return j.a[n - 1600];
        }
        if (n < 2050) {
            final double n5 = n - 2000.0;
            return 69.92 + 0.32217 * n5 + 0.005589 * n5 * n5;
        }
        if (n < 2150) {
            return -20.0 + 32.0 * e.h((n - 1820.0) / 100.0) - 0.5628 * (2150.0 - n);
        }
        final double n6 = (n - 1820.0) / 100.0;
        return -20.0 + 32.0 * n6 * n6;
    }
    
    static {
        j.a = new double[] { 120.3, 120.3, 120.5, 120.6, 120.7, 120.9, 121.0, 121.1, 121.3, 121.5, 121.6, 121.9, 122.0, 122.2, 122.5, 122.7, 122.9, 123.2, 123.4, 123.7, 124.0, 119.0, 115.0, 110.0, 106.0, 102.0, 98.0, 95.0, 91.0, 88.0, 85.0, 82.0, 79.0, 77.0, 74.0, 72.0, 70.0, 67.0, 65.0, 63.0, 62.0, 60.0, 58.0, 57.0, 55.0, 54.0, 53.0, 51.0, 50.0, 49.0, 48.0, 47.0, 46.0, 45.0, 44.0, 43.0, 42.0, 41.0, 40.0, 38.0, 37.0, 36.0, 35.0, 34.0, 33.0, 32.0, 31.0, 30.0, 28.0, 27.0, 26.0, 25.0, 24.0, 23.0, 22.0, 21.0, 20.0, 19.0, 18.0, 17.0, 16.0, 15.0, 14.0, 14.0, 13.0, 12.0, 12.0, 11.0, 11.0, 10.0, 10.0, 10.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 11.0, 11.0, 11.0, 11.0, 11.0, 11.0, 11.0, 11.0, 11.0, 11.0, 11.0, 11.0, 11.0, 11.0, 11.0, 11.0, 11.0, 12.0, 12.0, 12.0, 12.0, 12.0, 12.0, 12.0, 12.0, 12.0, 12.0, 13.0, 13.0, 13.0, 13.0, 13.0, 13.0, 13.0, 14.0, 14.0, 14.0, 14.0, 14.0, 14.0, 14.0, 15.0, 15.0, 15.0, 15.0, 15.0, 15.0, 15.0, 16.0, 16.0, 16.0, 16.0, 16.0, 16.0, 16.0, 16.0, 16.0, 16.0, 17.0, 17.0, 17.0, 17.0, 17.0, 17.0, 17.0, 17.0, 17.0, 17.0, 17.0, 17.0, 17.0, 17.0, 17.0, 17.0, 17.0, 16.0, 16.0, 16.0, 16.0, 15.0, 15.0, 14.0, 14.0, 13.7, 13.4, 13.1, 12.9, 12.7, 12.6, 12.5, 12.5, 12.5, 12.5, 12.5, 12.5, 12.5, 12.5, 12.5, 12.5, 12.5, 12.4, 12.3, 12.2, 12.0, 11.7, 11.4, 11.1, 10.6, 10.2, 9.6, 9.8, 8.6, 8.0, 7.5, 7.0, 6.6, 6.3, 6.0, 5.8, 5.7, 5.6, 5.6, 5.6, 5.7, 5.8, 5.9, 6.1, 6.2, 6.3, 6.5, 6.6, 6.8, 6.9, 7.1, 7.2, 7.3, 7.4, 7.5, 7.6, 7.7, 7.7, 7.8, 7.8, 7.88, 7.82, 7.54, 6.97, 6.4, 6.02, 5.41, 4.1, 2.92, 1.82, 1.61, 0.1, -1.02, -1.28, -2.69, -3.24, -3.64, -4.54, -4.71, -5.11, -5.4, -5.42, -5.2, -5.46, -5.46, -5.79, -5.63, -5.64, -5.8, -5.66, -5.87, -6.01, -6.19, -6.64, -6.44, -6.47, -6.09, -5.76, -4.66, -3.74, -2.72, -1.54, -0.02, 1.24, 2.64, 3.86, 5.37, 6.14, 7.75, 9.13, 10.46, 11.53, 13.36, 14.65, 16.01, 17.2, 18.24, 19.06, 20.25, 20.95, 21.16, 22.25, 22.41, 23.03, 23.49, 23.62, 23.68, 24.49, 24.34, 24.08, 24.02, 24.0, 23.87, 23.95, 23.86, 23.93, 23.73, 23.92, 23.96, 24.02, 24.33, 24.83, 25.3, 25.7, 26.24, 26.77, 27.28, 27.78, 28.25, 28.71, 29.15, 29.57, 29.97, 30.36, 30.72, 31.07, 31.35, 31.68, 32.18, 32.68, 33.15, 33.59, 34.0, 34.47, 35.03, 35.73, 36.54, 37.43, 38.29, 39.2, 40.18, 41.17, 42.23, 43.37, 44.49, 45.48, 46.46, 47.52, 48.53, 49.59, 50.54, 51.38, 52.17, 52.96, 53.79, 54.34, 54.87, 55.32, 55.82, 56.3, 56.86, 57.57, 58.31, 59.12, 59.98, 60.79, 61.63, 62.3, 62.97, 63.47, 63.82, 64.09, 64.3, 64.47, 64.57, 64.68, 64.85, 65.15, 66.5, 67.9, 69.2, 70.6, 71.9, 73.3, 74.7 };
    }
}
