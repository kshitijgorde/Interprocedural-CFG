digraph "" {
"virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>";
 "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"->"fieldput <LaserBeamer: java.lang.String bg_color>";
 "fieldput <LaserBeamer: java.lang.String bg_color>"->"virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>";
 "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"->"fieldput <LaserBeamer: java.lang.String banner>";
 "fieldput <LaserBeamer: java.lang.String banner>"->"virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>";
 "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"->"staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>";
 "staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>"->"virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>";
 "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"->"staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>";
 "staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>"->"virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>";
 "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"->"staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>";
 "staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>"->"virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>";
 "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"->"staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>";
 "staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>"->"virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>";
 "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"->"staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>";
 "staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>"->"virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>";
 "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"->"staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>";
 "staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>"->"virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>";
 "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"->"staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>";
 "staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>"->"virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>";
 "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"->"staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>";
 "staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>"->"virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>";
 "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"->"fieldput <LaserBeamer: java.lang.String laser_origin_region>";
 "fieldput <LaserBeamer: java.lang.String laser_origin_region>"->"virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>";
 "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"->"fieldput <LaserBeamer: java.lang.String laser_origin_type>";
 "fieldput <LaserBeamer: java.lang.String laser_origin_type>"->"virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>";
 "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"->"staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>";
 "staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>"->"virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>";
 "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"->"staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>";
 "staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>"->"virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>";
 "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"->"fieldput <LaserBeamer: java.lang.String laser_type>";
 "fieldput <LaserBeamer: java.lang.String laser_type>"->"virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>";
 "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"->"fieldput <LaserBeamer: java.lang.String laser_beam_color>";
 "fieldput <LaserBeamer: java.lang.String laser_beam_color>"->"virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>";
 "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"->"fieldput <LaserBeamer: java.lang.String laser_spot_color>";
 "fieldput <LaserBeamer: java.lang.String laser_spot_color>"->"virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>";
 "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"->"staticinvoke <java.lang.Float: java.lang.Float valueOf(java.lang.String)>";
 "staticinvoke <java.lang.Float: java.lang.Float valueOf(java.lang.String)>"->"virtualinvoke <java.lang.Float: float floatValue()>";
 "virtualinvoke <java.lang.Float: float floatValue()>"->"virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>";
 "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"->"staticinvoke <java.lang.Float: java.lang.Float valueOf(java.lang.String)>";
 "staticinvoke <java.lang.Float: java.lang.Float valueOf(java.lang.String)>"->"virtualinvoke <java.lang.Float: float floatValue()>";
 "virtualinvoke <java.lang.Float: float floatValue()>"->"virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>";
 "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"->"staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>";
 "staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>"->"virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>";
 "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"->"staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>";
 "staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>"->"virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>";
 "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"->"fieldput <LaserBeamer: java.lang.String URLName>";
 "fieldput <LaserBeamer: java.lang.String URLName>"->"virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>";
 "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"->"fieldput <LaserBeamer: java.lang.String frame>";
 "fieldput <LaserBeamer: java.lang.String frame>"->"fieldget <LaserBeamer: java.lang.String URLName>";
 "fieldget <LaserBeamer: java.lang.String URLName>"->"fieldput <LaserBeamer: java.lang.String URLName>";
 "fieldput <LaserBeamer: java.lang.String URLName>"->"fieldget <LaserBeamer: java.lang.String frame>";
 "fieldget <LaserBeamer: java.lang.String frame>"->"fieldput <LaserBeamer: java.lang.String frame>";
 "fieldput <LaserBeamer: java.lang.String frame>"->"virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>";
 "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"->"staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>";
 "staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>"->"new java.util.StringTokenizer";
 "new java.util.StringTokenizer"->"fieldget <LaserBeamer: java.lang.String laser_origin_region>";
 "fieldget <LaserBeamer: java.lang.String laser_origin_region>"->"specialinvoke <java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>";
 "specialinvoke <java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>"->"virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>";
 "virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>"->"staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>";
 "staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>"->"virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>";
 "virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>"->"staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>";
 "staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>"->"virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>";
 "virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>"->"staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>";
 "staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>"->"virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>";
 "virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>"->"staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>";
 "staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>"->"new java.util.StringTokenizer";
 "new java.util.StringTokenizer"->"fieldget <LaserBeamer: java.lang.String bg_color>";
 "fieldget <LaserBeamer: java.lang.String bg_color>"->"specialinvoke <java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>";
 "specialinvoke <java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>"->"new java.awt.Color";
 "new java.awt.Color"->"virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>";
 "virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>"->"staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>";
 "staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>"->"virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>";
 "virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>"->"staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>";
 "staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>"->"virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>";
 "virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>"->"staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>";
 "staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>"->"specialinvoke <java.awt.Color: void <init>(int,int,int)>";
 "specialinvoke <java.awt.Color: void <init>(int,int,int)>"->"fieldput <LaserBeamer: java.awt.Color bgCol>";
 "fieldput <LaserBeamer: java.awt.Color bgCol>"->"new java.util.StringTokenizer";
 "new java.util.StringTokenizer"->"fieldget <LaserBeamer: java.lang.String laser_beam_color>";
 "fieldget <LaserBeamer: java.lang.String laser_beam_color>"->"specialinvoke <java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>";
 "specialinvoke <java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>"->"new java.awt.Color";
 "new java.awt.Color"->"virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>";
 "virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>"->"staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>";
 "staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>"->"virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>";
 "virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>"->"staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>";
 "staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>"->"virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>";
 "virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>"->"staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>";
 "staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>"->"specialinvoke <java.awt.Color: void <init>(int,int,int)>";
 "specialinvoke <java.awt.Color: void <init>(int,int,int)>"->"fieldput <LaserBeamer: java.awt.Color laserColBeam>";
 "fieldput <LaserBeamer: java.awt.Color laserColBeam>"->"staticinvoke <java.awt.Color: float[] RGBtoHSB(int,int,int,float[])>";
 "staticinvoke <java.awt.Color: float[] RGBtoHSB(int,int,int,float[])>"->"new java.util.StringTokenizer";
 "new java.util.StringTokenizer"->"fieldget <LaserBeamer: java.lang.String laser_spot_color>";
 "fieldget <LaserBeamer: java.lang.String laser_spot_color>"->"specialinvoke <java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>";
 "specialinvoke <java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>"->"virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>";
 "virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>"->"staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>";
 "staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>"->"virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>";
 "virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>"->"staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>";
 "staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>"->"virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>";
 "virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>"->"staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>";
 "staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>"->"goto load.r r0";
 "goto load.r r0"->"virtualinvoke <java.awt.Component: java.awt.Dimension size()>";
 "virtualinvoke <java.awt.Component: java.awt.Dimension size()>"->"fieldget <java.awt.Dimension: int width>";
 "fieldget <java.awt.Dimension: int width>"->"fieldget <java.awt.Dimension: int height>";
 "fieldget <java.awt.Dimension: int height>"->"new java.awt.Dimension";
 "new java.awt.Dimension"->"specialinvoke <java.awt.Dimension: void <init>(int,int)>";
 "specialinvoke <java.awt.Dimension: void <init>(int,int)>"->"fieldput <LaserBeamer: java.awt.Dimension m_dimImage>";
 "fieldput <LaserBeamer: java.awt.Dimension m_dimImage>"->"virtualinvoke <java.awt.Component: java.awt.Image createImage(int,int)>";
 "virtualinvoke <java.awt.Component: java.awt.Image createImage(int,int)>"->"fieldput <LaserBeamer: java.awt.Image m_image>";
 "fieldput <LaserBeamer: java.awt.Image m_image>"->"fieldget <LaserBeamer: java.awt.Image m_image>";
 "fieldget <LaserBeamer: java.awt.Image m_image>"->"virtualinvoke <java.awt.Image: java.awt.Graphics getGraphics()>";
 "virtualinvoke <java.awt.Image: java.awt.Graphics getGraphics()>"->"fieldput <LaserBeamer: java.awt.Graphics g>";
 "fieldput <LaserBeamer: java.awt.Graphics g>"->"new java.awt.MediaTracker";
 "new java.awt.MediaTracker"->"specialinvoke <java.awt.MediaTracker: void <init>(java.awt.Component)>";
 "specialinvoke <java.awt.MediaTracker: void <init>(java.awt.Component)>"->"fieldput <LaserBeamer: java.awt.MediaTracker tracker>";
 "fieldput <LaserBeamer: java.awt.MediaTracker tracker>"->"virtualinvoke <java.applet.Applet: java.net.URL getDocumentBase()>";
 "virtualinvoke <java.applet.Applet: java.net.URL getDocumentBase()>"->"fieldget <LaserBeamer: java.lang.String banner>";
 "fieldget <LaserBeamer: java.lang.String banner>"->"virtualinvoke <java.applet.Applet: java.awt.Image getImage(java.net.URL,java.lang.String)>";
 "virtualinvoke <java.applet.Applet: java.awt.Image getImage(java.net.URL,java.lang.String)>"->"fieldput <LaserBeamer: java.awt.Image Banner>";
 "fieldput <LaserBeamer: java.awt.Image Banner>"->"fieldget <LaserBeamer: java.awt.MediaTracker tracker>";
 "fieldget <LaserBeamer: java.awt.MediaTracker tracker>"->"fieldget <LaserBeamer: java.awt.Image Banner>";
 "fieldget <LaserBeamer: java.awt.Image Banner>"->"virtualinvoke <java.awt.MediaTracker: void addImage(java.awt.Image,int)>";
 "virtualinvoke <java.awt.MediaTracker: void addImage(java.awt.Image,int)>"->"virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>";
 "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"->"staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>";
 "staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>"->"virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>";
 "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"->"staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>";
 "staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>"->"fieldget <LaserBeamer: java.awt.Color bgCol>";
 "fieldget <LaserBeamer: java.awt.Color bgCol>"->"virtualinvoke <java.awt.Component: void setBackground(java.awt.Color)>";
 "virtualinvoke <java.awt.Component: void setBackground(java.awt.Color)>"->"return";
"new java.awt.Color";
 "new java.awt.Color"->"specialinvoke <java.awt.Color: void <init>(int,int,int)>";
 "specialinvoke <java.awt.Color: void <init>(int,int,int)>"->"fieldput <LaserBeamer: java.awt.Color laserColSpot>";
}
