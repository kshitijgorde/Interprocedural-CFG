digraph "" {
"new java.util.Hashtable";
 "new java.util.Hashtable"->"specialinvoke <java.util.Hashtable: void <init>(int)>";
 "specialinvoke <java.util.Hashtable: void <init>(int)>"->"fieldput <ScrollApplet: java.util.Hashtable 'new'>";
 "fieldput <ScrollApplet: java.util.Hashtable 'new'>"->"virtualinvoke <ScrollApplet: java.lang.Object getProp(java.lang.String)>";
 "virtualinvoke <ScrollApplet: java.lang.Object getProp(java.lang.String)>"->"virtualinvoke <java.lang.Boolean: boolean booleanValue()>";
 "virtualinvoke <java.lang.Boolean: boolean booleanValue()>"->"virtualinvoke <ScrollApplet: java.lang.Object getProp(java.lang.String)>";
 "virtualinvoke <ScrollApplet: java.lang.Object getProp(java.lang.String)>"->"virtualinvoke <java.lang.Integer: int intValue()>";
 "virtualinvoke <java.lang.Integer: int intValue()>"->"goto load.r r0";
 "goto load.r r0"->"specialinvoke <a: void <init>(java.applet.Applet)>";
 "specialinvoke <a: void <init>(java.applet.Applet)>"->"new java.awt.Panel";
 "new java.awt.Panel"->"specialinvoke <java.awt.Panel: void <init>()>";
 "specialinvoke <java.awt.Panel: void <init>()>"->"fieldput <ScrollApplet: java.awt.Panel 'int'>";
 "fieldput <ScrollApplet: java.awt.Panel 'int'>"->"virtualinvoke <a: java.lang.String 'if'()>";
 "virtualinvoke <a: java.lang.String 'if'()>"->"staticput <h: java.lang.String for>";
 "staticput <h: java.lang.String for>"->"virtualinvoke <a: java.net.URL a()>";
 "virtualinvoke <a: java.net.URL a()>"->"virtualinvoke <java.net.URL: java.lang.String toString()>";
 "virtualinvoke <java.net.URL: java.lang.String toString()>"->"staticput <h: java.lang.String do>";
 "staticput <h: java.lang.String do>"->"virtualinvoke <ScrollApplet: java.lang.Object getProp(java.lang.String)>";
 "virtualinvoke <ScrollApplet: java.lang.Object getProp(java.lang.String)>"->"virtualinvoke <java.lang.Integer: java.lang.String toString()>";
 "virtualinvoke <java.lang.Integer: java.lang.String toString()>"->"staticput <h: java.lang.String 'if'>";
 "staticput <h: java.lang.String 'if'>"->"virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>";
 "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"->"virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>";
 "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"->"staticput <h: java.lang.String 'int'>";
 "staticput <h: java.lang.String 'int'>"->"virtualinvoke <ScrollApplet: java.lang.Object getProp(java.lang.String)>";
 "virtualinvoke <ScrollApplet: java.lang.Object getProp(java.lang.String)>"->"virtualinvoke <java.lang.Boolean: boolean booleanValue()>";
 "virtualinvoke <java.lang.Boolean: boolean booleanValue()>"->"new java.awt.GridBagLayout";
 "new java.awt.GridBagLayout"->"specialinvoke <java.awt.GridBagLayout: void <init>()>";
 "specialinvoke <java.awt.GridBagLayout: void <init>()>"->"fieldput <ScrollApplet: java.awt.GridBagLayout 'null'>";
 "fieldput <ScrollApplet: java.awt.GridBagLayout 'null'>"->"new java.awt.GridBagConstraints";
 "new java.awt.GridBagConstraints"->"specialinvoke <java.awt.GridBagConstraints: void <init>()>";
 "specialinvoke <java.awt.GridBagConstraints: void <init>()>"->"fieldput <ScrollApplet: java.awt.GridBagConstraints 'void'>";
 "fieldput <ScrollApplet: java.awt.GridBagConstraints 'void'>"->"fieldget <ScrollApplet: java.awt.Panel 'int'>";
 "fieldget <ScrollApplet: java.awt.Panel 'int'>"->"fieldget <ScrollApplet: java.awt.GridBagLayout 'null'>";
 "fieldget <ScrollApplet: java.awt.GridBagLayout 'null'>"->"virtualinvoke <java.awt.Container: void setLayout(java.awt.LayoutManager)>";
 "virtualinvoke <java.awt.Container: void setLayout(java.awt.LayoutManager)>"->"virtualinvoke <ScrollApplet: java.lang.Object getProp(java.lang.String)>";
 "virtualinvoke <ScrollApplet: java.lang.Object getProp(java.lang.String)>"->"virtualinvoke <i: void setBackground(java.awt.Color)>";
 "virtualinvoke <i: void setBackground(java.awt.Color)>"->"virtualinvoke <ScrollApplet: java.lang.Object getProp(java.lang.String)>";
 "virtualinvoke <ScrollApplet: java.lang.Object getProp(java.lang.String)>"->"virtualinvoke <ScrollApplet: java.lang.Object getProp(java.lang.String)>";
 "virtualinvoke <ScrollApplet: java.lang.Object getProp(java.lang.String)>"->"virtualinvoke <i: void a(java.awt.Color,java.awt.Color)>";
 "virtualinvoke <i: void a(java.awt.Color,java.awt.Color)>"->"virtualinvoke <ScrollApplet: java.lang.Object getProp(java.lang.String)>";
 "virtualinvoke <ScrollApplet: java.lang.Object getProp(java.lang.String)>"->"virtualinvoke <ScrollApplet: java.lang.Object getProp(java.lang.String)>";
 "virtualinvoke <ScrollApplet: java.lang.Object getProp(java.lang.String)>"->"virtualinvoke <i: void a(java.awt.Font,java.awt.Font)>";
 "virtualinvoke <i: void a(java.awt.Font,java.awt.Font)>"->"virtualinvoke <ScrollApplet: java.lang.Object getProp(java.lang.String)>";
 "virtualinvoke <ScrollApplet: java.lang.Object getProp(java.lang.String)>"->"virtualinvoke <java.lang.Boolean: boolean booleanValue()>";
 "virtualinvoke <java.lang.Boolean: boolean booleanValue()>"->"ifeq return";
 "ifeq return"->"virtualinvoke <ScrollApplet: java.lang.Object getProp(java.lang.String)>";
 "virtualinvoke <ScrollApplet: java.lang.Object getProp(java.lang.String)>"->"virtualinvoke <i: void setBackground(java.awt.Color)>";
 "virtualinvoke <i: void setBackground(java.awt.Color)>"->"virtualinvoke <ScrollApplet: java.lang.Object getProp(java.lang.String)>";
 "virtualinvoke <ScrollApplet: java.lang.Object getProp(java.lang.String)>"->"virtualinvoke <ScrollApplet: java.lang.Object getProp(java.lang.String)>";
 "virtualinvoke <ScrollApplet: java.lang.Object getProp(java.lang.String)>"->"virtualinvoke <i: void a(java.awt.Color,java.awt.Color)>";
 "virtualinvoke <i: void a(java.awt.Color,java.awt.Color)>"->"virtualinvoke <ScrollApplet: java.lang.Object getProp(java.lang.String)>";
 "virtualinvoke <ScrollApplet: java.lang.Object getProp(java.lang.String)>"->"virtualinvoke <ScrollApplet: java.lang.Object getProp(java.lang.String)>";
 "virtualinvoke <ScrollApplet: java.lang.Object getProp(java.lang.String)>"->"virtualinvoke <i: void a(java.awt.Font,java.awt.Font)>";
 "virtualinvoke <i: void a(java.awt.Font,java.awt.Font)>"->"return";
}
