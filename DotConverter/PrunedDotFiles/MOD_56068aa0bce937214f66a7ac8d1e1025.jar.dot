digraph "" {
"new java.awt.Color";
 "new java.awt.Color"->"specialinvoke <java.awt.Color: void <init>(int,int,int)>";
 "specialinvoke <java.awt.Color: void <init>(int,int,int)>"->"virtualinvoke <LVInter: java.awt.Color readColorParameter(java.lang.String,java.awt.Color)>";
 "virtualinvoke <LVInter: java.awt.Color readColorParameter(java.lang.String,java.awt.Color)>"->"fieldput <LVInter: java.awt.Color bg1>";
 "fieldput <LVInter: java.awt.Color bg1>"->"fieldget <LVInter: java.awt.Color bg1>";
 "fieldget <LVInter: java.awt.Color bg1>"->"virtualinvoke <java.awt.Component: void setBackground(java.awt.Color)>";
 "virtualinvoke <java.awt.Component: void setBackground(java.awt.Color)>"->"virtualinvoke <java.awt.Component: java.awt.Container getParent()>";
 "virtualinvoke <java.awt.Component: java.awt.Container getParent()>"->"fieldget <LVInter: java.awt.Color bg1>";
 "fieldget <LVInter: java.awt.Color bg1>"->"virtualinvoke <java.awt.Component: void setBackground(java.awt.Color)>";
 "virtualinvoke <java.awt.Component: void setBackground(java.awt.Color)>"->"virtualinvoke <java.awt.Component: java.awt.Container getParent()>";
 "virtualinvoke <java.awt.Component: java.awt.Container getParent()>"->"virtualinvoke <java.awt.Component: void repaint()>";
 "virtualinvoke <java.awt.Component: void repaint()>"->"fieldget <LVInter: java.awt.Color bg1>";
 "fieldget <LVInter: java.awt.Color bg1>"->"virtualinvoke <LVInter: java.awt.Color readColorParameter(java.lang.String,java.awt.Color)>";
 "virtualinvoke <LVInter: java.awt.Color readColorParameter(java.lang.String,java.awt.Color)>"->"fieldput <LVInter: java.awt.Color bg2>";
 "fieldput <LVInter: java.awt.Color bg2>"->"new java.awt.Color";
 "new java.awt.Color"->"specialinvoke <java.awt.Color: void <init>(int,int,int)>";
 "specialinvoke <java.awt.Color: void <init>(int,int,int)>"->"virtualinvoke <LVInter: java.awt.Color readColorParameter(java.lang.String,java.awt.Color)>";
 "virtualinvoke <LVInter: java.awt.Color readColorParameter(java.lang.String,java.awt.Color)>"->"fieldput <LVInter: java.awt.Color fg1>";
 "fieldput <LVInter: java.awt.Color fg1>"->"fieldget <LVInter: java.awt.Color fg1>";
 "fieldget <LVInter: java.awt.Color fg1>"->"virtualinvoke <LVInter: java.awt.Color readColorParameter(java.lang.String,java.awt.Color)>";
 "virtualinvoke <LVInter: java.awt.Color readColorParameter(java.lang.String,java.awt.Color)>"->"fieldput <LVInter: java.awt.Color fg2>";
 "fieldput <LVInter: java.awt.Color fg2>"->"virtualinvoke <LVInter: java.lang.String readStringParameter(java.lang.String,java.lang.String)>";
 "virtualinvoke <LVInter: java.lang.String readStringParameter(java.lang.String,java.lang.String)>"->"fieldput <LVInter: java.lang.String defaultMessage>";
 "fieldput <LVInter: java.lang.String defaultMessage>"->"virtualinvoke <LVInter: java.lang.String readStringParameter(java.lang.String,java.lang.String)>";
 "virtualinvoke <LVInter: java.lang.String readStringParameter(java.lang.String,java.lang.String)>"->"fieldput <LVInter: java.lang.String defaultLink>";
 "fieldput <LVInter: java.lang.String defaultLink>"->"virtualinvoke <LVInter: java.lang.String readStringParameter(java.lang.String,java.lang.String)>";
 "virtualinvoke <LVInter: java.lang.String readStringParameter(java.lang.String,java.lang.String)>"->"fieldput <LVInter: java.lang.String fileName>";
 "fieldput <LVInter: java.lang.String fileName>"->"new java.awt.Font";
 "new java.awt.Font"->"specialinvoke <java.awt.Font: void <init>(java.lang.String,int,int)>";
 "specialinvoke <java.awt.Font: void <init>(java.lang.String,int,int)>"->"virtualinvoke <LVInter: java.awt.Font readFontParameter(java.lang.String,java.awt.Font)>";
 "virtualinvoke <LVInter: java.awt.Font readFontParameter(java.lang.String,java.awt.Font)>"->"fieldput <LVInter: java.awt.Font font>";
 "fieldput <LVInter: java.awt.Font font>"->"virtualinvoke <LVInter: java.lang.String readStringParameter(java.lang.String,java.lang.String)>";
 "virtualinvoke <LVInter: java.lang.String readStringParameter(java.lang.String,java.lang.String)>"->"fieldput <LVInter: java.lang.String frame>";
 "fieldput <LVInter: java.lang.String frame>"->"virtualinvoke <LVInter: int readIntParameter(java.lang.String,int)>";
 "virtualinvoke <LVInter: int readIntParameter(java.lang.String,int)>"->"virtualinvoke <LVInter: int readIntParameter(java.lang.String,int)>";
 "virtualinvoke <LVInter: int readIntParameter(java.lang.String,int)>"->"virtualinvoke <java.awt.Component: java.awt.Dimension size()>";
 "virtualinvoke <java.awt.Component: java.awt.Dimension size()>"->"fieldget <java.awt.Dimension: int width>";
 "fieldget <java.awt.Dimension: int width>"->"virtualinvoke <java.awt.Component: java.awt.Dimension size()>";
 "virtualinvoke <java.awt.Component: java.awt.Dimension size()>"->"fieldget <java.awt.Dimension: int height>";
 "fieldget <java.awt.Dimension: int height>"->"fieldput <LVInter: java.net.URL link>";
 "fieldput <LVInter: java.net.URL link>"->"fieldget <LVInter: java.lang.String defaultLink>";
 "fieldget <LVInter: java.lang.String defaultLink>"->"ifcmpeq.r return";
 "ifcmpeq.r return"->"new java.net.URL";
 "new java.net.URL"->"virtualinvoke <java.applet.Applet: java.net.URL getDocumentBase()>";
 "virtualinvoke <java.applet.Applet: java.net.URL getDocumentBase()>"->"fieldget <LVInter: java.lang.String defaultLink>";
 "fieldget <LVInter: java.lang.String defaultLink>"->"specialinvoke <java.net.URL: void <init>(java.net.URL,java.lang.String)>";
 "specialinvoke <java.net.URL: void <init>(java.net.URL,java.lang.String)>"->"fieldput <LVInter: java.net.URL link>";
 "fieldput <LVInter: java.net.URL link>"->"fieldget <LVInter: java.net.URL link>";
 "fieldget <LVInter: java.net.URL link>"->"virtualinvoke <java.net.URL: java.lang.String toExternalForm()>";
 "virtualinvoke <java.net.URL: java.lang.String toExternalForm()>"->"fieldput <LVInter: java.lang.String defaultLink>";
 "fieldput <LVInter: java.lang.String defaultLink>"->"return";
 "virtualinvoke <java.net.URL: java.lang.String toExternalForm()>"->"staticget <java.lang.System: java.io.PrintStream err>";
 "staticget <java.lang.System: java.io.PrintStream err>"->"virtualinvoke <java.io.PrintStream: void println(java.lang.String)>";
 "virtualinvoke <java.io.PrintStream: void println(java.lang.String)>"->"return";
 "ifcmpeq.r return"->"return";
}
