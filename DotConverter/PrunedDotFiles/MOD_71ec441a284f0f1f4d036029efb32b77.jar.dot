digraph "" {
"staticget <java.lang.System: java.io.PrintStream out>";
 "staticget <java.lang.System: java.io.PrintStream out>"->"virtualinvoke <ryCoolStrip: java.lang.String getAppletInfo()>";
 "virtualinvoke <ryCoolStrip: java.lang.String getAppletInfo()>"->"virtualinvoke <java.io.PrintStream: void println(java.lang.String)>";
 "virtualinvoke <java.io.PrintStream: void println(java.lang.String)>"->"virtualinvoke <java.applet.Applet: java.net.URL getDocumentBase()>";
 "virtualinvoke <java.applet.Applet: java.net.URL getDocumentBase()>"->"virtualinvoke <java.net.URL: java.lang.String toString()>";
 "virtualinvoke <java.net.URL: java.lang.String toString()>"->"virtualinvoke <java.lang.String: java.lang.String toLowerCase()>";
 "virtualinvoke <java.lang.String: java.lang.String toLowerCase()>"->"virtualinvoke <java.lang.String: boolean startsWith(java.lang.String)>";
 "virtualinvoke <java.lang.String: boolean startsWith(java.lang.String)>"->"goto load.r r0";
 "goto load.r r0"->"virtualinvoke <java.awt.Component: java.awt.Dimension size()>";
 "virtualinvoke <java.awt.Component: java.awt.Dimension size()>"->"fieldget <java.awt.Dimension: int width>";
 "fieldget <java.awt.Dimension: int width>"->"virtualinvoke <java.awt.Component: java.awt.Dimension size()>";
 "virtualinvoke <java.awt.Component: java.awt.Dimension size()>"->"fieldget <java.awt.Dimension: int height>";
 "fieldget <java.awt.Dimension: int height>"->"virtualinvoke <java.awt.Component: java.awt.Image createImage(int,int)>";
 "virtualinvoke <java.awt.Component: java.awt.Image createImage(int,int)>"->"fieldput <ryCoolStrip: java.awt.Image ŀ>";
 "fieldput <ryCoolStrip: java.awt.Image ŀ>"->"fieldget <ryCoolStrip: java.awt.Image ŀ>";
 "fieldget <ryCoolStrip: java.awt.Image ŀ>"->"virtualinvoke <java.awt.Image: java.awt.Graphics getGraphics()>";
 "virtualinvoke <java.awt.Image: java.awt.Graphics getGraphics()>"->"fieldput <ryCoolStrip: java.awt.Graphics Ł>";
 "fieldput <ryCoolStrip: java.awt.Graphics Ł>"->"new java.awt.Color";
 "new java.awt.Color"->"fieldget <ryCoolStrip: java.awt.Color œ>";
 "fieldget <ryCoolStrip: java.awt.Color œ>"->"specialinvoke <ryCoolStrip: int Ŝ(java.lang.String,java.awt.Color)>";
 "specialinvoke <ryCoolStrip: int Ŝ(java.lang.String,java.awt.Color)>"->"specialinvoke <java.awt.Color: void <init>(int)>";
 "specialinvoke <java.awt.Color: void <init>(int)>"->"fieldput <ryCoolStrip: java.awt.Color Ŕ>";
 "fieldput <ryCoolStrip: java.awt.Color Ŕ>"->"new java.awt.Color";
 "new java.awt.Color"->"fieldget <ryCoolStrip: java.awt.Color ő>";
 "fieldget <ryCoolStrip: java.awt.Color ő>"->"specialinvoke <ryCoolStrip: int Ŝ(java.lang.String,java.awt.Color)>";
 "specialinvoke <ryCoolStrip: int Ŝ(java.lang.String,java.awt.Color)>"->"specialinvoke <java.awt.Color: void <init>(int)>";
 "specialinvoke <java.awt.Color: void <init>(int)>"->"fieldput <ryCoolStrip: java.awt.Color Œ>";
 "fieldput <ryCoolStrip: java.awt.Color Œ>"->"new java.awt.Color";
 "new java.awt.Color"->"fieldget <ryCoolStrip: java.awt.Color ŏ>";
 "fieldget <ryCoolStrip: java.awt.Color ŏ>"->"specialinvoke <ryCoolStrip: int Ŝ(java.lang.String,java.awt.Color)>";
 "specialinvoke <ryCoolStrip: int Ŝ(java.lang.String,java.awt.Color)>"->"specialinvoke <java.awt.Color: void <init>(int)>";
 "specialinvoke <java.awt.Color: void <init>(int)>"->"fieldput <ryCoolStrip: java.awt.Color Ő>";
 "fieldput <ryCoolStrip: java.awt.Color Ő>"->"new java.awt.Color";
 "new java.awt.Color"->"fieldget <ryCoolStrip: java.awt.Color ō>";
 "fieldget <ryCoolStrip: java.awt.Color ō>"->"specialinvoke <ryCoolStrip: int Ŝ(java.lang.String,java.awt.Color)>";
 "specialinvoke <ryCoolStrip: int Ŝ(java.lang.String,java.awt.Color)>"->"specialinvoke <java.awt.Color: void <init>(int)>";
 "specialinvoke <java.awt.Color: void <init>(int)>"->"fieldput <ryCoolStrip: java.awt.Color Ŏ>";
 "fieldput <ryCoolStrip: java.awt.Color Ŏ>"->"new java.awt.Color";
 "new java.awt.Color"->"fieldget <ryCoolStrip: java.awt.Color ł>";
 "fieldget <ryCoolStrip: java.awt.Color ł>"->"specialinvoke <ryCoolStrip: int Ŝ(java.lang.String,java.awt.Color)>";
 "specialinvoke <ryCoolStrip: int Ŝ(java.lang.String,java.awt.Color)>"->"specialinvoke <java.awt.Color: void <init>(int)>";
 "specialinvoke <java.awt.Color: void <init>(int)>"->"fieldput <ryCoolStrip: java.awt.Color Ń>";
 "fieldput <ryCoolStrip: java.awt.Color Ń>"->"new java.awt.Color";
 "new java.awt.Color"->"fieldget <ryCoolStrip: java.awt.Color ŋ>";
 "fieldget <ryCoolStrip: java.awt.Color ŋ>"->"specialinvoke <ryCoolStrip: int Ŝ(java.lang.String,java.awt.Color)>";
 "specialinvoke <ryCoolStrip: int Ŝ(java.lang.String,java.awt.Color)>"->"specialinvoke <java.awt.Color: void <init>(int)>";
 "specialinvoke <java.awt.Color: void <init>(int)>"->"fieldput <ryCoolStrip: java.awt.Color Ō>";
 "fieldput <ryCoolStrip: java.awt.Color Ō>"->"new java.awt.Color";
 "new java.awt.Color"->"fieldget <ryCoolStrip: java.awt.Color Ň>";
 "fieldget <ryCoolStrip: java.awt.Color Ň>"->"specialinvoke <ryCoolStrip: int Ŝ(java.lang.String,java.awt.Color)>";
 "specialinvoke <ryCoolStrip: int Ŝ(java.lang.String,java.awt.Color)>"->"specialinvoke <java.awt.Color: void <init>(int)>";
 "specialinvoke <java.awt.Color: void <init>(int)>"->"fieldput <ryCoolStrip: java.awt.Color ň>";
 "fieldput <ryCoolStrip: java.awt.Color ň>"->"new java.awt.Color";
 "new java.awt.Color"->"fieldget <ryCoolStrip: java.awt.Color Ŏ>";
 "fieldget <ryCoolStrip: java.awt.Color Ŏ>"->"specialinvoke <ryCoolStrip: int Ŝ(java.lang.String,java.awt.Color)>";
 "specialinvoke <ryCoolStrip: int Ŝ(java.lang.String,java.awt.Color)>"->"specialinvoke <java.awt.Color: void <init>(int)>";
 "specialinvoke <java.awt.Color: void <init>(int)>"->"fieldput <ryCoolStrip: java.awt.Color ņ>";
 "fieldput <ryCoolStrip: java.awt.Color ņ>"->"new java.awt.Color";
 "new java.awt.Color"->"fieldget <ryCoolStrip: java.awt.Color ń>";
 "fieldget <ryCoolStrip: java.awt.Color ń>"->"specialinvoke <ryCoolStrip: int Ŝ(java.lang.String,java.awt.Color)>";
 "specialinvoke <ryCoolStrip: int Ŝ(java.lang.String,java.awt.Color)>"->"specialinvoke <java.awt.Color: void <init>(int)>";
 "specialinvoke <java.awt.Color: void <init>(int)>"->"fieldput <ryCoolStrip: java.awt.Color Ņ>";
 "fieldput <ryCoolStrip: java.awt.Color Ņ>"->"new java.awt.Color";
 "new java.awt.Color"->"fieldget <ryCoolStrip: java.awt.Color ŉ>";
 "fieldget <ryCoolStrip: java.awt.Color ŉ>"->"specialinvoke <ryCoolStrip: int Ŝ(java.lang.String,java.awt.Color)>";
 "specialinvoke <ryCoolStrip: int Ŝ(java.lang.String,java.awt.Color)>"->"specialinvoke <java.awt.Color: void <init>(int)>";
 "specialinvoke <java.awt.Color: void <init>(int)>"->"fieldput <ryCoolStrip: java.awt.Color Ŋ>";
 "fieldput <ryCoolStrip: java.awt.Color Ŋ>"->"fieldget <ryCoolStrip: java.awt.Color Ŕ>";
 "fieldget <ryCoolStrip: java.awt.Color Ŕ>"->"virtualinvoke <java.awt.Component: void setBackground(java.awt.Color)>";
 "virtualinvoke <java.awt.Component: void setBackground(java.awt.Color)>"->"virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>";
 "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"->"ifnonnull new java.util.StringTokenizer";
 "ifnonnull new java.util.StringTokenizer"->"new java.util.StringTokenizer";
 "new java.util.StringTokenizer"->"specialinvoke <java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>";
 "specialinvoke <java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>"->"virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>";
 "virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>"->"virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>";
 "virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>"->"virtualinvoke <java.lang.String: boolean equalsIgnoreCase(java.lang.String)>";
 "virtualinvoke <java.lang.String: boolean equalsIgnoreCase(java.lang.String)>"->"virtualinvoke <java.lang.String: boolean equalsIgnoreCase(java.lang.String)>";
 "virtualinvoke <java.lang.String: boolean equalsIgnoreCase(java.lang.String)>"->"virtualinvoke <java.lang.String: boolean equalsIgnoreCase(java.lang.String)>";
 "virtualinvoke <java.lang.String: boolean equalsIgnoreCase(java.lang.String)>"->"virtualinvoke <java.lang.String: boolean equalsIgnoreCase(java.lang.String)>";
 "virtualinvoke <java.lang.String: boolean equalsIgnoreCase(java.lang.String)>"->"new java.awt.Font";
 "new java.awt.Font"->"virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>";
 "virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>"->"staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>";
 "staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>"->"specialinvoke <java.awt.Font: void <init>(java.lang.String,int,int)>";
 "specialinvoke <java.awt.Font: void <init>(java.lang.String,int,int)>"->"fieldput <ryCoolStrip: java.awt.Font Ľ>";
 "fieldput <ryCoolStrip: java.awt.Font Ľ>"->"fieldget <ryCoolStrip: java.awt.Font Ľ>";
 "fieldget <ryCoolStrip: java.awt.Font Ľ>"->"virtualinvoke <java.awt.Component: java.awt.FontMetrics getFontMetrics(java.awt.Font)>";
 "virtualinvoke <java.awt.Component: java.awt.FontMetrics getFontMetrics(java.awt.Font)>"->"fieldput <ryCoolStrip: java.awt.FontMetrics ļ>";
 "fieldput <ryCoolStrip: java.awt.FontMetrics ļ>"->"return";
}
