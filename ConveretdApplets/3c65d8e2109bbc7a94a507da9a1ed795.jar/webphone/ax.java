// 
// Decompiled by Procyon v0.5.30
// 

package webphone;

public class ax
{
    private static final short[] do;
    private static final int[] if;
    private static byte[] a;
    
    public ax() {
        int n = 0;
        for (int i = 0; i < 65536; ++i) {
            if (i == ax.if[n]) {
                ++n;
            }
            if (n < 128) {
                ax.a[i] = (byte)(n ^ 0xFF);
            }
            else {
                ax.a[i] = (byte)(n & 0x7F);
            }
        }
    }
    
    public void a(final byte[] array, final int n, final byte[] array2) {
        for (int i = 0; i < n; i += 2) {
            array2[i / 2] = a((short)(array[i] << 8 | (array[i + 1] & 0xFF)));
        }
    }
    
    public void if(final byte[] array, final int n, final byte[] array2) {
        int n2 = 0;
        for (int i = 0; i < n; ++i) {
            final short a = a(array[i]);
            array2[n2] = (byte)(a >> 8 & 0xFF);
            ++n2;
            array2[n2] = (byte)(a & 0xFF);
            ++n2;
        }
    }
    
    static byte a(short n) {
        int n2 = n & 0x8000;
        if (n2 != 0) {
            n = (short)(-n);
            n2 = 128;
        }
        if (n > 32635) {
            n = 32635;
        }
        final short n3 = (short)(n + 132);
        short n4;
        int n5;
        for (n4 = (short)(n3 << 1), n5 = 7; n5 > 0 && (n4 & 0x8000) == 0x0; n4 <<= 1, --n5) {}
        return (byte)~(byte)(n2 | n5 << 4 | ((short)(n3 >> n5 + 3) & 0xF));
    }
    
    static short a(final byte b) {
        final byte b2 = (byte)~b;
        final int n = b2 & 0x80;
        final int n2 = (b2 & 0x70) >> 4;
        final int n3 = ((b2 & 0xF) << 4 + (n2 - 1)) + (132 << n2) - 132;
        return (short)((n != 0) ? (-n3) : n3);
    }
    
    static {
        do = new short[] { -32124, -31100, -30076, -29052, -28028, -27004, -25980, -24956, -23932, -22908, -21884, -20860, -19836, -18812, -17788, -16764, -15996, -15484, -14972, -14460, -13948, -13436, -12924, -12412, -11900, -11388, -10876, -10364, -9852, -9340, -8828, -8316, -7932, -7676, -7420, -7164, -6908, -6652, -6396, -6140, -5884, -5628, -5372, -5116, -4860, -4604, -4348, -4092, -3900, -3772, -3644, -3516, -3388, -3260, -3132, -3004, -2876, -2748, -2620, -2492, -2364, -2236, -2108, -1980, -1884, -1820, -1756, -1692, -1628, -1564, -1500, -1436, -1372, -1308, -1244, -1180, -1116, -1052, -988, -924, -876, -844, -812, -780, -748, -716, -684, -652, -620, -588, -556, -524, -492, -460, -428, -396, -372, -356, -340, -324, -308, -292, -276, -260, -244, -228, -212, -196, -180, -164, -148, -132, -120, -112, -104, -96, -88, -80, -72, -64, -56, -48, -40, -32, -24, -16, -8, 0, 32124, 31100, 30076, 29052, 28028, 27004, 25980, 24956, 23932, 22908, 21884, 20860, 19836, 18812, 17788, 16764, 15996, 15484, 14972, 14460, 13948, 13436, 12924, 12412, 11900, 11388, 10876, 10364, 9852, 9340, 8828, 8316, 7932, 7676, 7420, 7164, 6908, 6652, 6396, 6140, 5884, 5628, 5372, 5116, 4860, 4604, 4348, 4092, 3900, 3772, 3644, 3516, 3388, 3260, 3132, 3004, 2876, 2748, 2620, 2492, 2364, 2236, 2108, 1980, 1884, 1820, 1756, 1692, 1628, 1564, 1500, 1436, 1372, 1308, 1244, 1180, 1116, 1052, 988, 924, 876, 844, 812, 780, 748, 716, 684, 652, 620, 588, 556, 524, 492, 460, 428, 396, 372, 356, 340, 324, 308, 292, 276, 260, 244, 228, 212, 196, 180, 164, 148, 132, 120, 112, 104, 96, 88, 80, 72, 64, 56, 48, 40, 32, 24, 16, 8, 0 };
        if = new int[] { 4, 12, 20, 28, 36, 44, 52, 60, 68, 76, 84, 92, 100, 108, 116, 124, 140, 156, 172, 188, 204, 220, 236, 252, 268, 284, 300, 316, 332, 348, 364, 380, 412, 444, 476, 508, 540, 572, 604, 636, 668, 700, 732, 764, 796, 828, 860, 892, 956, 1020, 1084, 1148, 1212, 1276, 1340, 1404, 1468, 1532, 1596, 1660, 1724, 1788, 1852, 1916, 2044, 2172, 2300, 2428, 2556, 2684, 2812, 2940, 3068, 3196, 3324, 3452, 3580, 3708, 3836, 3964, 4220, 4476, 4732, 4988, 5244, 5500, 5756, 6012, 6268, 6524, 6780, 7036, 7292, 7548, 7804, 8060, 8572, 9084, 9596, 10108, 10620, 11132, 11644, 12156, 12668, 13180, 13692, 14204, 14716, 15228, 15740, 16252, 17276, 18300, 19324, 20348, 21372, 22396, 23420, 24444, 25468, 26492, 27516, 28540, 29564, 30588, 31612, 32768, 33925, 34949, 35973, 36997, 38021, 39045, 40069, 41093, 42117, 43141, 44165, 45189, 46213, 47237, 48261, 49285, 49797, 50309, 50821, 51333, 51845, 52357, 52869, 53381, 53893, 54405, 54917, 55429, 55941, 56453, 56965, 57477, 57733, 57989, 58245, 58501, 58757, 59013, 59269, 59525, 59781, 60037, 60293, 60549, 60805, 61061, 61317, 61573, 61701, 61829, 61957, 62085, 62213, 62341, 62469, 62597, 62725, 62853, 62981, 63109, 63237, 63365, 63493, 63621, 63685, 63749, 63813, 63877, 63941, 64005, 64069, 64133, 64197, 64261, 64325, 64389, 64453, 64517, 64581, 64645, 64677, 64709, 64741, 64773, 64805, 64837, 64869, 64901, 64933, 64965, 64997, 65029, 65061, 65093, 65125, 65157, 65173, 65189, 65205, 65221, 65237, 65253, 65269, 65285, 65301, 65317, 65333, 65349, 65365, 65381, 65397, 65413, 65421, 65429, 65437, 65445, 65453, 65461, 65469, 65477, 65485, 65493, 65501, 65509, 65517, 65525, 65533, 65536 };
        ax.a = new byte[65536];
    }
}
