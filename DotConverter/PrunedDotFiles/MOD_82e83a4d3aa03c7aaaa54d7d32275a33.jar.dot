digraph "" {
"fieldput <C64Applet: java.lang.String currentDisk>";
 "fieldput <C64Applet: java.lang.String currentDisk>"->"fieldget <C64Applet: com.dreamfabric.jac64.CPU cpu>";
 "fieldget <C64Applet: com.dreamfabric.jac64.CPU cpu>"->"ifnonnull return";
 "ifnonnull return"->"staticput <com.dreamfabric.jac64.SIDMixer: int DL_BUFFER_SIZE>";
 "staticput <com.dreamfabric.jac64.SIDMixer: int DL_BUFFER_SIZE>"->"staticget <java.lang.System: java.io.PrintStream out>";
 "staticget <java.lang.System: java.io.PrintStream out>"->"virtualinvoke <java.io.PrintStream: void println(java.lang.String)>";
 "virtualinvoke <java.io.PrintStream: void println(java.lang.String)>"->"new com.dreamfabric.jac64.CPU";
 "new com.dreamfabric.jac64.CPU"->"fieldget <C64Applet: com.dreamfabric.jac64.IMonitor imon>";
 "fieldget <C64Applet: com.dreamfabric.jac64.IMonitor imon>"->"virtualinvoke <C64Applet: java.net.URL getCodeBase()>";
 "virtualinvoke <C64Applet: java.net.URL getCodeBase()>"->"virtualinvoke <java.net.URL: java.lang.String toString()>";
 "virtualinvoke <java.net.URL: java.lang.String toString()>"->"new com.dreamfabric.jac64.SELoader";
 "new com.dreamfabric.jac64.SELoader"->"specialinvoke <com.dreamfabric.jac64.SELoader: void <init>()>";
 "specialinvoke <com.dreamfabric.jac64.SELoader: void <init>()>"->"specialinvoke <com.dreamfabric.jac64.CPU: void <init>(com.dreamfabric.jac64.IMonitor,java.lang.String,com.dreamfabric.jac64.Loader)>";
 "specialinvoke <com.dreamfabric.jac64.CPU: void <init>(com.dreamfabric.jac64.IMonitor,java.lang.String,com.dreamfabric.jac64.Loader)>"->"fieldput <C64Applet: com.dreamfabric.jac64.CPU cpu>";
 "fieldput <C64Applet: com.dreamfabric.jac64.CPU cpu>"->"staticget <java.lang.System: java.io.PrintStream out>";
 "staticget <java.lang.System: java.io.PrintStream out>"->"virtualinvoke <java.io.PrintStream: void println(java.lang.String)>";
 "virtualinvoke <java.io.PrintStream: void println(java.lang.String)>"->"specialinvoke <C64Applet: int getParameterAsInt(java.lang.String,int)>";
 "specialinvoke <C64Applet: int getParameterAsInt(java.lang.String,int)>"->"new com.dreamfabric.jac64.C64Screen";
 "new com.dreamfabric.jac64.C64Screen"->"fieldget <C64Applet: com.dreamfabric.jac64.IMonitor imon>";
 "fieldget <C64Applet: com.dreamfabric.jac64.IMonitor imon>"->"goto load.r $r9";
 "goto load.r $r9"->"specialinvoke <com.dreamfabric.jac64.C64Screen: void <init>(com.dreamfabric.jac64.IMonitor,boolean)>";
 "specialinvoke <com.dreamfabric.jac64.C64Screen: void <init>(com.dreamfabric.jac64.IMonitor,boolean)>"->"fieldput <C64Applet: com.dreamfabric.jac64.C64Screen screen>";
 "fieldput <C64Applet: com.dreamfabric.jac64.C64Screen screen>"->"fieldget <C64Applet: com.dreamfabric.jac64.CPU cpu>";
 "fieldget <C64Applet: com.dreamfabric.jac64.CPU cpu>"->"fieldget <C64Applet: com.dreamfabric.jac64.C64Screen screen>";
 "fieldget <C64Applet: com.dreamfabric.jac64.C64Screen screen>"->"virtualinvoke <com.dreamfabric.jac64.CPU: void init(com.dreamfabric.jac64.C64Chips)>";
 "virtualinvoke <com.dreamfabric.jac64.CPU: void init(com.dreamfabric.jac64.C64Chips)>"->"fieldget <C64Applet: com.dreamfabric.jac64.C64Screen screen>";
 "fieldget <C64Applet: com.dreamfabric.jac64.C64Screen screen>"->"fieldget <C64Applet: com.dreamfabric.jac64.CPU cpu>";
 "fieldget <C64Applet: com.dreamfabric.jac64.CPU cpu>"->"virtualinvoke <com.dreamfabric.jac64.C64Screen: void init(com.dreamfabric.jac64.CPU)>";
 "virtualinvoke <com.dreamfabric.jac64.C64Screen: void init(com.dreamfabric.jac64.CPU)>"->"fieldget <C64Applet: com.dreamfabric.jac64.CPU cpu>";
 "fieldget <C64Applet: com.dreamfabric.jac64.CPU cpu>"->"virtualinvoke <com.dreamfabric.jac64.CPU: int[] getMemory()>";
 "virtualinvoke <com.dreamfabric.jac64.CPU: int[] getMemory()>"->"new java.awt.BorderLayout";
 "new java.awt.BorderLayout"->"specialinvoke <java.awt.BorderLayout: void <init>()>";
 "specialinvoke <java.awt.BorderLayout: void <init>()>"->"virtualinvoke <C64Applet: void setLayout(java.awt.LayoutManager)>";
 "virtualinvoke <C64Applet: void setLayout(java.awt.LayoutManager)>"->"staticget <java.awt.Color: java.awt.Color black>";
 "staticget <java.awt.Color: java.awt.Color black>"->"virtualinvoke <C64Applet: void setBackground(java.awt.Color)>";
 "virtualinvoke <C64Applet: void setBackground(java.awt.Color)>"->"staticget <C64Applet: java.awt.Color lblue>";
 "staticget <C64Applet: java.awt.Color lblue>"->"virtualinvoke <C64Applet: void setForeground(java.awt.Color)>";
 "virtualinvoke <C64Applet: void setForeground(java.awt.Color)>"->"new com.dreamfabric.jac64.C64Reader";
 "new com.dreamfabric.jac64.C64Reader"->"specialinvoke <com.dreamfabric.jac64.C64Reader: void <init>()>";
 "specialinvoke <com.dreamfabric.jac64.C64Reader: void <init>()>"->"fieldput <C64Applet: com.dreamfabric.jac64.C64Reader reader>";
 "fieldput <C64Applet: com.dreamfabric.jac64.C64Reader reader>"->"fieldget <C64Applet: com.dreamfabric.jac64.C64Reader reader>";
 "fieldget <C64Applet: com.dreamfabric.jac64.C64Reader reader>"->"fieldget <C64Applet: com.dreamfabric.jac64.CPU cpu>";
 "fieldget <C64Applet: com.dreamfabric.jac64.CPU cpu>"->"virtualinvoke <com.dreamfabric.jac64.C64Reader: void setCPU(com.dreamfabric.jac64.CPU)>";
 "virtualinvoke <com.dreamfabric.jac64.C64Reader: void setCPU(com.dreamfabric.jac64.CPU)>"->"fieldget <C64Applet: com.dreamfabric.jac64.C64Screen screen>";
 "fieldget <C64Applet: com.dreamfabric.jac64.C64Screen screen>"->"virtualinvoke <com.dreamfabric.jac64.C64Screen: javax.swing.JPanel getScreen()>";
 "virtualinvoke <com.dreamfabric.jac64.C64Screen: javax.swing.JPanel getScreen()>"->"fieldput <C64Applet: com.dreamfabric.jac64.C64Canvas canvas>";
 "fieldput <C64Applet: com.dreamfabric.jac64.C64Canvas canvas>"->"virtualinvoke <C64Applet: void add(java.awt.Component,java.lang.Object)>";
 "virtualinvoke <C64Applet: void add(java.awt.Component,java.lang.Object)>"->"fieldget <C64Applet: com.dreamfabric.jac64.C64Canvas canvas>";
 "fieldget <C64Applet: com.dreamfabric.jac64.C64Canvas canvas>"->"virtualinvoke <C64Applet: void addKeyListener(java.awt.event.KeyListener)>";
 "virtualinvoke <C64Applet: void addKeyListener(java.awt.event.KeyListener)>"->"fieldget <C64Applet: com.dreamfabric.jac64.C64Canvas canvas>";
 "fieldget <C64Applet: com.dreamfabric.jac64.C64Canvas canvas>"->"virtualinvoke <com.dreamfabric.jac64.C64Canvas: void requestFocus()>";
 "virtualinvoke <com.dreamfabric.jac64.C64Canvas: void requestFocus()>"->"fieldget <C64Applet: com.dreamfabric.jac64.CPU cpu>";
 "fieldget <C64Applet: com.dreamfabric.jac64.CPU cpu>"->"virtualinvoke <com.dreamfabric.jac64.CPU: com.dreamfabric.jac64.C1541Emu getDrive()>";
 "virtualinvoke <com.dreamfabric.jac64.CPU: com.dreamfabric.jac64.C1541Emu getDrive()>"->"fieldget <C64Applet: com.dreamfabric.jac64.C64Reader reader>";
 "fieldget <C64Applet: com.dreamfabric.jac64.C64Reader reader>"->"virtualinvoke <com.dreamfabric.jac64.C1541Emu: void setReader(com.dreamfabric.jac64.C64Reader)>";
 "virtualinvoke <com.dreamfabric.jac64.C1541Emu: void setReader(com.dreamfabric.jac64.C64Reader)>"->"virtualinvoke <java.lang.Object: java.lang.Class getClass()>";
 "virtualinvoke <java.lang.Object: java.lang.Class getClass()>"->"virtualinvoke <java.lang.Class: java.net.URL getResource(java.lang.String)>";
 "virtualinvoke <java.lang.Class: java.net.URL getResource(java.lang.String)>"->"staticget <java.lang.System: java.io.PrintStream out>";
 "staticget <java.lang.System: java.io.PrintStream out>"->"new java.lang.StringBuffer";
 "new java.lang.StringBuffer"->"specialinvoke <java.lang.StringBuffer: void <init>()>";
 "specialinvoke <java.lang.StringBuffer: void <init>()>"->"virtualinvoke <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>";
 "virtualinvoke <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>"->"virtualinvoke <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>";
 "virtualinvoke <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>"->"virtualinvoke <java.lang.StringBuffer: java.lang.String toString()>";
 "virtualinvoke <java.lang.StringBuffer: java.lang.String toString()>"->"virtualinvoke <java.io.PrintStream: void println(java.lang.String)>";
 "virtualinvoke <java.io.PrintStream: void println(java.lang.String)>"->"staticinvoke <java.applet.Applet: java.applet.AudioClip newAudioClip(java.net.URL)>";
 "staticinvoke <java.applet.Applet: java.applet.AudioClip newAudioClip(java.net.URL)>"->"virtualinvoke <java.lang.Object: java.lang.Class getClass()>";
 "virtualinvoke <java.lang.Object: java.lang.Class getClass()>"->"virtualinvoke <java.lang.Class: java.net.URL getResource(java.lang.String)>";
 "virtualinvoke <java.lang.Class: java.net.URL getResource(java.lang.String)>"->"staticinvoke <java.applet.Applet: java.applet.AudioClip newAudioClip(java.net.URL)>";
 "staticinvoke <java.applet.Applet: java.applet.AudioClip newAudioClip(java.net.URL)>"->"fieldget <C64Applet: com.dreamfabric.jac64.C64Screen screen>";
 "fieldget <C64Applet: com.dreamfabric.jac64.C64Screen screen>"->"virtualinvoke <com.dreamfabric.jac64.C64Screen: void setSounds(java.applet.AudioClip,java.applet.AudioClip)>";
 "virtualinvoke <com.dreamfabric.jac64.C64Screen: void setSounds(java.applet.AudioClip,java.applet.AudioClip)>"->"return";
}
