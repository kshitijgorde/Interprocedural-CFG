// 
// Decompiled by Procyon v0.5.30
// 

package b.a.c;

import java.util.NoSuchElementException;
import java.util.StringTokenizer;
import java.util.Vector;
import b.a.a.b;
import b.a.a.d;

public class n extends m
{
    protected d a;
    protected double b;
    protected static h[] c;
    protected static g[] d;
    
    public synchronized d d(final double b, final double n) {
        if (this.b == b && this.a != null) {
            return this.a;
        }
        final double n2 = (b - 2451545.0) / 36525.0;
        final double n3 = n2 * n2;
        final double n4 = n3 * n2;
        final double n5 = n4 * n2;
        final double n6 = 218.3164477 + 481267.88123421 * n2 - 0.0015786 * n3 + n4 / 538841.0 - n5 / 6.5194E7 + 1.944E-4;
        final double n7 = 297.8501921 + 445267.1114034 * n2 - 0.0018819 * n3 + n4 / 545868.0 - n5 / 1.13065E8;
        final double n8 = 357.5291092 + 35999.0502909 * n2 - 1.536E-4 * n3 + n4 / 2.449E7;
        final double n9 = 134.9633964 + 477198.8675055 * n2 + 0.0087414 * n3 + n4 / 69699.0 - n5 / 1.4712E7;
        final double n10 = 93.272095 + 483202.0175233 * n2 - 0.0036539 * n3 - n4 / 3526000.0 + n5 / 8.6331E8;
        final double n11 = 119.75 + 131.849 * n2;
        final double n12 = 53.09 + 479264.29 * n2;
        final double n13 = 313.45 + 481266.484 * n2;
        final double n14 = 1.0 - 0.002516 * n2 - 7.4E-6 * n3;
        final double n15 = n14 * n14;
        double n16 = 0.0;
        double n17 = 0.0;
        double n18 = 0.0;
        for (int i = 0; i < n.c.length; ++i) {
            final h h = n.c[i];
            final double n19 = h.a * n7 + h.b * n8 + h.c * n9 + h.d * n10;
            if (h.b == -2.0 || h.b == 2.0) {
                n16 += h.e * n15 * b.l(n19);
                n18 += h.f * n15 * b.f(n19);
            }
            else if (h.b == -1.0 || h.b == 1.0) {
                n16 += h.e * n14 * b.l(n19);
                n18 += h.f * n14 * b.f(n19);
            }
            else {
                n16 += h.e * b.l(n19);
                n18 += h.f * b.f(n19);
            }
        }
        final double n20 = n6 + (n16 + (3958.0 * b.l(n11) + 1962.0 * b.l(n6 - n10) + 318.0 * b.l(n12))) / 1000000.0;
        final double n21 = 385000.56 + n18 / 1000.0;
        for (int j = 0; j < n.d.length; ++j) {
            final g g = n.d[j];
            final double n22 = g.a * n7 + g.b * n8 + g.c * n9 + g.d * n10;
            if (g.b == -2.0 || g.b == 2.0) {
                n17 += g.e * n15 * b.l(n22);
            }
            else if (g.b == -1.0 || g.b == 1.0) {
                n17 += g.e * n14 * b.l(n22);
            }
            else {
                n17 += g.e * b.l(n22);
            }
        }
        this.a = new d(n20, 1, (n17 + (-2235.0 * b.l(n6) + 382.0 * b.l(n13) + 175.0 * b.l(n11 - n10) + 175.0 * b.l(n11 + n10) + 127.0 * b.l(n6 - n9) - 115.0 * b.l(n6 + n9))) / 1000000.0, 1, n21 / 1.49597870691E8);
        this.b = b;
        return this.a;
    }
    
    static {
        final Vector vector = new Vector<h>();
        int n = 0;
        int index;
        while ((index = "0 0 1 0 6288774 -20905355\n2 0 -1 0 1274027 -3699111\n2 0 0 0 658314 -2955968\n0 0 2 0 213618 -569925\n0 1 0 0 -185116 48888\n0 0 0 2 -114332 -3149\n2 0 -2 0 58793 246158\n2 -1 -1 0 57066 -152138\n2 0 1 0 53322 -170733\n2 -1 0 0 45758 -204586\n0 1 -1 0 -40923 -129620\n1 0 0 0 -34720 108743\n0 1 1 0 -30383 104755\n2 0 0 -2 15327 10321\n0 0 1 2 -12528 0\n0 0 1 -2 10980 79661\n4 0 -1 0 10675 -34782\n0 0 3 0 10034 -23210\n4 0 -2 0 8548 -21636\n2 1 -1 0 -7888 24208\n2 1 0 0 -6766 30824\n1 0 -1 0 -5163 -8379\n1 1 0 0 4987 -16675\n2 -1 1 0 4036 -12831\n2 0 2 0 3994 -10445\n4 0 0 0 3861 -11650\n2 0 -3 0 3665 14403\n0 1 -2 0 -2689 -7003\n2 0 -1 2 -2602 0\n2 -1 -2 0 2390 10056\n1 0 1 0 -2348 6322\n2 -2 0 0 2236 -9884\n0 1 2 0 -2120 5751\n0 2 0 0 -2069 0\n2 -2 -1 0 2048 -4950\n2 0 1 -2 -1773 4130\n2 0 0 2 -1595 0\n4 -1 -1 0 1215 -3958\n0 0 2 2 -1110 0\n3 0 -1 0 -892 3258\n2 1 1 0 -810 2616\n4 -1 -2 0 759 -1897\n0 2 -1 0 -713 -2117\n2 2 -1 0 -700 2354\n2 1 -2 0 691 0\n2 -1 0 -2 596 0\n4 0 1 0 549 -1423\n0 0 4 0 537 -1117\n4 -1 0 0 520 -1571\n1 0 -2 0 -487 -1739\n2 1 0 -2 -399 0\n0 0 2 -2 -381 -4421\n1 1 1 0 351 0\n3 0 -2 0 -340 0\n4 0 -3 0 330 0\n2 -1 2 0 327 0\n0 2 1 0 -323 1165\n1 1 -1 0 299 0\n2 0 3 0 294 0\n2 0 -1 -2 0 8752\n*\n0 0 0 1 5128122\n0 0 1 1 280602\n0 0 1 -1 277693\n2 0 0 -1 173237\n2 0 -1 1 55413\n2 0 -1 -1 46271\n2 0 0 1 32573\n0 0 2 1 17198\n2 0 1 -1 9266\n0 0 2 -1 8822\n2 -1 0 -1 8216\n2 0 -2 -1 4324\n2 0 1 1 4200\n2 1 0 -1 -3359\n2 -1 -1 1 2463\n2 -1 0 1 2211\n2 -1 -1 -1 2065\n0 1 -1 -1 -1870\n4 0 -1 -1 1828\n0 1 0 1 -1794\n0 0 0 3 -1749\n0 1 -1 1 -1565\n1 0 0 1 -1491\n0 1 1 1 -1475\n0 1 1 -1 -1410\n0 1 0 -1 -1344\n1 0 0 -1 -1335\n0 0 3 1 1107\n4 0 0 -1 1021\n4 0 -1 1 833\n0 0 1 -3 777\n4 0 -2 1 671\n2 0 0 -3 607\n2 0 2 -1 596\n2 -1 1 -1 491\n2 0 -2 1 -451\n0 0 3 -1 439\n2 0 2 1 422\n2 0 -3 -1 421\n2 1 -1 1 -366\n2 1 0 1 -351\n4 0 0 1 331\n2 -1 1 1 315\n2 -2 0 -1 302\n0 0 1 3 -283\n2 1 1 -1 -229\n1 1 0 -1 223\n1 1 0 1 223\n0 1 -2 -1 -220\n2 1 -1 -1 -220\n1 0 1 1 -185\n2 -1 -2 -1 181\n0 1 2 1 -177\n4 0 -2 -1 176\n4 -1 -1 -1 166\n1 0 1 -1 -164\n4 0 1 -1 132\n1 0 -1 -1 -119\n4 -1 0 -1 115\n2 -2 0 1 107\n".indexOf(10, n)) >= 0) {
            final String substring = "0 0 1 0 6288774 -20905355\n2 0 -1 0 1274027 -3699111\n2 0 0 0 658314 -2955968\n0 0 2 0 213618 -569925\n0 1 0 0 -185116 48888\n0 0 0 2 -114332 -3149\n2 0 -2 0 58793 246158\n2 -1 -1 0 57066 -152138\n2 0 1 0 53322 -170733\n2 -1 0 0 45758 -204586\n0 1 -1 0 -40923 -129620\n1 0 0 0 -34720 108743\n0 1 1 0 -30383 104755\n2 0 0 -2 15327 10321\n0 0 1 2 -12528 0\n0 0 1 -2 10980 79661\n4 0 -1 0 10675 -34782\n0 0 3 0 10034 -23210\n4 0 -2 0 8548 -21636\n2 1 -1 0 -7888 24208\n2 1 0 0 -6766 30824\n1 0 -1 0 -5163 -8379\n1 1 0 0 4987 -16675\n2 -1 1 0 4036 -12831\n2 0 2 0 3994 -10445\n4 0 0 0 3861 -11650\n2 0 -3 0 3665 14403\n0 1 -2 0 -2689 -7003\n2 0 -1 2 -2602 0\n2 -1 -2 0 2390 10056\n1 0 1 0 -2348 6322\n2 -2 0 0 2236 -9884\n0 1 2 0 -2120 5751\n0 2 0 0 -2069 0\n2 -2 -1 0 2048 -4950\n2 0 1 -2 -1773 4130\n2 0 0 2 -1595 0\n4 -1 -1 0 1215 -3958\n0 0 2 2 -1110 0\n3 0 -1 0 -892 3258\n2 1 1 0 -810 2616\n4 -1 -2 0 759 -1897\n0 2 -1 0 -713 -2117\n2 2 -1 0 -700 2354\n2 1 -2 0 691 0\n2 -1 0 -2 596 0\n4 0 1 0 549 -1423\n0 0 4 0 537 -1117\n4 -1 0 0 520 -1571\n1 0 -2 0 -487 -1739\n2 1 0 -2 -399 0\n0 0 2 -2 -381 -4421\n1 1 1 0 351 0\n3 0 -2 0 -340 0\n4 0 -3 0 330 0\n2 -1 2 0 327 0\n0 2 1 0 -323 1165\n1 1 -1 0 299 0\n2 0 3 0 294 0\n2 0 -1 -2 0 8752\n*\n0 0 0 1 5128122\n0 0 1 1 280602\n0 0 1 -1 277693\n2 0 0 -1 173237\n2 0 -1 1 55413\n2 0 -1 -1 46271\n2 0 0 1 32573\n0 0 2 1 17198\n2 0 1 -1 9266\n0 0 2 -1 8822\n2 -1 0 -1 8216\n2 0 -2 -1 4324\n2 0 1 1 4200\n2 1 0 -1 -3359\n2 -1 -1 1 2463\n2 -1 0 1 2211\n2 -1 -1 -1 2065\n0 1 -1 -1 -1870\n4 0 -1 -1 1828\n0 1 0 1 -1794\n0 0 0 3 -1749\n0 1 -1 1 -1565\n1 0 0 1 -1491\n0 1 1 1 -1475\n0 1 1 -1 -1410\n0 1 0 -1 -1344\n1 0 0 -1 -1335\n0 0 3 1 1107\n4 0 0 -1 1021\n4 0 -1 1 833\n0 0 1 -3 777\n4 0 -2 1 671\n2 0 0 -3 607\n2 0 2 -1 596\n2 -1 1 -1 491\n2 0 -2 1 -451\n0 0 3 -1 439\n2 0 2 1 422\n2 0 -3 -1 421\n2 1 -1 1 -366\n2 1 0 1 -351\n4 0 0 1 331\n2 -1 1 1 315\n2 -2 0 -1 302\n0 0 1 3 -283\n2 1 1 -1 -229\n1 1 0 -1 223\n1 1 0 1 223\n0 1 -2 -1 -220\n2 1 -1 -1 -220\n1 0 1 1 -185\n2 -1 -2 -1 181\n0 1 2 1 -177\n4 0 -2 -1 176\n4 -1 -1 -1 166\n1 0 1 -1 -164\n4 0 1 -1 132\n1 0 -1 -1 -119\n4 -1 0 -1 115\n2 -2 0 1 107\n".substring(n, index);
            n = index + 1;
            if (substring.startsWith("*")) {
                break;
            }
            try {
                final StringTokenizer stringTokenizer = new StringTokenizer(substring);
                final h h = new h();
                h.a = Integer.parseInt(stringTokenizer.nextToken());
                h.b = Integer.parseInt(stringTokenizer.nextToken());
                h.c = Integer.parseInt(stringTokenizer.nextToken());
                h.d = Integer.parseInt(stringTokenizer.nextToken());
                h.e = Double.parseDouble(stringTokenizer.nextToken());
                h.f = Double.parseDouble(stringTokenizer.nextToken());
                vector.addElement(h);
            }
            catch (NoSuchElementException ex) {}
            catch (NumberFormatException ex2) {}
        }
        b.a.c.n.c = new h[vector.size()];
        for (int i = 0; i < b.a.c.n.c.length; ++i) {
            b.a.c.n.c[i] = vector.elementAt(i);
        }
        vector.removeAllElements();
        int index2;
        while ((index2 = "0 0 1 0 6288774 -20905355\n2 0 -1 0 1274027 -3699111\n2 0 0 0 658314 -2955968\n0 0 2 0 213618 -569925\n0 1 0 0 -185116 48888\n0 0 0 2 -114332 -3149\n2 0 -2 0 58793 246158\n2 -1 -1 0 57066 -152138\n2 0 1 0 53322 -170733\n2 -1 0 0 45758 -204586\n0 1 -1 0 -40923 -129620\n1 0 0 0 -34720 108743\n0 1 1 0 -30383 104755\n2 0 0 -2 15327 10321\n0 0 1 2 -12528 0\n0 0 1 -2 10980 79661\n4 0 -1 0 10675 -34782\n0 0 3 0 10034 -23210\n4 0 -2 0 8548 -21636\n2 1 -1 0 -7888 24208\n2 1 0 0 -6766 30824\n1 0 -1 0 -5163 -8379\n1 1 0 0 4987 -16675\n2 -1 1 0 4036 -12831\n2 0 2 0 3994 -10445\n4 0 0 0 3861 -11650\n2 0 -3 0 3665 14403\n0 1 -2 0 -2689 -7003\n2 0 -1 2 -2602 0\n2 -1 -2 0 2390 10056\n1 0 1 0 -2348 6322\n2 -2 0 0 2236 -9884\n0 1 2 0 -2120 5751\n0 2 0 0 -2069 0\n2 -2 -1 0 2048 -4950\n2 0 1 -2 -1773 4130\n2 0 0 2 -1595 0\n4 -1 -1 0 1215 -3958\n0 0 2 2 -1110 0\n3 0 -1 0 -892 3258\n2 1 1 0 -810 2616\n4 -1 -2 0 759 -1897\n0 2 -1 0 -713 -2117\n2 2 -1 0 -700 2354\n2 1 -2 0 691 0\n2 -1 0 -2 596 0\n4 0 1 0 549 -1423\n0 0 4 0 537 -1117\n4 -1 0 0 520 -1571\n1 0 -2 0 -487 -1739\n2 1 0 -2 -399 0\n0 0 2 -2 -381 -4421\n1 1 1 0 351 0\n3 0 -2 0 -340 0\n4 0 -3 0 330 0\n2 -1 2 0 327 0\n0 2 1 0 -323 1165\n1 1 -1 0 299 0\n2 0 3 0 294 0\n2 0 -1 -2 0 8752\n*\n0 0 0 1 5128122\n0 0 1 1 280602\n0 0 1 -1 277693\n2 0 0 -1 173237\n2 0 -1 1 55413\n2 0 -1 -1 46271\n2 0 0 1 32573\n0 0 2 1 17198\n2 0 1 -1 9266\n0 0 2 -1 8822\n2 -1 0 -1 8216\n2 0 -2 -1 4324\n2 0 1 1 4200\n2 1 0 -1 -3359\n2 -1 -1 1 2463\n2 -1 0 1 2211\n2 -1 -1 -1 2065\n0 1 -1 -1 -1870\n4 0 -1 -1 1828\n0 1 0 1 -1794\n0 0 0 3 -1749\n0 1 -1 1 -1565\n1 0 0 1 -1491\n0 1 1 1 -1475\n0 1 1 -1 -1410\n0 1 0 -1 -1344\n1 0 0 -1 -1335\n0 0 3 1 1107\n4 0 0 -1 1021\n4 0 -1 1 833\n0 0 1 -3 777\n4 0 -2 1 671\n2 0 0 -3 607\n2 0 2 -1 596\n2 -1 1 -1 491\n2 0 -2 1 -451\n0 0 3 -1 439\n2 0 2 1 422\n2 0 -3 -1 421\n2 1 -1 1 -366\n2 1 0 1 -351\n4 0 0 1 331\n2 -1 1 1 315\n2 -2 0 -1 302\n0 0 1 3 -283\n2 1 1 -1 -229\n1 1 0 -1 223\n1 1 0 1 223\n0 1 -2 -1 -220\n2 1 -1 -1 -220\n1 0 1 1 -185\n2 -1 -2 -1 181\n0 1 2 1 -177\n4 0 -2 -1 176\n4 -1 -1 -1 166\n1 0 1 -1 -164\n4 0 1 -1 132\n1 0 -1 -1 -119\n4 -1 0 -1 115\n2 -2 0 1 107\n".indexOf(10, n)) >= 0) {
            final String substring2 = "0 0 1 0 6288774 -20905355\n2 0 -1 0 1274027 -3699111\n2 0 0 0 658314 -2955968\n0 0 2 0 213618 -569925\n0 1 0 0 -185116 48888\n0 0 0 2 -114332 -3149\n2 0 -2 0 58793 246158\n2 -1 -1 0 57066 -152138\n2 0 1 0 53322 -170733\n2 -1 0 0 45758 -204586\n0 1 -1 0 -40923 -129620\n1 0 0 0 -34720 108743\n0 1 1 0 -30383 104755\n2 0 0 -2 15327 10321\n0 0 1 2 -12528 0\n0 0 1 -2 10980 79661\n4 0 -1 0 10675 -34782\n0 0 3 0 10034 -23210\n4 0 -2 0 8548 -21636\n2 1 -1 0 -7888 24208\n2 1 0 0 -6766 30824\n1 0 -1 0 -5163 -8379\n1 1 0 0 4987 -16675\n2 -1 1 0 4036 -12831\n2 0 2 0 3994 -10445\n4 0 0 0 3861 -11650\n2 0 -3 0 3665 14403\n0 1 -2 0 -2689 -7003\n2 0 -1 2 -2602 0\n2 -1 -2 0 2390 10056\n1 0 1 0 -2348 6322\n2 -2 0 0 2236 -9884\n0 1 2 0 -2120 5751\n0 2 0 0 -2069 0\n2 -2 -1 0 2048 -4950\n2 0 1 -2 -1773 4130\n2 0 0 2 -1595 0\n4 -1 -1 0 1215 -3958\n0 0 2 2 -1110 0\n3 0 -1 0 -892 3258\n2 1 1 0 -810 2616\n4 -1 -2 0 759 -1897\n0 2 -1 0 -713 -2117\n2 2 -1 0 -700 2354\n2 1 -2 0 691 0\n2 -1 0 -2 596 0\n4 0 1 0 549 -1423\n0 0 4 0 537 -1117\n4 -1 0 0 520 -1571\n1 0 -2 0 -487 -1739\n2 1 0 -2 -399 0\n0 0 2 -2 -381 -4421\n1 1 1 0 351 0\n3 0 -2 0 -340 0\n4 0 -3 0 330 0\n2 -1 2 0 327 0\n0 2 1 0 -323 1165\n1 1 -1 0 299 0\n2 0 3 0 294 0\n2 0 -1 -2 0 8752\n*\n0 0 0 1 5128122\n0 0 1 1 280602\n0 0 1 -1 277693\n2 0 0 -1 173237\n2 0 -1 1 55413\n2 0 -1 -1 46271\n2 0 0 1 32573\n0 0 2 1 17198\n2 0 1 -1 9266\n0 0 2 -1 8822\n2 -1 0 -1 8216\n2 0 -2 -1 4324\n2 0 1 1 4200\n2 1 0 -1 -3359\n2 -1 -1 1 2463\n2 -1 0 1 2211\n2 -1 -1 -1 2065\n0 1 -1 -1 -1870\n4 0 -1 -1 1828\n0 1 0 1 -1794\n0 0 0 3 -1749\n0 1 -1 1 -1565\n1 0 0 1 -1491\n0 1 1 1 -1475\n0 1 1 -1 -1410\n0 1 0 -1 -1344\n1 0 0 -1 -1335\n0 0 3 1 1107\n4 0 0 -1 1021\n4 0 -1 1 833\n0 0 1 -3 777\n4 0 -2 1 671\n2 0 0 -3 607\n2 0 2 -1 596\n2 -1 1 -1 491\n2 0 -2 1 -451\n0 0 3 -1 439\n2 0 2 1 422\n2 0 -3 -1 421\n2 1 -1 1 -366\n2 1 0 1 -351\n4 0 0 1 331\n2 -1 1 1 315\n2 -2 0 -1 302\n0 0 1 3 -283\n2 1 1 -1 -229\n1 1 0 -1 223\n1 1 0 1 223\n0 1 -2 -1 -220\n2 1 -1 -1 -220\n1 0 1 1 -185\n2 -1 -2 -1 181\n0 1 2 1 -177\n4 0 -2 -1 176\n4 -1 -1 -1 166\n1 0 1 -1 -164\n4 0 1 -1 132\n1 0 -1 -1 -119\n4 -1 0 -1 115\n2 -2 0 1 107\n".substring(n, index2);
            n = index2 + 1;
            try {
                final StringTokenizer stringTokenizer2 = new StringTokenizer(substring2);
                final g g = new g();
                g.a = Integer.parseInt(stringTokenizer2.nextToken());
                g.b = Integer.parseInt(stringTokenizer2.nextToken());
                g.c = Integer.parseInt(stringTokenizer2.nextToken());
                g.d = Integer.parseInt(stringTokenizer2.nextToken());
                g.e = Double.parseDouble(stringTokenizer2.nextToken());
                vector.addElement((h)g);
            }
            catch (NoSuchElementException ex3) {}
            catch (NumberFormatException ex4) {}
        }
        b.a.c.n.d = new g[vector.size()];
        for (int j = 0; j < b.a.c.n.d.length; ++j) {
            b.a.c.n.d[j] = (g)vector.elementAt(j);
        }
    }
}
