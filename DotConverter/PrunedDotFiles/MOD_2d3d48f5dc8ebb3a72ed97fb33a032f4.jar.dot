digraph "" {
"r0 := @this: org.bitstorm.gameoflife.GameOfLife"->"virtualinvoke <org.bitstorm.gameoflife.GameOfLife: void getParams()>";
 "virtualinvoke <org.bitstorm.gameoflife.GameOfLife: void getParams()>"->"new java.awt.Color";
 "new java.awt.Color"->"specialinvoke <java.awt.Color: void <init>(int)>";
 "specialinvoke <java.awt.Color: void <init>(int)>"->"virtualinvoke <java.awt.Component: void setBackground(java.awt.Color)>";
 "virtualinvoke <java.awt.Component: void setBackground(java.awt.Color)>"->"new org.bitstorm.gameoflife.GameOfLifeGrid";
 "new org.bitstorm.gameoflife.GameOfLifeGrid"->"fieldget <org.bitstorm.gameoflife.GameOfLife: int cellCols>";
 "fieldget <org.bitstorm.gameoflife.GameOfLife: int cellCols>"->"fieldget <org.bitstorm.gameoflife.GameOfLife: int cellRows>";
 "fieldget <org.bitstorm.gameoflife.GameOfLife: int cellRows>"->"specialinvoke <org.bitstorm.gameoflife.GameOfLifeGrid: void <init>(int,int)>";
 "specialinvoke <org.bitstorm.gameoflife.GameOfLifeGrid: void <init>(int,int)>"->"fieldput <org.bitstorm.gameoflife.GameOfLife: org.bitstorm.gameoflife.GameOfLifeGrid gameOfLifeGrid>";
 "fieldput <org.bitstorm.gameoflife.GameOfLife: org.bitstorm.gameoflife.GameOfLifeGrid gameOfLifeGrid>"->"fieldget <org.bitstorm.gameoflife.GameOfLife: org.bitstorm.gameoflife.GameOfLifeGrid gameOfLifeGrid>";
 "fieldget <org.bitstorm.gameoflife.GameOfLife: org.bitstorm.gameoflife.GameOfLifeGrid gameOfLifeGrid>"->"virtualinvoke <org.bitstorm.gameoflife.GameOfLifeGrid: void clear()>";
 "virtualinvoke <org.bitstorm.gameoflife.GameOfLifeGrid: void clear()>"->"new org.bitstorm.gameoflife.CellGridCanvas";
 "new org.bitstorm.gameoflife.CellGridCanvas"->"fieldget <org.bitstorm.gameoflife.GameOfLife: org.bitstorm.gameoflife.GameOfLifeGrid gameOfLifeGrid>";
 "fieldget <org.bitstorm.gameoflife.GameOfLife: org.bitstorm.gameoflife.GameOfLifeGrid gameOfLifeGrid>"->"fieldget <org.bitstorm.gameoflife.GameOfLife: int cellSize>";
 "fieldget <org.bitstorm.gameoflife.GameOfLife: int cellSize>"->"specialinvoke <org.bitstorm.gameoflife.CellGridCanvas: void <init>(org.bitstorm.gameoflife.CellGrid,int)>";
 "specialinvoke <org.bitstorm.gameoflife.CellGridCanvas: void <init>(org.bitstorm.gameoflife.CellGrid,int)>"->"fieldput <org.bitstorm.gameoflife.GameOfLife: org.bitstorm.gameoflife.CellGridCanvas gameOfLifeCanvas>";
 "fieldput <org.bitstorm.gameoflife.GameOfLife: org.bitstorm.gameoflife.CellGridCanvas gameOfLifeCanvas>"->"new org.bitstorm.gameoflife.GameOfLifeControls";
 "new org.bitstorm.gameoflife.GameOfLifeControls"->"specialinvoke <org.bitstorm.gameoflife.GameOfLifeControls: void <init>()>";
 "specialinvoke <org.bitstorm.gameoflife.GameOfLifeControls: void <init>()>"->"fieldput <org.bitstorm.gameoflife.GameOfLife: org.bitstorm.gameoflife.GameOfLifeControls controls>";
 "fieldput <org.bitstorm.gameoflife.GameOfLife: org.bitstorm.gameoflife.GameOfLifeControls controls>"->"fieldget <org.bitstorm.gameoflife.GameOfLife: org.bitstorm.gameoflife.GameOfLifeControls controls>";
 "fieldget <org.bitstorm.gameoflife.GameOfLife: org.bitstorm.gameoflife.GameOfLifeControls controls>"->"virtualinvoke <org.bitstorm.gameoflife.GameOfLifeControls: void addGameOfLifeControlsListener(org.bitstorm.gameoflife.GameOfLifeControlsListener)>";
 "virtualinvoke <org.bitstorm.gameoflife.GameOfLifeControls: void addGameOfLifeControlsListener(org.bitstorm.gameoflife.GameOfLifeControlsListener)>"->"new java.awt.GridBagLayout";
 "new java.awt.GridBagLayout"->"specialinvoke <java.awt.GridBagLayout: void <init>()>";
 "specialinvoke <java.awt.GridBagLayout: void <init>()>"->"virtualinvoke <java.awt.Container: void setLayout(java.awt.LayoutManager)>";
 "virtualinvoke <java.awt.Container: void setLayout(java.awt.LayoutManager)>"->"new java.awt.GridBagConstraints";
 "new java.awt.GridBagConstraints"->"specialinvoke <java.awt.GridBagConstraints: void <init>()>";
 "specialinvoke <java.awt.GridBagConstraints: void <init>()>"->"fieldput <java.awt.GridBagConstraints: int fill>";
 "fieldput <java.awt.GridBagConstraints: int fill>"->"fieldput <java.awt.GridBagConstraints: int gridx>";
 "fieldput <java.awt.GridBagConstraints: int gridx>"->"fieldput <java.awt.GridBagConstraints: int gridy>";
 "fieldput <java.awt.GridBagConstraints: int gridy>"->"fieldput <java.awt.GridBagConstraints: double weightx>";
 "fieldput <java.awt.GridBagConstraints: double weightx>"->"fieldput <java.awt.GridBagConstraints: double weighty>";
 "fieldput <java.awt.GridBagConstraints: double weighty>"->"fieldput <java.awt.GridBagConstraints: int anchor>";
 "fieldput <java.awt.GridBagConstraints: int anchor>"->"fieldget <org.bitstorm.gameoflife.GameOfLife: org.bitstorm.gameoflife.CellGridCanvas gameOfLifeCanvas>";
 "fieldget <org.bitstorm.gameoflife.GameOfLife: org.bitstorm.gameoflife.CellGridCanvas gameOfLifeCanvas>"->"virtualinvoke <java.awt.GridBagLayout: void setConstraints(java.awt.Component,java.awt.GridBagConstraints)>";
 "virtualinvoke <java.awt.GridBagLayout: void setConstraints(java.awt.Component,java.awt.GridBagConstraints)>"->"fieldget <org.bitstorm.gameoflife.GameOfLife: org.bitstorm.gameoflife.CellGridCanvas gameOfLifeCanvas>";
 "fieldget <org.bitstorm.gameoflife.GameOfLife: org.bitstorm.gameoflife.CellGridCanvas gameOfLifeCanvas>"->"virtualinvoke <java.awt.Container: java.awt.Component add(java.awt.Component)>";
 "virtualinvoke <java.awt.Container: java.awt.Component add(java.awt.Component)>"->"new java.awt.GridBagConstraints";
 "new java.awt.GridBagConstraints"->"specialinvoke <java.awt.GridBagConstraints: void <init>()>";
 "specialinvoke <java.awt.GridBagConstraints: void <init>()>"->"fieldput <java.awt.GridBagConstraints: int gridy>";
 "fieldput <java.awt.GridBagConstraints: int gridy>"->"fieldput <java.awt.GridBagConstraints: int gridx>";
 "fieldput <java.awt.GridBagConstraints: int gridx>"->"fieldput <java.awt.GridBagConstraints: int gridx>";
 "fieldput <java.awt.GridBagConstraints: int gridx>"->"fieldget <org.bitstorm.gameoflife.GameOfLife: org.bitstorm.gameoflife.GameOfLifeControls controls>";
 "fieldget <org.bitstorm.gameoflife.GameOfLife: org.bitstorm.gameoflife.GameOfLifeControls controls>"->"virtualinvoke <java.awt.GridBagLayout: void setConstraints(java.awt.Component,java.awt.GridBagConstraints)>";
 "virtualinvoke <java.awt.GridBagLayout: void setConstraints(java.awt.Component,java.awt.GridBagConstraints)>"->"fieldget <org.bitstorm.gameoflife.GameOfLife: org.bitstorm.gameoflife.GameOfLifeControls controls>";
 "fieldget <org.bitstorm.gameoflife.GameOfLife: org.bitstorm.gameoflife.GameOfLifeControls controls>"->"virtualinvoke <java.awt.Container: java.awt.Component add(java.awt.Component)>";
 "virtualinvoke <java.awt.Container: java.awt.Component add(java.awt.Component)>"->"staticinvoke <org.bitstorm.gameoflife.ShapeCollection: org.bitstorm.gameoflife.Shape getShapeByName(java.lang.String)>";
 "staticinvoke <org.bitstorm.gameoflife.ShapeCollection: org.bitstorm.gameoflife.Shape getShapeByName(java.lang.String)>"->"virtualinvoke <org.bitstorm.gameoflife.GameOfLife: void setShape(org.bitstorm.gameoflife.Shape)>";
 "virtualinvoke <org.bitstorm.gameoflife.GameOfLife: void setShape(org.bitstorm.gameoflife.Shape)>"->"goto load.r r0";
 "goto load.r r0"->"virtualinvoke <java.awt.Component: void setVisible(boolean)>";
 "virtualinvoke <java.awt.Component: void setVisible(boolean)>"->"virtualinvoke <java.awt.Container: void validate()>";
 "virtualinvoke <java.awt.Container: void validate()>"->"return";
 "virtualinvoke <org.bitstorm.gameoflife.GameOfLife: void setShape(org.bitstorm.gameoflife.Shape)>"->}
