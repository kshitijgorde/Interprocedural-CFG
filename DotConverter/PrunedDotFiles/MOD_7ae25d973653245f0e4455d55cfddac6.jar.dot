digraph "" {
"new java.awt.MediaTracker";
 "new java.awt.MediaTracker"->"specialinvoke <java.awt.MediaTracker: void <init>(java.awt.Component)>";
 "specialinvoke <java.awt.MediaTracker: void <init>(java.awt.Component)>"->"fieldput <cluster: java.awt.MediaTracker mt>";
 "fieldput <cluster: java.awt.MediaTracker mt>"->"goto load.r r0";
 "goto load.r r0"->"virtualinvoke <java.lang.Object: java.lang.Class getClass()>";
 "virtualinvoke <java.lang.Object: java.lang.Class getClass()>"->"virtualinvoke <java.lang.Class: java.io.InputStream getResourceAsStream(java.lang.String)>";
 "virtualinvoke <java.lang.Class: java.io.InputStream getResourceAsStream(java.lang.String)>"->"virtualinvoke <java.io.InputStream: int available()>";
 "virtualinvoke <java.io.InputStream: int available()>"->"virtualinvoke <java.io.InputStream: int read(byte[])>";
 "virtualinvoke <java.io.InputStream: int read(byte[])>"->"staticinvoke <java.awt.Toolkit: java.awt.Toolkit getDefaultToolkit()>";
 "staticinvoke <java.awt.Toolkit: java.awt.Toolkit getDefaultToolkit()>"->"virtualinvoke <java.awt.Toolkit: java.awt.Image createImage(byte[])>";
 "virtualinvoke <java.awt.Toolkit: java.awt.Image createImage(byte[])>"->"fieldput <cluster: java.awt.Image b1>";
 "fieldput <cluster: java.awt.Image b1>"->"goto load.r r0";
 "goto load.r r0"->"fieldget <cluster: java.awt.MediaTracker mt>";
 "fieldget <cluster: java.awt.MediaTracker mt>"->"fieldget <cluster: java.awt.Image b1>";
 "fieldget <cluster: java.awt.Image b1>"->"virtualinvoke <java.awt.MediaTracker: void addImage(java.awt.Image,int)>";
 "virtualinvoke <java.awt.MediaTracker: void addImage(java.awt.Image,int)>"->"virtualinvoke <java.lang.Object: java.lang.Class getClass()>";
 "virtualinvoke <java.lang.Object: java.lang.Class getClass()>"->"virtualinvoke <java.lang.Class: java.io.InputStream getResourceAsStream(java.lang.String)>";
 "virtualinvoke <java.lang.Class: java.io.InputStream getResourceAsStream(java.lang.String)>"->"virtualinvoke <java.io.InputStream: int available()>";
 "virtualinvoke <java.io.InputStream: int available()>"->"virtualinvoke <java.io.InputStream: int read(byte[])>";
 "virtualinvoke <java.io.InputStream: int read(byte[])>"->"staticinvoke <java.awt.Toolkit: java.awt.Toolkit getDefaultToolkit()>";
 "staticinvoke <java.awt.Toolkit: java.awt.Toolkit getDefaultToolkit()>"->"virtualinvoke <java.awt.Toolkit: java.awt.Image createImage(byte[])>";
 "virtualinvoke <java.awt.Toolkit: java.awt.Image createImage(byte[])>"->"fieldput <cluster: java.awt.Image b2>";
 "fieldput <cluster: java.awt.Image b2>"->"goto load.r r0";
 "goto load.r r0"->"fieldget <cluster: java.awt.MediaTracker mt>";
 "fieldget <cluster: java.awt.MediaTracker mt>"->"fieldget <cluster: java.awt.Image b2>";
 "fieldget <cluster: java.awt.Image b2>"->"virtualinvoke <java.awt.MediaTracker: void addImage(java.awt.Image,int)>";
 "virtualinvoke <java.awt.MediaTracker: void addImage(java.awt.Image,int)>"->"fieldget <cluster: java.awt.MediaTracker mt>";
 "fieldget <cluster: java.awt.MediaTracker mt>"->"virtualinvoke <java.awt.MediaTracker: void waitForID(int)>";
 "virtualinvoke <java.awt.MediaTracker: void waitForID(int)>"->"goto load.r r0";
 "goto load.r r0"->"fieldget <cluster: java.awt.Image b1>";
 "fieldget <cluster: java.awt.Image b1>"->"virtualinvoke <java.awt.Image: java.awt.image.ImageProducer getSource()>";
 "virtualinvoke <java.awt.Image: java.awt.image.ImageProducer getSource()>"->"fieldput <cluster: java.awt.image.ImageProducer improd>";
 "fieldput <cluster: java.awt.image.ImageProducer improd>"->"goto load.r r0";
 "goto load.r r0"->"fieldget <cluster: java.awt.Image b2>";
 "fieldget <cluster: java.awt.Image b2>"->"virtualinvoke <java.awt.Image: java.awt.image.ImageProducer getSource()>";
 "virtualinvoke <java.awt.Image: java.awt.image.ImageProducer getSource()>"->"fieldput <cluster: java.awt.image.ImageProducer improd>";
 "fieldput <cluster: java.awt.image.ImageProducer improd>"->"goto load.r r0";
 "goto load.r r0"->"fieldget <cluster: java.awt.MediaTracker mt>";
 "fieldget <cluster: java.awt.MediaTracker mt>"->"virtualinvoke <java.awt.MediaTracker: void waitForID(int)>";
 "virtualinvoke <java.awt.MediaTracker: void waitForID(int)>"->"goto load.r r0";
 "goto load.r r0"->"virtualinvoke <java.awt.Component: java.awt.Image createImage(int,int)>";
 "virtualinvoke <java.awt.Component: java.awt.Image createImage(int,int)>"->"fieldput <cluster: java.awt.Image background>";
 "fieldput <cluster: java.awt.Image background>"->"fieldget <cluster: java.awt.Image background>";
 "fieldget <cluster: java.awt.Image background>"->"virtualinvoke <java.awt.Image: java.awt.Graphics getGraphics()>";
 "virtualinvoke <java.awt.Image: java.awt.Graphics getGraphics()>"->"fieldput <cluster: java.awt.Graphics bG>";
 "fieldput <cluster: java.awt.Graphics bG>"->"virtualinvoke <java.awt.Component: void addMouseListener(java.awt.event.MouseListener)>";
 "virtualinvoke <java.awt.Component: void addMouseListener(java.awt.event.MouseListener)>"->"virtualinvoke <java.awt.Component: void addMouseMotionListener(java.awt.event.MouseMotionListener)>";
 "virtualinvoke <java.awt.Component: void addMouseMotionListener(java.awt.event.MouseMotionListener)>"->"return";
 "virtualinvoke <java.awt.MediaTracker: void waitForID(int)>"->"fieldget <cluster: java.awt.Image[] bballs>";
 "fieldget <cluster: java.awt.Image[] bballs>"->"new java.awt.image.FilteredImageSource";
 "new java.awt.image.FilteredImageSource"->"fieldget <cluster: java.awt.image.ImageProducer improd>";
 "fieldget <cluster: java.awt.image.ImageProducer improd>"->"new java.awt.image.CropImageFilter";
 "new java.awt.image.CropImageFilter"->"specialinvoke <java.awt.image.CropImageFilter: void <init>(int,int,int,int)>";
 "specialinvoke <java.awt.image.CropImageFilter: void <init>(int,int,int,int)>"->"specialinvoke <java.awt.image.FilteredImageSource: void <init>(java.awt.image.ImageProducer,java.awt.image.ImageFilter)>";
 "specialinvoke <java.awt.image.FilteredImageSource: void <init>(java.awt.image.ImageProducer,java.awt.image.ImageFilter)>"->"virtualinvoke <java.awt.Component: java.awt.Image createImage(java.awt.image.ImageProducer)>";
 "virtualinvoke <java.awt.Component: java.awt.Image createImage(java.awt.image.ImageProducer)>"->"fieldget <cluster: java.awt.MediaTracker mt>";
 "fieldget <cluster: java.awt.MediaTracker mt>"->"fieldget <cluster: java.awt.Image[] bballs>";
 "fieldget <cluster: java.awt.Image[] bballs>"->"virtualinvoke <java.awt.MediaTracker: void addImage(java.awt.Image,int)>";
 "virtualinvoke <java.awt.MediaTracker: void addImage(java.awt.Image,int)>"->"fieldget <cluster: java.awt.Image[] bballs>";
 "fieldget <cluster: java.awt.Image[] bballs>"->"new java.awt.image.FilteredImageSource";
 "new java.awt.image.FilteredImageSource"->"fieldget <cluster: java.awt.image.ImageProducer improd>";
 "fieldget <cluster: java.awt.image.ImageProducer improd>"->"new java.awt.image.CropImageFilter";
 "new java.awt.image.CropImageFilter"->"specialinvoke <java.awt.image.CropImageFilter: void <init>(int,int,int,int)>";
 "specialinvoke <java.awt.image.CropImageFilter: void <init>(int,int,int,int)>"->"specialinvoke <java.awt.image.FilteredImageSource: void <init>(java.awt.image.ImageProducer,java.awt.image.ImageFilter)>";
 "specialinvoke <java.awt.image.FilteredImageSource: void <init>(java.awt.image.ImageProducer,java.awt.image.ImageFilter)>"->"virtualinvoke <java.awt.Component: java.awt.Image createImage(java.awt.image.ImageProducer)>";
 "virtualinvoke <java.awt.Component: java.awt.Image createImage(java.awt.image.ImageProducer)>"->"fieldget <cluster: java.awt.MediaTracker mt>";
 "fieldget <cluster: java.awt.MediaTracker mt>"->"fieldget <cluster: java.awt.Image[] bballs>";
 "fieldget <cluster: java.awt.Image[] bballs>"->"virtualinvoke <java.awt.MediaTracker: void addImage(java.awt.Image,int)>";
 "virtualinvoke <java.awt.MediaTracker: void addImage(java.awt.Image,int)>"-> "virtualinvoke <java.awt.MediaTracker: void waitForID(int)>"-> "virtualinvoke <java.awt.Toolkit: java.awt.Image createImage(byte[])>"->"virtualinvoke <java.awt.Component: java.awt.Image createImage(int,int)>";
 "virtualinvoke <java.awt.Component: java.awt.Image createImage(int,int)>"->"fieldput <cluster: java.awt.Image b2>";
 "virtualinvoke <java.awt.Toolkit: java.awt.Image createImage(byte[])>"->"virtualinvoke <java.awt.Component: java.awt.Image createImage(int,int)>";
 "virtualinvoke <java.awt.Component: java.awt.Image createImage(int,int)>"->"fieldput <cluster: java.awt.Image b1>";
"virtualinvoke <java.lang.Object: java.lang.Class getClass()>";
 "virtualinvoke <java.lang.Object: java.lang.Class getClass()>"->"new java.lang.StringBuffer";
 "new java.lang.StringBuffer"->"specialinvoke <java.lang.StringBuffer: void <init>(java.lang.String)>";
 "specialinvoke <java.lang.StringBuffer: void <init>(java.lang.String)>"->"virtualinvoke <java.lang.StringBuffer: java.lang.StringBuffer append(int)>";
 "virtualinvoke <java.lang.StringBuffer: java.lang.StringBuffer append(int)>"->"virtualinvoke <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>";
 "virtualinvoke <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>"->"virtualinvoke <java.lang.StringBuffer: java.lang.String toString()>";
 "virtualinvoke <java.lang.StringBuffer: java.lang.String toString()>"->"virtualinvoke <java.lang.Class: java.io.InputStream getResourceAsStream(java.lang.String)>";
 "virtualinvoke <java.lang.Class: java.io.InputStream getResourceAsStream(java.lang.String)>"->"virtualinvoke <java.io.InputStream: int available()>";
 "virtualinvoke <java.io.InputStream: int available()>"->"goto load.r r0";
 "goto load.r r0"->"virtualinvoke <java.io.InputStream: int read(byte[])>";
 "virtualinvoke <java.io.InputStream: int read(byte[])>"->"fieldget <cluster: java.io.InputStream[] sounds>";
 "fieldget <cluster: java.io.InputStream[] sounds>"->"new sun.audio.AudioDataStream";
 "new sun.audio.AudioDataStream"->"new sun.audio.AudioData";
 "new sun.audio.AudioData"->"specialinvoke <sun.audio.AudioData: void <init>(byte[])>";
 "specialinvoke <sun.audio.AudioData: void <init>(byte[])>"->"specialinvoke <sun.audio.AudioDataStream: void <init>(sun.audio.AudioData)>";
 "specialinvoke <sun.audio.AudioDataStream: void <init>(sun.audio.AudioData)>"->"fieldget <cluster: java.io.InputStream[] sounds>";
 "fieldget <cluster: java.io.InputStream[] sounds>"->"virtualinvoke <java.io.InputStream: void mark(int)>";
 "virtualinvoke <java.io.InputStream: void mark(int)>"->"goto load.r r0";
 "goto load.r r0"-> "virtualinvoke <java.io.InputStream: void mark(int)>"->"virtualinvoke <java.io.InputStream: int read(byte[],int,int)>";
 "virtualinvoke <java.io.InputStream: int read(byte[],int,int)>"->}
