digraph "" {
"r0 := @this: com.electa.installer.MainApplet"->"virtualinvoke <com.electa.installer.MainApplet: java.net.URL getCodeBase()>";
 "virtualinvoke <com.electa.installer.MainApplet: java.net.URL getCodeBase()>"->"fieldput <com.electa.installer.MainApplet: java.net.URL currentURL>";
 "fieldput <com.electa.installer.MainApplet: java.net.URL currentURL>"->"virtualinvoke <com.electa.installer.MainApplet: java.lang.String getParameter(java.lang.String)>";
 "virtualinvoke <com.electa.installer.MainApplet: java.lang.String getParameter(java.lang.String)>"->"fieldput <com.electa.installer.MainApplet: java.lang.String SecurityErrorMsg>";
 "fieldput <com.electa.installer.MainApplet: java.lang.String SecurityErrorMsg>"->"virtualinvoke <com.electa.installer.MainApplet: java.lang.String getParameter(java.lang.String,java.lang.String)>";
 "virtualinvoke <com.electa.installer.MainApplet: java.lang.String getParameter(java.lang.String,java.lang.String)>"->"fieldput <com.electa.installer.MainApplet: java.lang.String onProcessNotStartedScript>";
 "fieldput <com.electa.installer.MainApplet: java.lang.String onProcessNotStartedScript>"->"staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>";
 "staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>"->"virtualinvoke <java.lang.String: java.lang.String toLowerCase()>";
 "virtualinvoke <java.lang.String: java.lang.String toLowerCase()>"->"staticinvoke <netscape.javascript.JSObject: netscape.javascript.JSObject getWindow(java.applet.Applet)>";
 "staticinvoke <netscape.javascript.JSObject: netscape.javascript.JSObject getWindow(java.applet.Applet)>"->"fieldput <com.electa.installer.MainApplet: netscape.javascript.JSObject browserWindow>";
 "fieldput <com.electa.installer.MainApplet: netscape.javascript.JSObject browserWindow>"->"goto load.r r0";
 "goto load.r r0"->"virtualinvoke <com.electa.installer.MainApplet: void getAppletParameters()>";
 "virtualinvoke <com.electa.installer.MainApplet: void getAppletParameters()>"->"goto load.r r1";
 "goto load.r r1"->"virtualinvoke <java.lang.String: boolean matches(java.lang.String)>";
 "virtualinvoke <java.lang.String: boolean matches(java.lang.String)>"->"ifne new com.electa.installer.InstallerCtrl";
 "ifne new com.electa.installer.InstallerCtrl"->"staticget <com.electa.installer.MainApplet: java.util.logging.Logger log>";
 "staticget <com.electa.installer.MainApplet: java.util.logging.Logger log>"->"new java.lang.StringBuilder";
 "new java.lang.StringBuilder"->"specialinvoke <java.lang.StringBuilder: void <init>(java.lang.String)>";
 "specialinvoke <java.lang.StringBuilder: void <init>(java.lang.String)>"->"virtualinvoke <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
 "virtualinvoke <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>"->"virtualinvoke <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
 "virtualinvoke <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>"->"virtualinvoke <java.lang.StringBuilder: java.lang.String toString()>";
 "virtualinvoke <java.lang.StringBuilder: java.lang.String toString()>"->"virtualinvoke <java.util.logging.Logger: void info(java.lang.String)>";
 "virtualinvoke <java.util.logging.Logger: void info(java.lang.String)>"->"fieldget <com.electa.installer.MainApplet: netscape.javascript.JSObject browserWindow>";
 "fieldget <com.electa.installer.MainApplet: netscape.javascript.JSObject browserWindow>"->"ifnull return";
 "ifnull return"->"fieldget <com.electa.installer.MainApplet: java.lang.String nonMSWindowsScript>";
 "fieldget <com.electa.installer.MainApplet: java.lang.String nonMSWindowsScript>"->"staticinvoke <com.electa.installer.Utils: boolean isEmpty(java.lang.String)>";
 "staticinvoke <com.electa.installer.Utils: boolean isEmpty(java.lang.String)>"->"ifne return";
 "ifne return"->"fieldget <com.electa.installer.MainApplet: netscape.javascript.JSObject browserWindow>";
 "fieldget <com.electa.installer.MainApplet: netscape.javascript.JSObject browserWindow>"->"fieldget <com.electa.installer.MainApplet: java.lang.String nonMSWindowsScript>";
 "fieldget <com.electa.installer.MainApplet: java.lang.String nonMSWindowsScript>"->"virtualinvoke <netscape.javascript.JSObject: java.lang.Object eval(java.lang.String)>";
 "virtualinvoke <netscape.javascript.JSObject: java.lang.Object eval(java.lang.String)>"->"return";
 "ifne new com.electa.installer.InstallerCtrl"->"new com.electa.installer.InstallerCtrl";
 "new com.electa.installer.InstallerCtrl"->"specialinvoke <com.electa.installer.InstallerCtrl: void <init>(com.electa.installer.MainApplet)>";
 "specialinvoke <com.electa.installer.InstallerCtrl: void <init>(com.electa.installer.MainApplet)>"->"virtualinvoke <com.electa.installer.InstallerCtrl: void startProcess()>";
 "virtualinvoke <com.electa.installer.InstallerCtrl: void startProcess()>"->"return";
 "virtualinvoke <com.electa.installer.MainApplet: void getAppletParameters()>"->"fieldget <com.electa.installer.MainApplet: java.lang.String onProcessNotStartedScript>";
 "fieldget <com.electa.installer.MainApplet: java.lang.String onProcessNotStartedScript>"->"virtualinvoke <com.electa.installer.MainApplet: void executeJS(java.lang.String)>";
 "virtualinvoke <com.electa.installer.MainApplet: void executeJS(java.lang.String)>"->"fieldget <com.electa.installer.MainApplet: java.lang.String SecurityErrorMsg>";
 "fieldget <com.electa.installer.MainApplet: java.lang.String SecurityErrorMsg>"->"virtualinvoke <com.electa.installer.MainApplet: void showErrorMessage(java.lang.String)>";
 "virtualinvoke <com.electa.installer.MainApplet: void showErrorMessage(java.lang.String)>"->"return";
 "staticinvoke <netscape.javascript.JSObject: netscape.javascript.JSObject getWindow(java.applet.Applet)>"->"staticget <com.electa.installer.MainApplet: java.util.logging.Logger log>";
 "staticget <com.electa.installer.MainApplet: java.util.logging.Logger log>"->"staticget <java.util.logging.Level: java.util.logging.Level SEVERE>";
 "staticget <java.util.logging.Level: java.util.logging.Level SEVERE>"->"virtualinvoke <java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>";
}
