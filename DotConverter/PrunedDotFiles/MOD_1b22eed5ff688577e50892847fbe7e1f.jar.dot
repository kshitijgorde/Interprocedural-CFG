digraph "" {
"virtualinvoke <java.applet.Applet: void showStatus(java.lang.String)>";
 "virtualinvoke <java.applet.Applet: void showStatus(java.lang.String)>"->"virtualinvoke <java.awt.Component: java.awt.Dimension getSize()>";
 "virtualinvoke <java.awt.Component: java.awt.Dimension getSize()>"->"fieldget <java.awt.Dimension: int width>";
 "fieldget <java.awt.Dimension: int width>"->"virtualinvoke <java.awt.Component: void addMouseListener(java.awt.event.MouseListener)>";
 "virtualinvoke <java.awt.Component: void addMouseListener(java.awt.event.MouseListener)>"->"fieldget <Shimmer: java.awt.Button vButton>";
 "fieldget <Shimmer: java.awt.Button vButton>"->"staticget <java.awt.Color: java.awt.Color green>";
 "staticget <java.awt.Color: java.awt.Color green>"->"virtualinvoke <java.awt.Component: void setForeground(java.awt.Color)>";
 "virtualinvoke <java.awt.Component: void setForeground(java.awt.Color)>"->"fieldget <Shimmer: java.awt.Button vButton>";
 "fieldget <Shimmer: java.awt.Button vButton>"->"staticget <java.awt.Color: java.awt.Color black>";
 "staticget <java.awt.Color: java.awt.Color black>"->"virtualinvoke <java.awt.Component: void setBackground(java.awt.Color)>";
 "virtualinvoke <java.awt.Component: void setBackground(java.awt.Color)>"->"fieldget <Shimmer: java.awt.Button vButton>";
 "fieldget <Shimmer: java.awt.Button vButton>"->"virtualinvoke <java.awt.Container: java.awt.Component add(java.awt.Component)>";
 "virtualinvoke <java.awt.Container: java.awt.Component add(java.awt.Component)>"->"virtualinvoke <java.awt.Component: java.awt.Dimension getSize()>";
 "virtualinvoke <java.awt.Component: java.awt.Dimension getSize()>"->"fieldget <java.awt.Dimension: int width>";
 "fieldget <java.awt.Dimension: int width>"->"virtualinvoke <java.awt.Component: java.awt.Dimension getSize()>";
 "virtualinvoke <java.awt.Component: java.awt.Dimension getSize()>"->"fieldget <java.awt.Dimension: int height>";
 "fieldget <java.awt.Dimension: int height>"->"virtualinvoke <java.awt.Component: java.awt.Image createImage(int,int)>";
 "virtualinvoke <java.awt.Component: java.awt.Image createImage(int,int)>"->"fieldput <Shimmer: java.awt.Image workspace>";
 "fieldput <Shimmer: java.awt.Image workspace>"->"fieldget <Shimmer: java.awt.Image workspace>";
 "fieldget <Shimmer: java.awt.Image workspace>"->"virtualinvoke <java.awt.Image: java.awt.Graphics getGraphics()>";
 "virtualinvoke <java.awt.Image: java.awt.Graphics getGraphics()>"->"fieldput <Shimmer: java.awt.Graphics offscreen>";
 "fieldput <Shimmer: java.awt.Graphics offscreen>"->"virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>";
 "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"->"virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>";
 "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"->"goto load.r r0";
 "goto load.r r0"->"virtualinvoke <java.applet.Applet: java.net.URL getCodeBase()>";
 "virtualinvoke <java.applet.Applet: java.net.URL getCodeBase()>"->"virtualinvoke <java.applet.Applet: java.awt.Image getImage(java.net.URL,java.lang.String)>";
 "virtualinvoke <java.applet.Applet: java.awt.Image getImage(java.net.URL,java.lang.String)>"->"fieldput <Shimmer: java.awt.Image FrontImg>";
 "fieldput <Shimmer: java.awt.Image FrontImg>"->"fieldget <Shimmer: java.awt.MediaTracker trackR>";
 "fieldget <Shimmer: java.awt.MediaTracker trackR>"->"fieldget <Shimmer: java.awt.Image FrontImg>";
 "fieldget <Shimmer: java.awt.Image FrontImg>"->"virtualinvoke <java.awt.MediaTracker: void addImage(java.awt.Image,int)>";
 "virtualinvoke <java.awt.MediaTracker: void addImage(java.awt.Image,int)>"->"fieldget <Shimmer: java.awt.MediaTracker trackR>";
 "fieldget <Shimmer: java.awt.MediaTracker trackR>"->"virtualinvoke <java.awt.MediaTracker: void waitForID(int)>";
 "virtualinvoke <java.awt.MediaTracker: void waitForID(int)>"->"goto load.r r0";
 "goto load.r r0"->"virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>";
 "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"->"new java.awt.Color";
 "new java.awt.Color"->"staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>";
 "staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>"->"specialinvoke <java.awt.Color: void <init>(int)>";
 "specialinvoke <java.awt.Color: void <init>(int)>"->"fieldput <Shimmer: java.awt.Color base>";
 "fieldput <Shimmer: java.awt.Color base>"->"fieldget <Shimmer: java.awt.Color[] array>";
 "fieldget <Shimmer: java.awt.Color[] array>"->"fieldget <Shimmer: java.awt.Color base>";
 "fieldget <Shimmer: java.awt.Color base>"->"virtualinvoke <java.awt.Color: java.awt.Color brighter()>";
 "virtualinvoke <java.awt.Color: java.awt.Color brighter()>"->"fieldget <Shimmer: java.awt.Color[] array>";
 "fieldget <Shimmer: java.awt.Color[] array>"->"fieldget <Shimmer: java.awt.Color[] array>";
 "fieldget <Shimmer: java.awt.Color[] array>"->"virtualinvoke <java.awt.Color: java.awt.Color brighter()>";
 "virtualinvoke <java.awt.Color: java.awt.Color brighter()>"->"fieldget <Shimmer: java.awt.Color[] array>";
 "fieldget <Shimmer: java.awt.Color[] array>"->"fieldget <Shimmer: java.awt.Color[] array>";
 "fieldget <Shimmer: java.awt.Color[] array>"->"virtualinvoke <java.awt.Color: java.awt.Color brighter()>";
 "virtualinvoke <java.awt.Color: java.awt.Color brighter()>"->"fieldget <Shimmer: java.awt.Color[] array>";
 "fieldget <Shimmer: java.awt.Color[] array>"->"fieldget <Shimmer: java.awt.Color[] array>";
 "fieldget <Shimmer: java.awt.Color[] array>"->"virtualinvoke <java.awt.Color: java.awt.Color brighter()>";
 "virtualinvoke <java.awt.Color: java.awt.Color brighter()>"->"virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>";
 "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"->"ifnull return";
 "ifnull return"->"staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>";
 "staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>"->"return";
 "virtualinvoke <java.awt.MediaTracker: void waitForID(int)>"->}
