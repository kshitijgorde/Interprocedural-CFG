digraph "" {
"specialinvoke <java.applet.Applet: void init()>";
 "specialinvoke <java.applet.Applet: void init()>"->"virtualinvoke <java.awt.Component: java.awt.Dimension size()>";
 "virtualinvoke <java.awt.Component: java.awt.Dimension size()>"->"fieldget <java.awt.Dimension: int width>";
 "fieldget <java.awt.Dimension: int width>"->"virtualinvoke <java.awt.Component: java.awt.Dimension size()>";
 "virtualinvoke <java.awt.Component: java.awt.Dimension size()>"->"fieldget <java.awt.Dimension: int height>";
 "fieldget <java.awt.Dimension: int height>"->"virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>";
 "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"->"virtualinvoke <java.lang.String: java.lang.String trim()>";
 "virtualinvoke <java.lang.String: java.lang.String trim()>"->"virtualinvoke <java.lang.String: java.lang.String toUpperCase()>";
 "virtualinvoke <java.lang.String: java.lang.String toUpperCase()>"->"virtualinvoke <java.lang.String: int length()>";
 "virtualinvoke <java.lang.String: int length()>"->"virtualinvoke <java.lang.String: char charAt(int)>";
 "virtualinvoke <java.lang.String: char charAt(int)>"->"virtualinvoke <java.lang.String: int length()>";
 "virtualinvoke <java.lang.String: int length()>"->"new java.lang.Integer";
 "new java.lang.Integer"->"virtualinvoke <java.lang.String: java.lang.String substring(int,int)>";
 "virtualinvoke <java.lang.String: java.lang.String substring(int,int)>"->"specialinvoke <java.lang.Integer: void <init>(java.lang.String)>";
 "specialinvoke <java.lang.Integer: void <init>(java.lang.String)>"->"virtualinvoke <java.lang.Integer: int intValue()>";
 "virtualinvoke <java.lang.Integer: int intValue()>"->"new java.lang.Integer";
 "new java.lang.Integer"->"virtualinvoke <java.lang.String: int length()>";
 "virtualinvoke <java.lang.String: int length()>"->"virtualinvoke <java.lang.String: int length()>";
 "virtualinvoke <java.lang.String: int length()>"->"virtualinvoke <java.lang.String: java.lang.String substring(int,int)>";
 "virtualinvoke <java.lang.String: java.lang.String substring(int,int)>"->"specialinvoke <java.lang.Integer: void <init>(java.lang.String)>";
 "specialinvoke <java.lang.Integer: void <init>(java.lang.String)>"->"virtualinvoke <java.lang.Integer: int intValue()>";
 "virtualinvoke <java.lang.Integer: int intValue()>"->"virtualinvoke <java.applet.Applet: java.net.URL getDocumentBase()>";
 "virtualinvoke <java.applet.Applet: java.net.URL getDocumentBase()>"->"virtualinvoke <java.net.URL: java.lang.String getHost()>";
 "virtualinvoke <java.net.URL: java.lang.String getHost()>"->"virtualinvoke <java.lang.String: java.lang.String toUpperCase()>";
 "virtualinvoke <java.lang.String: java.lang.String toUpperCase()>"->"virtualinvoke <java.lang.String: int length()>";
 "virtualinvoke <java.lang.String: int length()>"->"virtualinvoke <java.lang.String: int length()>";
 "virtualinvoke <java.lang.String: int length()>"->"goto load.i i36";
 "goto load.i i36"->"goto load.i i0";
 "goto load.i i0"->"new java.lang.Integer";
 "new java.lang.Integer"->"virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>";
 "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"->"specialinvoke <java.lang.Integer: void <init>(java.lang.String)>";
 "specialinvoke <java.lang.Integer: void <init>(java.lang.String)>"->"virtualinvoke <java.lang.Integer: int intValue()>";
 "virtualinvoke <java.lang.Integer: int intValue()>"->"virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>";
 "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"->"fieldput <SlidingPuzzle: java.lang.String picfile>";
 "fieldput <SlidingPuzzle: java.lang.String picfile>"->"new java.lang.Integer";
 "new java.lang.Integer"->"virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>";
 "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"->"specialinvoke <java.lang.Integer: void <init>(java.lang.String)>";
 "specialinvoke <java.lang.Integer: void <init>(java.lang.String)>"->"virtualinvoke <java.lang.Integer: int intValue()>";
 "virtualinvoke <java.lang.Integer: int intValue()>"->"new java.lang.Integer";
 "new java.lang.Integer"->"virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>";
 "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"->"specialinvoke <java.lang.Integer: void <init>(java.lang.String)>";
 "specialinvoke <java.lang.Integer: void <init>(java.lang.String)>"->"virtualinvoke <java.lang.Integer: int intValue()>";
 "virtualinvoke <java.lang.Integer: int intValue()>"->"new java.lang.Integer";
 "new java.lang.Integer"->"virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>";
 "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"->"specialinvoke <java.lang.Integer: void <init>(java.lang.String)>";
 "specialinvoke <java.lang.Integer: void <init>(java.lang.String)>"->"virtualinvoke <java.lang.Integer: int intValue()>";
 "virtualinvoke <java.lang.Integer: int intValue()>"->"virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>";
 "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"->"fieldput <SlidingPuzzle: java.lang.String winfile>";
 "fieldput <SlidingPuzzle: java.lang.String winfile>"->"virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>";
 "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"->"fieldput <SlidingPuzzle: java.lang.String movefile>";
 "fieldput <SlidingPuzzle: java.lang.String movefile>"->"virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>";
 "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"->"virtualinvoke <SlidingPuzzle: int[] parseInt(java.lang.String)>";
 "virtualinvoke <SlidingPuzzle: int[] parseInt(java.lang.String)>"->"new java.awt.Color";
 "new java.awt.Color"->"specialinvoke <java.awt.Color: void <init>(int,int,int)>";
 "specialinvoke <java.awt.Color: void <init>(int,int,int)>"->"fieldput <SlidingPuzzle: java.awt.Color bg>";
 "fieldput <SlidingPuzzle: java.awt.Color bg>"->"virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>";
 "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"->"virtualinvoke <SlidingPuzzle: int[] parseInt(java.lang.String)>";
 "virtualinvoke <SlidingPuzzle: int[] parseInt(java.lang.String)>"->"new java.awt.Color";
 "new java.awt.Color"->"specialinvoke <java.awt.Color: void <init>(int,int,int)>";
 "specialinvoke <java.awt.Color: void <init>(int,int,int)>"->"fieldput <SlidingPuzzle: java.awt.Color fg>";
 "fieldput <SlidingPuzzle: java.awt.Color fg>"->"virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>";
 "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"->"virtualinvoke <SlidingPuzzle: int[] parseInt(java.lang.String)>";
 "virtualinvoke <SlidingPuzzle: int[] parseInt(java.lang.String)>"->"new java.awt.Color";
 "new java.awt.Color"->"specialinvoke <java.awt.Color: void <init>(int,int,int)>";
 "specialinvoke <java.awt.Color: void <init>(int,int,int)>"->"fieldput <SlidingPuzzle: java.awt.Color butbg>";
 "fieldput <SlidingPuzzle: java.awt.Color butbg>"->"virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>";
 "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"->"virtualinvoke <SlidingPuzzle: int[] parseInt(java.lang.String)>";
 "virtualinvoke <SlidingPuzzle: int[] parseInt(java.lang.String)>"->"new java.awt.Color";
 "new java.awt.Color"->"specialinvoke <java.awt.Color: void <init>(int,int,int)>";
 "specialinvoke <java.awt.Color: void <init>(int,int,int)>"->"fieldput <SlidingPuzzle: java.awt.Color butfg>";
 "fieldput <SlidingPuzzle: java.awt.Color butfg>"->"virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>";
 "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"->"virtualinvoke <SlidingPuzzle: int[] parseInt(java.lang.String)>";
 "virtualinvoke <SlidingPuzzle: int[] parseInt(java.lang.String)>"->"new java.awt.Color";
 "new java.awt.Color"->"specialinvoke <java.awt.Color: void <init>(int,int,int)>";
 "specialinvoke <java.awt.Color: void <init>(int,int,int)>"->"fieldput <SlidingPuzzle: java.awt.Color overc>";
 "fieldput <SlidingPuzzle: java.awt.Color overc>"->"virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>";
 "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"->"virtualinvoke <java.lang.String: java.lang.String trim()>";
 "virtualinvoke <java.lang.String: java.lang.String trim()>"->"virtualinvoke <SlidingPuzzle: java.lang.String[] parse(java.lang.String)>";
 "virtualinvoke <SlidingPuzzle: java.lang.String[] parse(java.lang.String)>"->"fieldput <SlidingPuzzle: java.lang.String linkto>";
 "fieldput <SlidingPuzzle: java.lang.String linkto>"->"fieldput <SlidingPuzzle: java.lang.String linkframe>";
 "fieldput <SlidingPuzzle: java.lang.String linkframe>"->"new java.lang.Integer";
 "new java.lang.Integer"->"virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>";
 "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"->"specialinvoke <java.lang.Integer: void <init>(java.lang.String)>";
 "specialinvoke <java.lang.Integer: void <init>(java.lang.String)>"->"virtualinvoke <java.lang.Integer: int intValue()>";
 "virtualinvoke <java.lang.Integer: int intValue()>"->"new java.lang.Integer";
 "new java.lang.Integer"->"virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>";
 "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"->"specialinvoke <java.lang.Integer: void <init>(java.lang.String)>";
 "specialinvoke <java.lang.Integer: void <init>(java.lang.String)>"->"virtualinvoke <java.lang.Integer: int intValue()>";
 "virtualinvoke <java.lang.Integer: int intValue()>"->"virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>";
 "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"->"fieldput <SlidingPuzzle: java.lang.String TitleText>";
 "fieldput <SlidingPuzzle: java.lang.String TitleText>"->"virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>";
 "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"->"fieldput <SlidingPuzzle: java.lang.String NewGameText>";
 "fieldput <SlidingPuzzle: java.lang.String NewGameText>"->"virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>";
 "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"->"fieldput <SlidingPuzzle: java.lang.String SolvePuzzleText>";
 "fieldput <SlidingPuzzle: java.lang.String SolvePuzzleText>"->"virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>";
 "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"->"fieldput <SlidingPuzzle: java.lang.String MovesCountText>";
 "fieldput <SlidingPuzzle: java.lang.String MovesCountText>"->"virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>";
 "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"->"fieldput <SlidingPuzzle: java.lang.String BestText>";
 "fieldput <SlidingPuzzle: java.lang.String BestText>"->"virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>";
 "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"->"fieldput <SlidingPuzzle: java.lang.String FinishText>";
 "fieldput <SlidingPuzzle: java.lang.String FinishText>"->"virtualinvoke <java.applet.Applet: java.net.URL getDocumentBase()>";
 "virtualinvoke <java.applet.Applet: java.net.URL getDocumentBase()>"->"fieldget <SlidingPuzzle: java.lang.String winfile>";
 "fieldget <SlidingPuzzle: java.lang.String winfile>"->"virtualinvoke <java.applet.Applet: java.applet.AudioClip getAudioClip(java.net.URL,java.lang.String)>";
 "virtualinvoke <java.applet.Applet: java.applet.AudioClip getAudioClip(java.net.URL,java.lang.String)>"->"fieldput <SlidingPuzzle: java.applet.AudioClip winaudio>";
 "fieldput <SlidingPuzzle: java.applet.AudioClip winaudio>"->"virtualinvoke <java.applet.Applet: java.net.URL getDocumentBase()>";
 "virtualinvoke <java.applet.Applet: java.net.URL getDocumentBase()>"->"fieldget <SlidingPuzzle: java.lang.String movefile>";
 "fieldget <SlidingPuzzle: java.lang.String movefile>"->"virtualinvoke <java.applet.Applet: java.applet.AudioClip getAudioClip(java.net.URL,java.lang.String)>";
 "virtualinvoke <java.applet.Applet: java.applet.AudioClip getAudioClip(java.net.URL,java.lang.String)>"->"fieldput <SlidingPuzzle: java.applet.AudioClip moveaudio>";
 "fieldput <SlidingPuzzle: java.applet.AudioClip moveaudio>"->"fieldget <SlidingPuzzle: java.lang.String picfile>";
 "fieldget <SlidingPuzzle: java.lang.String picfile>"->"virtualinvoke <SlidingPuzzle: void readPhoto(java.lang.String)>";
 "virtualinvoke <SlidingPuzzle: void readPhoto(java.lang.String)>"->"fieldget <SlidingPuzzle: java.awt.Image photo>";
 "fieldget <SlidingPuzzle: java.awt.Image photo>"->"specialinvoke <SlidingPuzzlePhoto: void <init>(java.awt.Image,int,int,int,int,SlidingPuzzle)>";
 "specialinvoke <SlidingPuzzlePhoto: void <init>(java.awt.Image,int,int,int,int,SlidingPuzzle)>"->"fieldget <SlidingPuzzle: java.awt.Color bg>";
 "fieldget <SlidingPuzzle: java.awt.Color bg>"->"fieldput <SlidingPuzzlePhoto: java.awt.Color bg>";
 "fieldput <SlidingPuzzlePhoto: java.awt.Color bg>"->"fieldget <SlidingPuzzle: java.awt.Color overc>";
 "fieldget <SlidingPuzzle: java.awt.Color overc>"->"fieldput <SlidingPuzzlePhoto: java.awt.Color overc>";
 "fieldput <SlidingPuzzlePhoto: java.awt.Color overc>"->"fieldget <SlidingPuzzle: java.applet.AudioClip winaudio>";
 "fieldget <SlidingPuzzle: java.applet.AudioClip winaudio>"->"fieldput <SlidingPuzzlePhoto: java.applet.AudioClip winaudio>";
 "fieldput <SlidingPuzzlePhoto: java.applet.AudioClip winaudio>"->"fieldget <SlidingPuzzle: java.applet.AudioClip moveaudio>";
 "fieldget <SlidingPuzzle: java.applet.AudioClip moveaudio>"->"fieldput <SlidingPuzzlePhoto: java.applet.AudioClip moveaudio>";
 "fieldput <SlidingPuzzlePhoto: java.applet.AudioClip moveaudio>"->"fieldget <SlidingPuzzle: java.lang.String MovesCountText>";
 "fieldget <SlidingPuzzle: java.lang.String MovesCountText>"->"fieldput <SlidingPuzzlePhoto: java.lang.String MovesCountText>";
 "fieldput <SlidingPuzzlePhoto: java.lang.String MovesCountText>"->"fieldget <SlidingPuzzle: java.lang.String FinishText>";
 "fieldget <SlidingPuzzle: java.lang.String FinishText>"->"fieldput <SlidingPuzzlePhoto: java.lang.String FinishText>";
 "fieldput <SlidingPuzzlePhoto: java.lang.String FinishText>"->"fieldget <SlidingPuzzle: java.lang.String BestText>";
 "fieldget <SlidingPuzzle: java.lang.String BestText>"->"fieldput <SlidingPuzzlePhoto: java.lang.String BestText>";
 "fieldput <SlidingPuzzlePhoto: java.lang.String BestText>"->"virtualinvoke <java.awt.Component: void repaint()>";
 "virtualinvoke <java.awt.Component: void repaint()>"->"new java.awt.Panel";
 "new java.awt.Panel"->"new java.awt.BorderLayout";
 "new java.awt.BorderLayout"->"specialinvoke <java.awt.BorderLayout: void <init>()>";
 "specialinvoke <java.awt.BorderLayout: void <init>()>"->"specialinvoke <java.awt.Panel: void <init>(java.awt.LayoutManager)>";
 "specialinvoke <java.awt.Panel: void <init>(java.awt.LayoutManager)>"->"virtualinvoke <java.awt.Container: java.awt.Component add(java.lang.String,java.awt.Component)>";
 "virtualinvoke <java.awt.Container: java.awt.Component add(java.lang.String,java.awt.Component)>"->"fieldget <SlidingPuzzle: java.awt.Color bg>";
 "fieldget <SlidingPuzzle: java.awt.Color bg>"->"virtualinvoke <java.awt.Component: void setBackground(java.awt.Color)>";
 "virtualinvoke <java.awt.Component: void setBackground(java.awt.Color)>"->"fieldget <SlidingPuzzle: java.awt.Color fg>";
 "fieldget <SlidingPuzzle: java.awt.Color fg>"->"virtualinvoke <java.awt.Component: void setForeground(java.awt.Color)>";
 "virtualinvoke <java.awt.Component: void setForeground(java.awt.Color)>"->"new java.awt.GridBagLayout";
 "new java.awt.GridBagLayout"->"specialinvoke <java.awt.GridBagLayout: void <init>()>";
 "specialinvoke <java.awt.GridBagLayout: void <init>()>"->"new java.awt.GridBagConstraints";
 "new java.awt.GridBagConstraints"->"specialinvoke <java.awt.GridBagConstraints: void <init>()>";
 "specialinvoke <java.awt.GridBagConstraints: void <init>()>"->"fieldput <java.awt.GridBagConstraints: int fill>";
 "fieldput <java.awt.GridBagConstraints: int fill>"->"fieldput <java.awt.GridBagConstraints: int gridwidth>";
 "fieldput <java.awt.GridBagConstraints: int gridwidth>"->"fieldput <java.awt.GridBagConstraints: int anchor>";
 "fieldput <java.awt.GridBagConstraints: int anchor>"->"goto load.i $r40";
 "goto load.i $r40"->"fieldget <SlidingPuzzle: java.lang.String NewGameText>";
 "fieldget <SlidingPuzzle: java.lang.String NewGameText>"->"fieldget <SlidingPuzzle: java.awt.Color butbg>";
 "fieldget <SlidingPuzzle: java.awt.Color butbg>"->"fieldget <SlidingPuzzle: java.awt.Color butfg>";
 "fieldget <SlidingPuzzle: java.awt.Color butfg>"->"specialinvoke <SlidingPuzzleButton: void <init>(int,int,java.lang.String,java.lang.String,int,java.awt.Color,java.awt.Color)>";
 "specialinvoke <SlidingPuzzleButton: void <init>(int,int,java.lang.String,java.lang.String,int,java.awt.Color,java.awt.Color)>"->"fieldget <SlidingPuzzle: java.awt.Color bg>";
 "fieldget <SlidingPuzzle: java.awt.Color bg>"->"virtualinvoke <SlidingPuzzleButton: void setBGmain(java.awt.Color)>";
 "virtualinvoke <SlidingPuzzleButton: void setBGmain(java.awt.Color)>"->"virtualinvoke <java.awt.Container: java.awt.Component add(java.awt.Component)>";
 "virtualinvoke <java.awt.Container: java.awt.Component add(java.awt.Component)>"->"fieldget <SlidingPuzzle: java.lang.String SolvePuzzleText>";
 "fieldget <SlidingPuzzle: java.lang.String SolvePuzzleText>"->"fieldget <SlidingPuzzle: java.awt.Color butbg>";
 "fieldget <SlidingPuzzle: java.awt.Color butbg>"->"fieldget <SlidingPuzzle: java.awt.Color butfg>";
 "fieldget <SlidingPuzzle: java.awt.Color butfg>"->"specialinvoke <SlidingPuzzleButton: void <init>(int,int,java.lang.String,java.lang.String,int,java.awt.Color,java.awt.Color)>";
 "specialinvoke <SlidingPuzzleButton: void <init>(int,int,java.lang.String,java.lang.String,int,java.awt.Color,java.awt.Color)>"->"fieldget <SlidingPuzzle: java.awt.Color bg>";
 "fieldget <SlidingPuzzle: java.awt.Color bg>"->"virtualinvoke <SlidingPuzzleButton: void setBGmain(java.awt.Color)>";
 "virtualinvoke <SlidingPuzzleButton: void setBGmain(java.awt.Color)>"->"virtualinvoke <java.awt.Container: java.awt.Component add(java.awt.Component)>";
 "virtualinvoke <java.awt.Container: java.awt.Component add(java.awt.Component)>"->"goto load.r r0";
 "goto load.r r0"->"new java.awt.Label";
 "new java.awt.Label"->"specialinvoke <java.awt.Label: void <init>(java.lang.String,int)>";
 "specialinvoke <java.awt.Label: void <init>(java.lang.String,int)>"->"fieldput <SlidingPuzzle: java.awt.Label timer>";
 "fieldput <SlidingPuzzle: java.awt.Label timer>"->"fieldget <SlidingPuzzle: java.awt.Label timer>";
 "fieldget <SlidingPuzzle: java.awt.Label timer>"->"fieldget <SlidingPuzzle: java.awt.Color bg>";
 "fieldget <SlidingPuzzle: java.awt.Color bg>"->"virtualinvoke <java.awt.Component: void setBackground(java.awt.Color)>";
 "virtualinvoke <java.awt.Component: void setBackground(java.awt.Color)>"->"fieldget <SlidingPuzzle: java.awt.Label timer>";
 "fieldget <SlidingPuzzle: java.awt.Label timer>"->"fieldget <SlidingPuzzle: java.awt.Color fg>";
 "fieldget <SlidingPuzzle: java.awt.Color fg>"->"virtualinvoke <java.awt.Component: void setForeground(java.awt.Color)>";
 "virtualinvoke <java.awt.Component: void setForeground(java.awt.Color)>"->"fieldget <SlidingPuzzle: java.awt.Label timer>";
 "fieldget <SlidingPuzzle: java.awt.Label timer>"->"new java.awt.Font";
 "new java.awt.Font"->"specialinvoke <java.awt.Font: void <init>(java.lang.String,int,int)>";
 "specialinvoke <java.awt.Font: void <init>(java.lang.String,int,int)>"->"virtualinvoke <java.awt.Component: void setFont(java.awt.Font)>";
 "virtualinvoke <java.awt.Component: void setFont(java.awt.Font)>"->"fieldget <SlidingPuzzle: java.awt.Label timer>";
 "fieldget <SlidingPuzzle: java.awt.Label timer>"->"virtualinvoke <java.awt.Container: java.awt.Component add(java.awt.Component)>";
 "virtualinvoke <java.awt.Container: java.awt.Component add(java.awt.Component)>"->"new java.awt.Panel";
 "new java.awt.Panel"->"specialinvoke <java.awt.Panel: void <init>()>";
 "specialinvoke <java.awt.Panel: void <init>()>"->"new java.awt.FlowLayout";
 "new java.awt.FlowLayout"->"specialinvoke <java.awt.FlowLayout: void <init>()>";
 "specialinvoke <java.awt.FlowLayout: void <init>()>"->"virtualinvoke <java.awt.Container: void setLayout(java.awt.LayoutManager)>";
 "virtualinvoke <java.awt.Container: void setLayout(java.awt.LayoutManager)>"->"goto load.i i34";
 "goto load.i i34"->"virtualinvoke <java.awt.Container: java.awt.Component add(java.lang.String,java.awt.Component)>";
 "virtualinvoke <java.awt.Container: java.awt.Component add(java.lang.String,java.awt.Component)>"->"new java.awt.Label";
 "new java.awt.Label"->"fieldget <SlidingPuzzle: java.lang.String TitleText>";
 "fieldget <SlidingPuzzle: java.lang.String TitleText>"->"specialinvoke <java.awt.Label: void <init>(java.lang.String,int)>";
 "specialinvoke <java.awt.Label: void <init>(java.lang.String,int)>"->"fieldget <SlidingPuzzle: java.awt.Color bg>";
 "fieldget <SlidingPuzzle: java.awt.Color bg>"->"virtualinvoke <java.awt.Component: void setBackground(java.awt.Color)>";
 "virtualinvoke <java.awt.Component: void setBackground(java.awt.Color)>"->"fieldget <SlidingPuzzle: java.awt.Color fg>";
 "fieldget <SlidingPuzzle: java.awt.Color fg>"->"virtualinvoke <java.awt.Component: void setForeground(java.awt.Color)>";
 "virtualinvoke <java.awt.Component: void setForeground(java.awt.Color)>"->"new java.awt.Font";
 "new java.awt.Font"->"specialinvoke <java.awt.Font: void <init>(java.lang.String,int,int)>";
 "specialinvoke <java.awt.Font: void <init>(java.lang.String,int,int)>"->"virtualinvoke <java.awt.Component: void setFont(java.awt.Font)>";
 "virtualinvoke <java.awt.Component: void setFont(java.awt.Font)>"->"virtualinvoke <java.awt.Container: java.awt.Component add(java.lang.String,java.awt.Component)>";
 "virtualinvoke <java.awt.Container: java.awt.Component add(java.lang.String,java.awt.Component)>"->"virtualinvoke <java.awt.Container: java.awt.Component add(java.awt.Component)>";
 "virtualinvoke <java.awt.Container: java.awt.Component add(java.awt.Component)>"->"virtualinvoke <java.applet.Applet: void resize(int,int)>";
 "virtualinvoke <java.applet.Applet: void resize(int,int)>"->"virtualinvoke <java.awt.Component: void show()>";
 "virtualinvoke <java.awt.Component: void show()>"->"virtualinvoke <java.awt.Component: void repaint()>";
 "virtualinvoke <java.awt.Component: void repaint()>"->"return";
"virtualinvoke <java.awt.Container: java.awt.Component add(java.awt.Component)>";
 "virtualinvoke <java.awt.Container: java.awt.Component add(java.awt.Component)>"->"new java.awt.Label";
 "new java.awt.Label"->"specialinvoke <java.awt.Label: void <init>(java.lang.String,int)>";
 "specialinvoke <java.awt.Label: void <init>(java.lang.String,int)>"->"virtualinvoke <java.awt.Container: java.awt.Component add(java.awt.Component)>";
 "virtualinvoke <java.awt.Container: java.awt.Component add(java.awt.Component)>"->"new java.awt.Panel";
 "new java.awt.Panel"->"specialinvoke <java.awt.Panel: void <init>()>";
 "specialinvoke <java.awt.Panel: void <init>()>"->"virtualinvoke <java.lang.String: char charAt(int)>";
 "virtualinvoke <java.lang.String: char charAt(int)>"->"goto inc.i i36 -1";
 "goto inc.i i36 -1"->"virtualinvoke <java.lang.String: char charAt(int)>";
 "virtualinvoke <java.lang.String: char charAt(int)>"->"virtualinvoke <java.lang.String: char charAt(int)>";
 "virtualinvoke <java.lang.String: char charAt(int)>"->"virtualinvoke <java.lang.String: char charAt(int)>";
 "virtualinvoke <java.lang.String: char charAt(int)>"->"goto inc.i i36 -1";
"virtualinvoke <java.lang.String: char charAt(int)>";
 "virtualinvoke <java.lang.String: char charAt(int)>"->"virtualinvoke <java.lang.String: char charAt(int)>";
 "virtualinvoke <java.lang.String: char charAt(int)>"->"virtualinvoke <java.lang.String: char charAt(int)>";
 "virtualinvoke <java.lang.String: char charAt(int)>"->}
