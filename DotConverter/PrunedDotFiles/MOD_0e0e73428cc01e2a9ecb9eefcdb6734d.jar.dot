digraph "" {
"new java.awt.Font";
 "new java.awt.Font"->"specialinvoke <java.awt.Font: void <init>(java.lang.String,int,int)>";
 "specialinvoke <java.awt.Font: void <init>(java.lang.String,int,int)>"->"virtualinvoke <java.awt.Component: java.awt.FontMetrics getFontMetrics(java.awt.Font)>";
 "virtualinvoke <java.awt.Component: java.awt.FontMetrics getFontMetrics(java.awt.Font)>"->"fieldput <TickerTape: java.awt.FontMetrics fm>";
 "fieldput <TickerTape: java.awt.FontMetrics fm>"->"fieldget <TickerTape: java.awt.FontMetrics fm>";
 "fieldget <TickerTape: java.awt.FontMetrics fm>"->"virtualinvoke <java.awt.FontMetrics: int getHeight()>";
 "virtualinvoke <java.awt.FontMetrics: int getHeight()>"->"virtualinvoke <java.awt.Component: java.awt.Dimension getSize()>";
 "virtualinvoke <java.awt.Component: java.awt.Dimension getSize()>"->"fieldget <java.awt.Dimension: int width>";
 "fieldget <java.awt.Dimension: int width>"->"virtualinvoke <java.awt.Component: java.awt.Dimension getSize()>";
 "virtualinvoke <java.awt.Component: java.awt.Dimension getSize()>"->"fieldget <java.awt.Dimension: int width>";
 "fieldget <java.awt.Dimension: int width>"->"virtualinvoke <java.awt.Component: java.awt.Dimension getSize()>";
 "virtualinvoke <java.awt.Component: java.awt.Dimension getSize()>"->"fieldget <java.awt.Dimension: int height>";
 "fieldget <java.awt.Dimension: int height>"->"virtualinvoke <java.awt.Component: java.awt.Image createImage(int,int)>";
 "virtualinvoke <java.awt.Component: java.awt.Image createImage(int,int)>"->"fieldput <TickerTape: java.awt.Image winScratch>";
 "fieldput <TickerTape: java.awt.Image winScratch>"->"fieldget <TickerTape: java.awt.Image winScratch>";
 "fieldget <TickerTape: java.awt.Image winScratch>"->"virtualinvoke <java.awt.Image: java.awt.Graphics getGraphics()>";
 "virtualinvoke <java.awt.Image: java.awt.Graphics getGraphics()>"->"fieldput <TickerTape: java.awt.Graphics gScratch>";
 "fieldput <TickerTape: java.awt.Graphics gScratch>"->"staticget <java.awt.Color: java.awt.Color white>";
 "staticget <java.awt.Color: java.awt.Color white>"->"virtualinvoke <java.awt.Component: void setBackground(java.awt.Color)>";
 "virtualinvoke <java.awt.Component: void setBackground(java.awt.Color)>"->"virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>";
 "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"->"staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>";
 "staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>"->"goto load.r r0";
 "goto load.r r0"->"virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>";
 "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"->"new java.awt.Color";
 "new java.awt.Color"->"staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>";
 "staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>"->"specialinvoke <java.awt.Color: void <init>(int)>";
 "specialinvoke <java.awt.Color: void <init>(int)>"->"fieldput <TickerTape: java.awt.Color outerborder>";
 "fieldput <TickerTape: java.awt.Color outerborder>"->"goto load.r r0";
 "goto load.r r0"->"virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>";
 "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"->"new java.awt.Color";
 "new java.awt.Color"->"staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>";
 "staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>"->"specialinvoke <java.awt.Color: void <init>(int)>";
 "specialinvoke <java.awt.Color: void <init>(int)>"->"fieldput <TickerTape: java.awt.Color middleborder>";
 "fieldput <TickerTape: java.awt.Color middleborder>"->"goto load.r r0";
 "goto load.r r0"->"virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>";
 "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"->"new java.awt.Color";
 "new java.awt.Color"->"staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>";
 "staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>"->"specialinvoke <java.awt.Color: void <init>(int)>";
 "specialinvoke <java.awt.Color: void <init>(int)>"->"fieldput <TickerTape: java.awt.Color innerborder>";
 "fieldput <TickerTape: java.awt.Color innerborder>"->"goto load.r r0";
 "goto load.r r0"->"virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>";
 "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"->"new java.awt.Color";
 "new java.awt.Color"->"staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>";
 "staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>"->"specialinvoke <java.awt.Color: void <init>(int)>";
 "specialinvoke <java.awt.Color: void <init>(int)>"->"fieldput <TickerTape: java.awt.Color textcolor>";
 "fieldput <TickerTape: java.awt.Color textcolor>"->"goto load.r r0";
 "goto load.r r0"->"virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>";
 "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"->"new java.awt.Color";
 "new java.awt.Color"->"staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>";
 "staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>"->"specialinvoke <java.awt.Color: void <init>(int)>";
 "specialinvoke <java.awt.Color: void <init>(int)>"->"fieldput <TickerTape: java.awt.Color textbackground>";
 "fieldput <TickerTape: java.awt.Color textbackground>"->"goto load.r r0";
 "goto load.r r0"->"virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>";
 "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"->"fieldput <TickerTape: java.lang.String tickerline>";
 "fieldput <TickerTape: java.lang.String tickerline>"->"fieldget <TickerTape: java.lang.String tickerline>";
 "fieldget <TickerTape: java.lang.String tickerline>"->"virtualinvoke <java.lang.String: java.lang.String substring(int,int)>";
 "virtualinvoke <java.lang.String: java.lang.String substring(int,int)>"->"fieldput <TickerTape: java.lang.String displaystring>";
 "fieldput <TickerTape: java.lang.String displaystring>"->"return";
}
