digraph "" {
"fieldput <LaserDrome: java.lang.String[] str>";
 "fieldput <LaserDrome: java.lang.String[] str>"->"goto load.r r0";
 "goto load.r r0"->"fieldget <LaserDrome: java.lang.String[] str>";
 "fieldget <LaserDrome: java.lang.String[] str>"->"new java.lang.StringBuffer";
 "new java.lang.StringBuffer"->"specialinvoke <java.lang.StringBuffer: void <init>(java.lang.String)>";
 "specialinvoke <java.lang.StringBuffer: void <init>(java.lang.String)>"->"virtualinvoke <java.lang.StringBuffer: java.lang.StringBuffer append(int)>";
 "virtualinvoke <java.lang.StringBuffer: java.lang.StringBuffer append(int)>"->"virtualinvoke <java.lang.StringBuffer: java.lang.String toString()>";
 "virtualinvoke <java.lang.StringBuffer: java.lang.String toString()>"->"virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>";
 "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"->"virtualinvoke <java.awt.Component: java.awt.Dimension getSize()>";
 "virtualinvoke <java.awt.Component: java.awt.Dimension getSize()>"->"fieldput <LaserDrome: java.awt.Dimension d>";
 "fieldput <LaserDrome: java.awt.Dimension d>"->"fieldget <LaserDrome: java.awt.Dimension d>";
 "fieldget <LaserDrome: java.awt.Dimension d>"->"fieldget <java.awt.Dimension: int width>";
 "fieldget <java.awt.Dimension: int width>"->"fieldget <LaserDrome: java.awt.Dimension d>";
 "fieldget <LaserDrome: java.awt.Dimension d>"->"fieldget <java.awt.Dimension: int height>";
 "fieldget <java.awt.Dimension: int height>"->"staticinvoke <java.lang.Math: int round(float)>";
 "staticinvoke <java.lang.Math: int round(float)>"->"staticinvoke <java.lang.Math: int round(float)>";
 "staticinvoke <java.lang.Math: int round(float)>"->"new java.lang.Thread";
 "new java.lang.Thread"->"specialinvoke <java.lang.Thread: void <init>(java.lang.Runnable)>";
 "specialinvoke <java.lang.Thread: void <init>(java.lang.Runnable)>"->"fieldput <LaserDrome: java.lang.Thread t>";
 "fieldput <LaserDrome: java.lang.Thread t>"->"fieldput <LaserDrome: java.awt.Image[] b>";
 "fieldput <LaserDrome: java.awt.Image[] b>"->"fieldput <LaserDrome: java.awt.Font[] f>";
 "fieldput <LaserDrome: java.awt.Font[] f>"->"virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>";
 "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"->"staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>";
 "staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>"->"virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>";
 "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"->"staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>";
 "staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>"->"goto load.r r0";
 "goto load.r r0"->"virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>";
 "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"->"staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>";
 "staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>"->"goto load.r r0";
 "goto load.r r0"->"goto load.r r0";
 "goto load.r r0"->"staticget <java.awt.Color: java.awt.Color lightGray>";
 "staticget <java.awt.Color: java.awt.Color lightGray>"->"fieldput <LaserDrome: java.awt.Color bc>";
 "fieldput <LaserDrome: java.awt.Color bc>"->"new java.awt.Color";
 "new java.awt.Color"->"virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>";
 "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"->"staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>";
 "staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>"->"specialinvoke <java.awt.Color: void <init>(int)>";
 "specialinvoke <java.awt.Color: void <init>(int)>"->"fieldput <LaserDrome: java.awt.Color bc>";
 "fieldput <LaserDrome: java.awt.Color bc>"->"goto load.r r0";
 "goto load.r r0"->"virtualinvoke <java.awt.Component: java.awt.Image createImage(int,int)>";
 "virtualinvoke <java.awt.Component: java.awt.Image createImage(int,int)>"->"fieldput <LaserDrome: java.awt.Image bi>";
 "fieldput <LaserDrome: java.awt.Image bi>"->"fieldget <LaserDrome: java.awt.Image bi>";
 "fieldget <LaserDrome: java.awt.Image bi>"->"virtualinvoke <java.awt.Image: java.awt.Graphics getGraphics()>";
 "virtualinvoke <java.awt.Image: java.awt.Graphics getGraphics()>"->"fieldput <LaserDrome: java.awt.Graphics bg>";
 "fieldput <LaserDrome: java.awt.Graphics bg>"->"goto load.r r0";
 "goto load.r r0"->"return";
"fieldget <LaserDrome: java.awt.Graphics bg>";
 "fieldget <LaserDrome: java.awt.Graphics bg>"->"fieldget <LaserDrome: java.awt.Font[] f>";
 "fieldget <LaserDrome: java.awt.Font[] f>"->"virtualinvoke <java.awt.Graphics: void setFont(java.awt.Font)>";
 "virtualinvoke <java.awt.Graphics: void setFont(java.awt.Font)>"->"fieldget <LaserDrome: java.awt.Graphics bg>";
 "fieldget <LaserDrome: java.awt.Graphics bg>"->"staticget <java.awt.Color: java.awt.Color lightGray>";
 "staticget <java.awt.Color: java.awt.Color lightGray>"->"virtualinvoke <java.awt.Graphics: void setColor(java.awt.Color)>";
 "virtualinvoke <java.awt.Graphics: void setColor(java.awt.Color)>"->"fieldget <LaserDrome: java.awt.Graphics bg>";
 "fieldget <LaserDrome: java.awt.Graphics bg>"->"virtualinvoke <java.awt.Graphics: void fillRect(int,int,int,int)>";
 "virtualinvoke <java.awt.Graphics: void fillRect(int,int,int,int)>"->"fieldget <LaserDrome: java.awt.Graphics bg>";
 "fieldget <LaserDrome: java.awt.Graphics bg>"->"staticget <java.awt.Color: java.awt.Color red>";
 "staticget <java.awt.Color: java.awt.Color red>"->"virtualinvoke <java.awt.Graphics: void setColor(java.awt.Color)>";
 "virtualinvoke <java.awt.Graphics: void setColor(java.awt.Color)>"->"fieldget <LaserDrome: java.awt.Graphics bg>";
 "fieldget <LaserDrome: java.awt.Graphics bg>"->"fieldget <LaserDrome: java.lang.String[] str>";
 "fieldget <LaserDrome: java.lang.String[] str>"->"virtualinvoke <java.awt.Graphics: void drawString(java.lang.String,int,int)>";
 "virtualinvoke <java.awt.Graphics: void drawString(java.lang.String,int,int)>"->"new java.awt.image.PixelGrabber";
 "new java.awt.image.PixelGrabber"->"fieldget <LaserDrome: java.awt.Image bi>";
 "fieldget <LaserDrome: java.awt.Image bi>"->"virtualinvoke <java.awt.Image: java.awt.image.ImageProducer getSource()>";
 "virtualinvoke <java.awt.Image: java.awt.image.ImageProducer getSource()>"->"specialinvoke <java.awt.image.PixelGrabber: void <init>(java.awt.image.ImageProducer,int,int,int,int,int[],int,int)>";
 "specialinvoke <java.awt.image.PixelGrabber: void <init>(java.awt.image.ImageProducer,int,int,int,int,int[],int,int)>"->"fieldput <LaserDrome: java.awt.image.PixelGrabber pg>";
 "fieldput <LaserDrome: java.awt.image.PixelGrabber pg>"->"fieldget <LaserDrome: java.awt.image.PixelGrabber pg>";
 "fieldget <LaserDrome: java.awt.image.PixelGrabber pg>"->"virtualinvoke <java.awt.image.PixelGrabber: boolean grabPixels()>";
 "virtualinvoke <java.awt.image.PixelGrabber: boolean grabPixels()>"->"goto load.r r0";
 "goto load.r r0"->"fieldget <LaserDrome: java.awt.Graphics bg>";
 "fieldget <LaserDrome: java.awt.Graphics bg>"->"staticget <java.awt.Color: java.awt.Color lightGray>";
 "staticget <java.awt.Color: java.awt.Color lightGray>"->"virtualinvoke <java.awt.Graphics: void setColor(java.awt.Color)>";
 "virtualinvoke <java.awt.Graphics: void setColor(java.awt.Color)>"->"fieldget <LaserDrome: java.awt.Graphics bg>";
 "fieldget <LaserDrome: java.awt.Graphics bg>"->"virtualinvoke <java.awt.Graphics: void fillRect(int,int,int,int)>";
 "virtualinvoke <java.awt.Graphics: void fillRect(int,int,int,int)>"->"goto load.r r0";
 "goto load.r r0"->"goto load.r r0";
 "goto load.r r0"-> "virtualinvoke <java.awt.image.PixelGrabber: boolean grabPixels()>"-> "specialinvoke <java.awt.Color: void <init>(int)>"->"new java.lang.StringBuffer";
 "new java.lang.StringBuffer"->"specialinvoke <java.lang.StringBuffer: void <init>(java.lang.String)>";
 "specialinvoke <java.lang.StringBuffer: void <init>(java.lang.String)>"->"virtualinvoke <java.lang.StringBuffer: java.lang.StringBuffer append(int)>";
 "virtualinvoke <java.lang.StringBuffer: java.lang.StringBuffer append(int)>"->"virtualinvoke <java.lang.StringBuffer: java.lang.String toString()>";
 "virtualinvoke <java.lang.StringBuffer: java.lang.String toString()>"->"virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>";
 "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"->"fieldget <LaserDrome: java.awt.Font[] f>";
 "fieldget <LaserDrome: java.awt.Font[] f>"->"new java.awt.Font";
 "new java.awt.Font"->"new java.lang.StringBuffer";
 "new java.lang.StringBuffer"->"specialinvoke <java.lang.StringBuffer: void <init>(java.lang.String)>";
 "specialinvoke <java.lang.StringBuffer: void <init>(java.lang.String)>"->"virtualinvoke <java.lang.StringBuffer: java.lang.StringBuffer append(int)>";
 "virtualinvoke <java.lang.StringBuffer: java.lang.StringBuffer append(int)>"->"virtualinvoke <java.lang.StringBuffer: java.lang.String toString()>";
 "virtualinvoke <java.lang.StringBuffer: java.lang.String toString()>"->"virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>";
 "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"->"staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>";
 "staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>"->"specialinvoke <java.awt.Font: void <init>(java.lang.String,int,int)>";
 "specialinvoke <java.awt.Font: void <init>(java.lang.String,int,int)>"->"goto load.r r0";
 "goto load.r r0"->"fieldget <LaserDrome: java.awt.Font[] f>";
 "fieldget <LaserDrome: java.awt.Font[] f>"->"new java.awt.Font";
 "new java.awt.Font"->"specialinvoke <java.awt.Font: void <init>(java.lang.String,int,int)>";
 "specialinvoke <java.awt.Font: void <init>(java.lang.String,int,int)>"-> "staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>"-> "staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>"->}
