digraph "" {
"r0 := @this: com.josesandoval.magic.MagicTrick"->"specialinvoke <java.applet.Applet: void init()>";
 "specialinvoke <java.applet.Applet: void init()>"->"virtualinvoke <java.awt.Component: void setName(java.lang.String)>";
 "virtualinvoke <java.awt.Component: void setName(java.lang.String)>"->"new java.awt.BorderLayout";
 "new java.awt.BorderLayout"->"specialinvoke <java.awt.BorderLayout: void <init>()>";
 "specialinvoke <java.awt.BorderLayout: void <init>()>"->"virtualinvoke <java.awt.Container: void setLayout(java.awt.LayoutManager)>";
 "virtualinvoke <java.awt.Container: void setLayout(java.awt.LayoutManager)>"->"virtualinvoke <java.awt.Component: void setSize(int,int)>";
 "virtualinvoke <java.awt.Component: void setSize(int,int)>"->"specialinvoke <com.josesandoval.magic.MagicTrick: java.awt.Panel getPanelCards()>";
 "specialinvoke <com.josesandoval.magic.MagicTrick: java.awt.Panel getPanelCards()>"->"virtualinvoke <java.awt.Container: void add(java.awt.Component,java.lang.Object)>";
 "virtualinvoke <java.awt.Container: void add(java.awt.Component,java.lang.Object)>"->"specialinvoke <com.josesandoval.magic.MagicTrick: java.awt.Panel getPanelMenu()>";
 "specialinvoke <com.josesandoval.magic.MagicTrick: java.awt.Panel getPanelMenu()>"->"virtualinvoke <java.awt.Container: void add(java.awt.Component,java.lang.Object)>";
 "virtualinvoke <java.awt.Container: void add(java.awt.Component,java.lang.Object)>"->"specialinvoke <com.josesandoval.magic.MagicTrick: void initConnections()>";
 "specialinvoke <com.josesandoval.magic.MagicTrick: void initConnections()>"->"new java.awt.MediaTracker";
 "new java.awt.MediaTracker"->"specialinvoke <java.awt.MediaTracker: void <init>(java.awt.Component)>";
 "specialinvoke <java.awt.MediaTracker: void <init>(java.awt.Component)>"->"fieldput <com.josesandoval.magic.MagicTrick: com.josesandoval.magic.Card[] playCards>";
 "fieldput <com.josesandoval.magic.MagicTrick: com.josesandoval.magic.Card[] playCards>"->"fieldput <com.josesandoval.magic.MagicTrick: com.josesandoval.magic.Card[] pile1>";
 "fieldput <com.josesandoval.magic.MagicTrick: com.josesandoval.magic.Card[] pile1>"->"fieldput <com.josesandoval.magic.MagicTrick: com.josesandoval.magic.Card[] pile2>";
 "fieldput <com.josesandoval.magic.MagicTrick: com.josesandoval.magic.Card[] pile2>"->"fieldput <com.josesandoval.magic.MagicTrick: com.josesandoval.magic.Card[] pile3>";
 "fieldput <com.josesandoval.magic.MagicTrick: com.josesandoval.magic.Card[] pile3>"->"new com.josesandoval.magic.Deck";
 "new com.josesandoval.magic.Deck"->"specialinvoke <com.josesandoval.magic.Deck: void <init>()>";
 "specialinvoke <com.josesandoval.magic.Deck: void <init>()>"->"fieldput <com.josesandoval.magic.MagicTrick: com.josesandoval.magic.Deck deck>";
 "fieldput <com.josesandoval.magic.MagicTrick: com.josesandoval.magic.Deck deck>"->"specialinvoke <com.josesandoval.magic.MagicTrick: void initTrick()>";
 "specialinvoke <com.josesandoval.magic.MagicTrick: void initTrick()>"->"virtualinvoke <java.applet.Applet: java.net.URL getCodeBase()>";
 "virtualinvoke <java.applet.Applet: java.net.URL getCodeBase()>"->"virtualinvoke <java.applet.Applet: java.awt.Image getImage(java.net.URL,java.lang.String)>";
 "virtualinvoke <java.applet.Applet: java.awt.Image getImage(java.net.URL,java.lang.String)>"->"virtualinvoke <java.awt.MediaTracker: void addImage(java.awt.Image,int)>";
 "virtualinvoke <java.awt.MediaTracker: void addImage(java.awt.Image,int)>"->"virtualinvoke <java.lang.Throwable: void printStackTrace()>";
 "virtualinvoke <java.lang.Throwable: void printStackTrace()>"->"new java.util.Hashtable";
 "new java.util.Hashtable"->"specialinvoke <java.util.Hashtable: void <init>()>";
 "specialinvoke <java.util.Hashtable: void <init>()>"->"fieldput <com.josesandoval.magic.MagicTrick: java.util.Hashtable cardTable>";
 "fieldput <com.josesandoval.magic.MagicTrick: java.util.Hashtable cardTable>"->"goto load.i $r22";
 "goto load.i $r22"->"new java.awt.image.CropImageFilter";
 "new java.awt.image.CropImageFilter"->"specialinvoke <java.awt.image.CropImageFilter: void <init>(int,int,int,int)>";
 "specialinvoke <java.awt.image.CropImageFilter: void <init>(int,int,int,int)>"->"new java.awt.image.FilteredImageSource";
 "new java.awt.image.FilteredImageSource"->"virtualinvoke <java.awt.Image: java.awt.image.ImageProducer getSource()>";
 "virtualinvoke <java.awt.Image: java.awt.image.ImageProducer getSource()>"->"specialinvoke <java.awt.image.FilteredImageSource: void <init>(java.awt.image.ImageProducer,java.awt.image.ImageFilter)>";
 "specialinvoke <java.awt.image.FilteredImageSource: void <init>(java.awt.image.ImageProducer,java.awt.image.ImageFilter)>"->"virtualinvoke <java.awt.Component: java.awt.Image createImage(java.awt.image.ImageProducer)>";
 "virtualinvoke <java.awt.Component: java.awt.Image createImage(java.awt.image.ImageProducer)>"->"fieldput <com.josesandoval.magic.MagicTrick: java.awt.Image backCard>";
 "fieldput <com.josesandoval.magic.MagicTrick: java.awt.Image backCard>"->"fieldget <com.josesandoval.magic.MagicTrick: java.awt.Image backCard>";
 "fieldget <com.josesandoval.magic.MagicTrick: java.awt.Image backCard>"->"virtualinvoke <java.awt.MediaTracker: void addImage(java.awt.Image,int)>";
 "virtualinvoke <java.awt.MediaTracker: void addImage(java.awt.Image,int)>"->"virtualinvoke <java.lang.Throwable: void printStackTrace()>";
 "virtualinvoke <java.lang.Throwable: void printStackTrace()>"->"goto return";
 "goto return"->"return";
 "virtualinvoke <java.lang.Throwable: void printStackTrace()>"->"specialinvoke <com.josesandoval.magic.MagicTrick: void handleException(java.lang.Throwable)>";
"virtualinvoke <java.awt.MediaTracker: void waitForAll()>";
 "virtualinvoke <java.awt.MediaTracker: void waitForAll()>"->"goto return";
"goto load.i i4";
 "goto load.i i4"->"new java.awt.image.CropImageFilter";
 "new java.awt.image.CropImageFilter"->"specialinvoke <java.awt.image.CropImageFilter: void <init>(int,int,int,int)>";
 "specialinvoke <java.awt.image.CropImageFilter: void <init>(int,int,int,int)>"->"new java.awt.image.FilteredImageSource";
 "new java.awt.image.FilteredImageSource"->"virtualinvoke <java.awt.Image: java.awt.image.ImageProducer getSource()>";
 "virtualinvoke <java.awt.Image: java.awt.image.ImageProducer getSource()>"->"specialinvoke <java.awt.image.FilteredImageSource: void <init>(java.awt.image.ImageProducer,java.awt.image.ImageFilter)>";
 "specialinvoke <java.awt.image.FilteredImageSource: void <init>(java.awt.image.ImageProducer,java.awt.image.ImageFilter)>"->"virtualinvoke <java.awt.Component: java.awt.Image createImage(java.awt.image.ImageProducer)>";
 "virtualinvoke <java.awt.Component: java.awt.Image createImage(java.awt.image.ImageProducer)>"->"virtualinvoke <java.awt.MediaTracker: void addImage(java.awt.Image,int)>";
 "virtualinvoke <java.awt.MediaTracker: void addImage(java.awt.Image,int)>"->"fieldget <com.josesandoval.magic.MagicTrick: java.util.Hashtable cardTable>";
 "fieldget <com.josesandoval.magic.MagicTrick: java.util.Hashtable cardTable>"->"new java.lang.StringBuffer";
 "new java.lang.StringBuffer"->"specialinvoke <java.lang.StringBuffer: void <init>(java.lang.String)>";
 "specialinvoke <java.lang.StringBuffer: void <init>(java.lang.String)>"->"virtualinvoke <java.lang.StringBuffer: java.lang.StringBuffer append(int)>";
 "virtualinvoke <java.lang.StringBuffer: java.lang.StringBuffer append(int)>"->"virtualinvoke <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>";
 "virtualinvoke <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>"->"virtualinvoke <java.lang.StringBuffer: java.lang.StringBuffer append(int)>";
 "virtualinvoke <java.lang.StringBuffer: java.lang.StringBuffer append(int)>"->"virtualinvoke <java.lang.StringBuffer: java.lang.String toString()>";
 "virtualinvoke <java.lang.StringBuffer: java.lang.String toString()>"->"virtualinvoke <java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>";
 "virtualinvoke <java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>"->"virtualinvoke <java.awt.MediaTracker: void waitForID(int)>";
 "virtualinvoke <java.awt.MediaTracker: void waitForID(int)>"->"goto load.r r0";
}
