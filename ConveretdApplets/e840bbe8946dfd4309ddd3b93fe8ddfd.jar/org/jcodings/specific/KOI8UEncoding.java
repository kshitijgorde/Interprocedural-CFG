// 
// Decompiled by Procyon v0.5.30
// 

package org.jcodings.specific;

import org.jcodings.IntHolder;
import org.jcodings.CaseFoldMapEncoding;

public final class KOI8UEncoding extends CaseFoldMapEncoding
{
    static final short[] KOI8U_CtypeTable;
    static final byte[] KOI8U_ToLowerCaseTable;
    static final int[][] KOI8U_CaseFoldMap;
    public static final KOI8UEncoding INSTANCE;
    
    protected KOI8UEncoding() {
        super("KOI8-U", KOI8UEncoding.KOI8U_CtypeTable, KOI8UEncoding.KOI8U_ToLowerCaseTable, KOI8UEncoding.KOI8U_CaseFoldMap, false);
    }
    
    public int mbcCaseFold(final int flag, final byte[] bytes, final IntHolder pp, final int end, final byte[] lower) {
        final int p = pp.value;
        final int lowerP = 0;
        lower[lowerP] = this.LowerCaseTable[bytes[p] & 0xFF];
        ++pp.value;
        return 1;
    }
    
    public boolean isCodeCType(final int code, final int ctype) {
        return code < 256 && this.isCodeCTypeInternal(code, ctype);
    }
    
    static {
        KOI8U_CtypeTable = new short[] { 16392, 16392, 16392, 16392, 16392, 16392, 16392, 16392, 16392, 16908, 16905, 16904, 16904, 16904, 16392, 16392, 16392, 16392, 16392, 16392, 16392, 16392, 16392, 16392, 16392, 16392, 16392, 16392, 16392, 16392, 16392, 16392, 17028, 16800, 16800, 16800, 16800, 16800, 16800, 16800, 16800, 16800, 16800, 16800, 16800, 16800, 16800, 16800, 30896, 30896, 30896, 30896, 30896, 30896, 30896, 30896, 30896, 30896, 16800, 16800, 16800, 16800, 16800, 16800, 16800, 31906, 31906, 31906, 31906, 31906, 31906, 29858, 29858, 29858, 29858, 29858, 29858, 29858, 29858, 29858, 29858, 29858, 29858, 29858, 29858, 29858, 29858, 29858, 29858, 29858, 29858, 16800, 16800, 16800, 16800, 20896, 16800, 30946, 30946, 30946, 30946, 30946, 30946, 28898, 28898, 28898, 28898, 28898, 28898, 28898, 28898, 28898, 28898, 28898, 28898, 28898, 28898, 28898, 28898, 28898, 28898, 28898, 28898, 16800, 16800, 16800, 16800, 16392, 160, 160, 160, 160, 160, 160, 160, 160, 160, 160, 160, 160, 160, 160, 160, 160, 160, 160, 160, 160, 160, 160, 160, 160, 160, 160, 644, 160, 160, 4256, 416, 160, 160, 160, 160, 12514, 12514, 160, 12514, 12514, 160, 160, 160, 160, 160, 12514, 160, 160, 160, 160, 160, 13474, 13474, 160, 13474, 13474, 160, 160, 160, 160, 160, 13474, 160, 160, 12514, 12514, 12514, 12514, 12514, 12514, 12514, 12514, 12514, 12514, 12514, 12514, 12514, 12514, 12514, 12514, 12514, 12514, 12514, 12514, 12514, 12514, 12514, 12514, 12514, 12514, 12514, 12514, 12514, 12514, 12514, 12514, 13474, 13474, 13474, 13474, 13474, 13474, 13474, 13474, 13474, 13474, 13474, 13474, 13474, 13474, 13474, 13474, 13474, 13474, 13474, 13474, 13474, 13474, 13474, 13474, 13474, 13474, 13474, 13474, 13474, 13474, 13474, 13474 };
        KOI8U_ToLowerCaseTable = new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, -128, -127, -126, -125, -124, -123, -122, -121, -120, -119, -118, -117, -116, -115, -114, -113, -112, -111, -110, -109, -108, -107, -106, -105, -104, -103, -102, -101, -100, -99, -98, -97, -96, -95, -94, -93, -92, -91, -90, -89, -88, -87, -86, -85, -84, -83, -82, -81, -80, -79, -78, -93, -92, -75, -90, -89, -72, -71, -70, -69, -68, -83, -66, -65, -64, -63, -62, -61, -60, -59, -58, -57, -56, -55, -54, -53, -52, -51, -50, -49, -48, -47, -46, -45, -44, -43, -42, -41, -40, -39, -38, -37, -36, -35, -34, -33, -64, -63, -62, -61, -60, -59, -58, -57, -56, -55, -54, -53, -52, -51, -50, -49, -48, -47, -46, -45, -44, -43, -42, -41, -40, -39, -38, -37, -36, -35, -34, -33 };
        KOI8U_CaseFoldMap = new int[][] { { 163, 179 }, { 164, 180 }, { 166, 182 }, { 167, 183 }, { 173, 189 }, { 192, 224 }, { 193, 225 }, { 194, 226 }, { 195, 227 }, { 196, 228 }, { 197, 229 }, { 198, 230 }, { 199, 231 }, { 200, 232 }, { 201, 233 }, { 202, 234 }, { 203, 235 }, { 204, 236 }, { 205, 237 }, { 206, 238 }, { 207, 239 }, { 208, 240 }, { 209, 241 }, { 210, 242 }, { 211, 243 }, { 212, 244 }, { 213, 245 }, { 214, 246 }, { 215, 247 }, { 216, 248 }, { 217, 249 }, { 218, 250 }, { 219, 251 }, { 220, 252 }, { 221, 253 }, { 222, 254 }, { 223, 255 } };
        INSTANCE = new KOI8UEncoding();
    }
}
