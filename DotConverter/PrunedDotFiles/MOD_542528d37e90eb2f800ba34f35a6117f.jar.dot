digraph "" {
"virtualinvoke <java.awt.Component: java.awt.Dimension size()>";
 "virtualinvoke <java.awt.Component: java.awt.Dimension size()>"->"fieldget <java.awt.Dimension: int height>";
 "fieldget <java.awt.Dimension: int height>"->"virtualinvoke <java.awt.Component: java.awt.Dimension size()>";
 "virtualinvoke <java.awt.Component: java.awt.Dimension size()>"->"fieldget <java.awt.Dimension: int width>";
 "fieldget <java.awt.Dimension: int width>"->"virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>";
 "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"->"virtualinvoke <java.awt.Component: void addMouseMotionListener(java.awt.event.MouseMotionListener)>";
 "virtualinvoke <java.awt.Component: void addMouseMotionListener(java.awt.event.MouseMotionListener)>"->"virtualinvoke <java.awt.Component: void addMouseListener(java.awt.event.MouseListener)>";
 "virtualinvoke <java.awt.Component: void addMouseListener(java.awt.event.MouseListener)>"->"new java.awt.Label";
 "new java.awt.Label"->"specialinvoke <java.awt.Label: void <init>(java.lang.String)>";
 "specialinvoke <java.awt.Label: void <init>(java.lang.String)>"->"fieldput <eGraffiti: java.awt.Label lblPrompt>";
 "fieldput <eGraffiti: java.awt.Label lblPrompt>"->"fieldget <eGraffiti: java.awt.Label lblPrompt>";
 "fieldget <eGraffiti: java.awt.Label lblPrompt>"->"virtualinvoke <java.awt.Container: java.awt.Component add(java.awt.Component)>";
 "virtualinvoke <java.awt.Container: java.awt.Component add(java.awt.Component)>"->"new java.awt.TextField";
 "new java.awt.TextField"->"specialinvoke <java.awt.TextField: void <init>(int)>";
 "specialinvoke <java.awt.TextField: void <init>(int)>"->"fieldput <eGraffiti: java.awt.TextField txtNick>";
 "fieldput <eGraffiti: java.awt.TextField txtNick>"->"fieldget <eGraffiti: java.awt.TextField txtNick>";
 "fieldget <eGraffiti: java.awt.TextField txtNick>"->"virtualinvoke <java.awt.Container: java.awt.Component add(java.awt.Component)>";
 "virtualinvoke <java.awt.Container: java.awt.Component add(java.awt.Component)>"->"new java.awt.Button";
 "new java.awt.Button"->"specialinvoke <java.awt.Button: void <init>(java.lang.String)>";
 "specialinvoke <java.awt.Button: void <init>(java.lang.String)>"->"fieldput <eGraffiti: java.awt.Button btnEnter>";
 "fieldput <eGraffiti: java.awt.Button btnEnter>"->"fieldget <eGraffiti: java.awt.Button btnEnter>";
 "fieldget <eGraffiti: java.awt.Button btnEnter>"->"virtualinvoke <java.awt.Container: java.awt.Component add(java.awt.Component)>";
 "virtualinvoke <java.awt.Container: java.awt.Component add(java.awt.Component)>"->"fieldget <eGraffiti: java.awt.Button btnEnter>";
 "fieldget <eGraffiti: java.awt.Button btnEnter>"->"virtualinvoke <java.awt.Button: void addActionListener(java.awt.event.ActionListener)>";
 "virtualinvoke <java.awt.Button: void addActionListener(java.awt.event.ActionListener)>"->"virtualinvoke <java.awt.Component: java.awt.Image createImage(int,int)>";
 "virtualinvoke <java.awt.Component: java.awt.Image createImage(int,int)>"->"fieldput <eGraffiti: java.awt.Image imgBuffer>";
 "fieldput <eGraffiti: java.awt.Image imgBuffer>"->"fieldget <eGraffiti: java.awt.Image imgBuffer>";
 "fieldget <eGraffiti: java.awt.Image imgBuffer>"->"virtualinvoke <java.awt.Image: java.awt.Graphics getGraphics()>";
 "virtualinvoke <java.awt.Image: java.awt.Graphics getGraphics()>"->"fieldput <eGraffiti: java.awt.Graphics grBuffer>";
 "fieldput <eGraffiti: java.awt.Graphics grBuffer>"->"virtualinvoke <java.awt.Component: java.awt.Image createImage(int,int)>";
 "virtualinvoke <java.awt.Component: java.awt.Image createImage(int,int)>"->"fieldput <eGraffiti: java.awt.Image imgCanvas>";
 "fieldput <eGraffiti: java.awt.Image imgCanvas>"->"fieldget <eGraffiti: java.awt.Image imgCanvas>";
 "fieldget <eGraffiti: java.awt.Image imgCanvas>"->"virtualinvoke <java.awt.Image: java.awt.Graphics getGraphics()>";
 "virtualinvoke <java.awt.Image: java.awt.Graphics getGraphics()>"->"fieldput <eGraffiti: java.awt.Graphics canvas>";
 "fieldput <eGraffiti: java.awt.Graphics canvas>"->"virtualinvoke <java.awt.Component: java.awt.Image createImage(int,int)>";
 "virtualinvoke <java.awt.Component: java.awt.Image createImage(int,int)>"->"fieldput <eGraffiti: java.awt.Image imgTopLayer>";
 "fieldput <eGraffiti: java.awt.Image imgTopLayer>"->"fieldget <eGraffiti: java.awt.Image imgTopLayer>";
 "fieldget <eGraffiti: java.awt.Image imgTopLayer>"->"virtualinvoke <java.awt.Image: java.awt.Graphics getGraphics()>";
 "virtualinvoke <java.awt.Image: java.awt.Graphics getGraphics()>"->"fieldput <eGraffiti: java.awt.Graphics topLayer>";
 "fieldput <eGraffiti: java.awt.Graphics topLayer>"->"fieldget <eGraffiti: java.awt.Graphics canvas>";
 "fieldget <eGraffiti: java.awt.Graphics canvas>"->"staticget <java.awt.Color: java.awt.Color white>";
 "staticget <java.awt.Color: java.awt.Color white>"->"virtualinvoke <java.awt.Graphics: void setColor(java.awt.Color)>";
 "virtualinvoke <java.awt.Graphics: void setColor(java.awt.Color)>"->"fieldget <eGraffiti: java.awt.Graphics canvas>";
 "fieldget <eGraffiti: java.awt.Graphics canvas>"->"virtualinvoke <java.awt.Graphics: void fillRect(int,int,int,int)>";
 "virtualinvoke <java.awt.Graphics: void fillRect(int,int,int,int)>"->"new java.awt.MediaTracker";
 "new java.awt.MediaTracker"->"specialinvoke <java.awt.MediaTracker: void <init>(java.awt.Component)>";
 "specialinvoke <java.awt.MediaTracker: void <init>(java.awt.Component)>"->"virtualinvoke <java.applet.Applet: java.net.URL getCodeBase()>";
 "virtualinvoke <java.applet.Applet: java.net.URL getCodeBase()>"->"virtualinvoke <java.applet.Applet: java.awt.Image getImage(java.net.URL,java.lang.String)>";
 "virtualinvoke <java.applet.Applet: java.awt.Image getImage(java.net.URL,java.lang.String)>"->"fieldput <eGraffiti: java.awt.Image tools>";
 "fieldput <eGraffiti: java.awt.Image tools>"->"fieldget <eGraffiti: java.awt.Image tools>";
 "fieldget <eGraffiti: java.awt.Image tools>"->"virtualinvoke <java.awt.MediaTracker: void addImage(java.awt.Image,int)>";
 "virtualinvoke <java.awt.MediaTracker: void addImage(java.awt.Image,int)>"->"virtualinvoke <java.awt.MediaTracker: void waitForID(int)>";
 "virtualinvoke <java.awt.MediaTracker: void waitForID(int)>"->"goto load.r r0";
 "goto load.r r0"->"staticget <java.awt.Color: java.awt.Color green>";
 "staticget <java.awt.Color: java.awt.Color green>"->"fieldput <eGraffiti: java.awt.Color palC>";
 "fieldput <eGraffiti: java.awt.Color palC>"->"new java.net.Socket";
 "new java.net.Socket"->"staticget <java.lang.System: java.io.PrintStream err>";
 "staticget <java.lang.System: java.io.PrintStream err>"->"virtualinvoke <java.io.PrintStream: void println(java.lang.String)>";
 "virtualinvoke <java.io.PrintStream: void println(java.lang.String)>"->"goto load.r r0";
 "goto load.r r0"->"return";
"staticget <java.lang.System: java.io.PrintStream err>";
 "staticget <java.lang.System: java.io.PrintStream err>"->"virtualinvoke <java.io.PrintStream: void println(java.lang.String)>";
 "virtualinvoke <java.io.PrintStream: void println(java.lang.String)>"->"goto load.r r0";
"staticget <java.lang.System: java.io.PrintStream out>";
 "staticget <java.lang.System: java.io.PrintStream out>"->"new java.lang.StringBuffer";
 "new java.lang.StringBuffer"->"specialinvoke <java.lang.StringBuffer: void <init>()>";
 "specialinvoke <java.lang.StringBuffer: void <init>()>"->"virtualinvoke <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>";
 "virtualinvoke <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>"->"virtualinvoke <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>";
 "virtualinvoke <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>"->"virtualinvoke <java.lang.StringBuffer: java.lang.String toString()>";
 "virtualinvoke <java.lang.StringBuffer: java.lang.String toString()>"->"virtualinvoke <java.io.PrintStream: void println(java.lang.String)>";
"specialinvoke <java.net.Socket: void <init>(java.lang.String,int)>";
 "specialinvoke <java.net.Socket: void <init>(java.lang.String,int)>"->"fieldput <eGraffiti: java.net.Socket clientsocket>";
 "fieldput <eGraffiti: java.net.Socket clientsocket>"->"new java.io.DataOutputStream";
 "new java.io.DataOutputStream"->"fieldget <eGraffiti: java.net.Socket clientsocket>";
 "fieldget <eGraffiti: java.net.Socket clientsocket>"->"virtualinvoke <java.net.Socket: java.io.OutputStream getOutputStream()>";
 "virtualinvoke <java.net.Socket: java.io.OutputStream getOutputStream()>"->"specialinvoke <java.io.DataOutputStream: void <init>(java.io.OutputStream)>";
 "specialinvoke <java.io.DataOutputStream: void <init>(java.io.OutputStream)>"->"fieldput <eGraffiti: java.io.DataOutputStream out>";
 "fieldput <eGraffiti: java.io.DataOutputStream out>"->"new java.io.DataInputStream";
 "new java.io.DataInputStream"->"fieldget <eGraffiti: java.net.Socket clientsocket>";
 "fieldget <eGraffiti: java.net.Socket clientsocket>"->"virtualinvoke <java.net.Socket: java.io.InputStream getInputStream()>";
 "virtualinvoke <java.net.Socket: java.io.InputStream getInputStream()>"->"specialinvoke <java.io.DataInputStream: void <init>(java.io.InputStream)>";
 "specialinvoke <java.io.DataInputStream: void <init>(java.io.InputStream)>"->"fieldput <eGraffiti: java.io.DataInputStream in>";
 "fieldput <eGraffiti: java.io.DataInputStream in>"->"new java.io.BufferedReader";
 "new java.io.BufferedReader"->"new java.io.InputStreamReader";
 "new java.io.InputStreamReader"->"staticget <java.lang.System: java.io.InputStream in>";
 "staticget <java.lang.System: java.io.InputStream in>"->"specialinvoke <java.io.InputStreamReader: void <init>(java.io.InputStream)>";
 "specialinvoke <java.io.InputStreamReader: void <init>(java.io.InputStream)>"->"specialinvoke <java.io.BufferedReader: void <init>(java.io.Reader)>";
 "specialinvoke <java.io.BufferedReader: void <init>(java.io.Reader)>"->"fieldput <eGraffiti: java.io.BufferedReader stdIn>";
 "fieldput <eGraffiti: java.io.BufferedReader stdIn>"->"virtualinvoke <java.lang.Thread: void start()>";
 "virtualinvoke <java.lang.Thread: void start()>"->"goto load.r r0";
 "virtualinvoke <java.awt.MediaTracker: void waitForID(int)>"->"return";
}
