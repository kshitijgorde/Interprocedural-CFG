// 
// Decompiled by Procyon v0.5.30
// 

class MarsCompute
{
    final double K = 0.017453292519943295;
    double L;
    double B;
    double R;
    double T;
    double lambda;
    double beta;
    double eps;
    double x;
    double y;
    double z;
    
    public MarsCompute(final double JD) {
        this.T = (JD - 2451545.0) / 365250.0;
        this.eps = 0.017453292519943295 * (23.433333333333334 + (21.448 - 46.815 * this.T - 5.9E-4 * this.T * this.T + 0.001813 * this.T * this.T * this.T) / 3600.0);
        this.L = (this.L0(this.T) + this.L1(this.T) * this.T + this.L2(this.T) * this.T * this.T + this.L3(this.T) * this.T * this.T * this.T + this.L4(this.T) * this.T * this.T * this.T * this.T) / 1.0E8;
        this.B = (this.B0(this.T) + this.B1(this.T) * this.T + this.B2(this.T) * this.T * this.T + this.B3(this.T) * this.T * this.T * this.T + this.B4(this.T) * this.T * this.T * this.T * this.T) / 1.0E8;
        this.R = (this.R0(this.T) + this.R1(this.T) * this.T + this.R2(this.T) * this.T * this.T + this.R3(this.T) * this.T * this.T * this.T + this.R4(this.T) * this.T * this.T * this.T * this.T) / 1.0E8;
        final EarthCompute earthComp = new EarthCompute(JD);
        final double RE = earthComp.earthR();
        final double BE = earthComp.earthB();
        final double LE = earthComp.earthL();
        this.x = this.R * Math.cos(this.B) * Math.cos(this.L) - RE * Math.cos(BE) * Math.cos(LE);
        this.y = this.R * Math.cos(this.B) * Math.sin(this.L) - RE * Math.cos(BE) * Math.sin(LE);
        this.z = this.R * Math.sin(this.B) - RE * Math.sin(BE);
        final double tau = 0.0057755183 * Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);
        this.T = (JD - 2451545.0 - tau) / 365250.0;
        this.L = (this.L0(this.T) + this.L1(this.T) * this.T + this.L2(this.T) * this.T * this.T + this.L3(this.T) * this.T * this.T * this.T + this.L4(this.T) * this.T * this.T * this.T * this.T) / 1.0E8;
        this.B = (this.B0(this.T) + this.B1(this.T) * this.T + this.B2(this.T) * this.T * this.T + this.B3(this.T) * this.T * this.T * this.T + this.B4(this.T) * this.T * this.T * this.T * this.T) / 1.0E8;
        this.R = (this.R0(this.T) + this.R1(this.T) * this.T + this.R2(this.T) * this.T * this.T + this.R3(this.T) * this.T * this.T * this.T + this.R4(this.T) * this.T * this.T * this.T * this.T) / 1.0E8;
        this.x = this.R * Math.cos(this.B) * Math.cos(this.L) - RE * Math.cos(BE) * Math.cos(LE);
        this.y = this.R * Math.cos(this.B) * Math.sin(this.L) - RE * Math.cos(BE) * Math.sin(LE);
        this.z = this.R * Math.sin(this.B) - RE * Math.sin(BE);
        this.lambda = Math.atan2(this.y, this.x) / 0.017453292519943295;
        if (this.lambda < 0.0) {
            this.lambda += 360.0;
        }
        this.beta = Math.atan2(this.z, Math.sqrt(this.x * this.x + this.y * this.y));
    }
    
    double alpha() {
        double a = Math.atan2(Math.sin(0.017453292519943295 * this.lambda) * Math.cos(this.eps) - Math.tan(this.beta) * Math.sin(this.eps), Math.cos(0.017453292519943295 * this.lambda)) / 0.017453292519943295;
        if (a < 0.0) {
            a += 360.0;
        }
        return a;
    }
    
    double delta() {
        final double sinDelta = Math.sin(this.beta) * Math.cos(this.eps) + Math.cos(this.beta) * Math.sin(this.eps) * Math.sin(0.017453292519943295 * this.lambda);
        return Math.asin(sinDelta) / 0.017453292519943295 % 360.0;
    }
    
    double earthDist() {
        return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);
    }
    
    double R() {
        return this.R;
    }
    
    double L0(final double t) {
        final double[][] L = { { 6.20347712E8, 0.0, 0.0 }, { 1.8656368E7, 5.050371, 3340.6124267 }, { 1108217.0, 5.4009984, 6681.2248534 }, { 91798.0, 5.75479, 10021.83728 }, { 27745.0, 5.9705, 3.52312 }, { 12316.0, 0.84956, 2810.92146 }, { 10610.0, 2.93959, 2281.2305 }, { 8927.0, 4.157, 0.0173 }, { 8716.0, 6.1101, 13362.4497 }, { 7775.0, 3.3397, 5621.8429 }, { 6798.0, 0.3646, 398.149 }, { 4161.0, 0.2281, 2942.4634 }, { 3575.0, 1.6619, 2544.3144 }, { 3075.0, 0.857, 191.4483 }, { 2938.0, 6.0789, 0.0673 }, { 2628.0, 0.6481, 3337.0893 }, { 2580.0, 0.03, 3344.1355 }, { 2389.0, 5.039, 796.298 }, { 1799.0, 0.6563, 529.691 }, { 1546.0, 2.9158, 1751.5395 }, { 1528.0, 1.1498, 6151.5339 }, { 1286.0, 3.068, 2146.1654 }, { 1264.0, 3.6228, 5092.152 }, { 1025.0, 3.6933, 8962.4553 }, { 892.0, 0.183, 16703.062 }, { 859.0, 2.401, 2914.014 }, { 833.0, 4.495, 3340.63 }, { 833.0, 2.464, 3340.595 }, { 749.0, 3.822, 155.42 }, { 724.0, 0.675, 3738.761 }, { 713.0, 3.663, 1059.382 }, { 655.0, 0.489, 3127.313 }, { 636.0, 2.922, 8432.764 }, { 553.0, 4.475, 1748.016 }, { 550.0, 3.81, 0.98 }, { 472.0, 3.625, 1194.447 }, { 426.0, 0.554, 6283.076 }, { 415.0, 0.497, 213.299 }, { 312.0, 0.999, 6677.702 }, { 307.0, 0.381, 6684.748 }, { 302.0, 4.486, 3532.061 }, { 299.0, 2.783, 6254.627 }, { 293.0, 4.221, 20.775 }, { 284.0, 5.769, 3149.164 }, { 281.0, 5.882, 1349.867 }, { 274.0, 0.542, 3340.545 }, { 274.0, 0.134, 3340.68 }, { 239.0, 5.372, 4136.91 }, { 236.0, 5.755, 3333.499 }, { 231.0, 1.282, 3870.303 }, { 221.0, 3.505, 382.897 }, { 204.0, 2.821, 1221.849 }, { 193.0, 3.357, 3.59 }, { 189.0, 1.491, 9492.146 }, { 179.0, 1.006, 951.718 }, { 174.0, 2.414, 553.569 }, { 172.0, 0.439, 5486.778 }, { 160.0, 3.949, 4562.461 }, { 144.0, 1.419, 135.065 }, { 140.0, 3.326, 2700.715 }, { 138.0, 4.301, 7.114 }, { 131.0, 4.045, 12303.068 }, { 128.0, 2.208, 1592.596 }, { 128.0, 1.807, 5088.629 }, { 117.0, 3.128, 7903.073 }, { 113.0, 3.701, 1589.073 }, { 110.0, 1.052, 242.729 }, { 105.0, 0.785, 8827.39 }, { 100.0, 3.243, 11773.377 } };
        double l0 = 0.0;
        for (int i = 0; i <= 68; ++i) {
            l0 += L[i][0] * Math.cos(L[i][1] + L[i][2] * t);
        }
        return l0;
    }
    
    double L1(final double t) {
        final double[][] L = { { 3.34085627474E11, 0.0, 0.0 }, { 1458227.0, 3.6042605, 3340.6124267 }, { 164901.0, 3.926313, 6681.224853 }, { 19963.0, 4.26594, 10021.83728 }, { 3452.0, 4.7321, 3.5231 }, { 2485.0, 4.6128, 13362.4497 }, { 842.0, 4.459, 2281.23 }, { 538.0, 5.016, 398.149 }, { 521.0, 4.994, 3344.136 }, { 433.0, 2.561, 191.448 }, { 430.0, 5.316, 155.42 }, { 382.0, 3.539, 796.298 }, { 314.0, 4.963, 16703.062 }, { 283.0, 3.16, 2544.314 }, { 206.0, 4.569, 2146.165 }, { 169.0, 1.329, 3337.089 }, { 158.0, 4.185, 1751.54 }, { 134.0, 2.233, 0.98 }, { 134.0, 5.974, 1748.016 }, { 118.0, 6.024, 6151.534 }, { 117.0, 2.213, 1059.382 }, { 114.0, 2.129, 1194.447 }, { 114.0, 5.428, 3738.761 }, { 91.0, 1.1, 1349.87 }, { 85.0, 3.91, 553.57 }, { 83.0, 5.3, 6684.75 }, { 81.0, 4.43, 529.69 }, { 80.0, 2.25, 8962.46 }, { 73.0, 2.5, 951.72 }, { 73.0, 5.84, 242.73 }, { 71.0, 3.86, 2914.01 }, { 68.0, 5.02, 382.9 }, { 65.0, 1.02, 3340.6 }, { 65.0, 3.05, 3340.63 }, { 62.0, 4.15, 3149.16 }, { 57.0, 3.89, 4136.91 }, { 48.0, 4.87, 213.3 }, { 48.0, 1.18, 3333.5 }, { 47.0, 1.31, 3185.19 }, { 41.0, 0.71, 1592.6 }, { 40.0, 2.73, 7.11 }, { 40.0, 5.32, 20043.67 }, { 33.0, 5.41, 6283.08 }, { 28.0, 0.05, 9492.15 }, { 27.0, 3.89, 1221.85 }, { 27.0, 5.11, 2700.72 } };
        double l1 = 0.0;
        for (int i = 0; i <= 45; ++i) {
            l1 += L[i][0] * Math.cos(L[i][1] + L[i][2] * t);
        }
        return l1;
    }
    
    double L2(final double t) {
        final double[][] L = { { 58016.0, 2.04979, 3340.61243 }, { 54188.0, 0.0, 0.0 }, { 13908.0, 2.45742, 6681.22485 }, { 2465.0, 2.8, 10021.8373 }, { 398.0, 3.141, 13362.45 }, { 222.0, 3.194, 3.523 }, { 121.0, 0.543, 155.42 }, { 62.0, 3.49, 16703.06 }, { 54.0, 3.54, 3344.14 }, { 34.0, 6.0, 2281.23 }, { 32.0, 4.14, 191.45 }, { 30.0, 2.0, 796.3 }, { 23.0, 4.33, 242.73 }, { 22.0, 3.45, 398.15 }, { 20.0, 5.42, 553.57 }, { 16.0, 0.66, 0.98 }, { 16.0, 6.11, 2146.17 }, { 16.0, 1.22, 1748.02 }, { 15.0, 6.1, 3185.19 }, { 14.0, 4.02, 951.72 }, { 14.0, 2.62, 1349.87 }, { 13.0, 0.6, 1194.45 }, { 12.0, 3.86, 6684.75 }, { 11.0, 4.72, 2544.31 }, { 10.0, 0.25, 382.9 }, { 9.0, 0.68, 1059.38 }, { 9.0, 3.83, 20043.67 }, { 9.0, 3.88, 3738.76 }, { 8.0, 5.46, 1751.54 }, { 7.0, 2.58, 3149.16 }, { 7.0, 2.38, 4136.91 }, { 6.0, 5.48, 1592.6 }, { 6.0, 2.34, 3097.88 } };
        double l2 = 0.0;
        for (int i = 0; i <= 32; ++i) {
            l2 += L[i][0] * Math.cos(L[i][1] + L[i][2] * t);
        }
        return l2;
    }
    
    double L3(final double t) {
        final double[][] L = { { 1482.0, 0.4443, 3340.6124 }, { 662.0, 0.885, 6681.225 }, { 188.0, 1.288, 10021.837 }, { 41.0, 1.65, 13362.45 }, { 26.0, 0.0, 0.0 }, { 23.0, 2.05, 155.42 }, { 10.0, 1.58, 3.52 }, { 8.0, 2.0, 16703.06 }, { 5.0, 2.82, 242.73 }, { 4.0, 2.02, 3344.14 }, { 3.0, 4.59, 3185.19 }, { 3.0, 0.65, 553.57 } };
        double l3 = 0.0;
        for (int i = 0; i <= 11; ++i) {
            l3 += L[i][0] * Math.cos(L[i][1] + L[i][2] * t);
        }
        return l3;
    }
    
    double L4(final double t) {
        final double[][] L = { { 114.0, 3.1416, 0.0 }, { 29.0, 5.64, 6681.22 }, { 24.0, 5.14, 3340.61 }, { 11.0, 6.03, 10021.84 }, { 3.0, 0.13, 13362.45 }, { 3.0, 3.56, 155.42 }, { 1.0, 0.49, 16703.06 }, { 1.0, 1.32, 242.73 } };
        double l4 = 0.0;
        for (int i = 0; i <= 7; ++i) {
            l4 += L[i][0] * Math.cos(L[i][1] + L[i][2] * t);
        }
        return l4;
    }
    
    double B0(final double t) {
        final double[][] L = { { 3197135.0, 3.7683204, 3340.6124267 }, { 298033.0, 4.10617, 6681.224853 }, { 289105.0, 0.0, 0.0 }, { 31366.0, 4.44651, 10021.83728 }, { 3484.0, 4.7881, 13362.4497 }, { 443.0, 5.026, 3344.136 }, { 443.0, 5.652, 3337.089 }, { 399.0, 5.131, 16703.062 }, { 293.0, 3.793, 2281.23 }, { 182.0, 6.136, 6151.534 }, { 163.0, 4.264, 529.691 }, { 160.0, 2.232, 1059.382 }, { 149.0, 2.165, 5621.843 }, { 143.0, 1.182, 3340.595 }, { 143.0, 3.213, 3340.63 }, { 139.0, 2.418, 8962.455 } };
        double b0 = 0.0;
        for (int i = 0; i <= 15; ++i) {
            b0 += L[i][0] * Math.cos(L[i][1] + L[i][2] * t);
        }
        return b0;
    }
    
    double B1(final double t) {
        final double[][] L = { { 350069.0, 5.368478, 3340.612427 }, { 14116.0, 3.14159, 0.0 }, { 9671.0, 5.4788, 6681.2249 }, { 1472.0, 3.2021, 10021.8373 }, { 426.0, 3.408, 13362.45 }, { 102.0, 0.776, 3337.089 }, { 79.0, 3.72, 16703.06 }, { 33.0, 3.46, 5621.84 }, { 26.0, 2.48, 2281.23 } };
        double b1 = 0.0;
        for (int i = 0; i <= 8; ++i) {
            b1 += L[i][0] * Math.cos(L[i][1] + L[i][2] * t);
        }
        return b1;
    }
    
    double B2(final double t) {
        final double[][] L = { { 16727.0, 0.60221, 3340.61243 }, { 4987.0, 3.1416, 0.0 }, { 302.0, 5.559, 6681.225 }, { 26.0, 1.9, 13362.45 }, { 21.0, 0.92, 10021.84 }, { 12.0, 2.24, 3337.09 }, { 8.0, 2.25, 16703.06 } };
        double b2 = 0.0;
        for (int i = 0; i <= 6; ++i) {
            b2 += L[i][0] * Math.cos(L[i][1] + L[i][2] * t);
        }
        return b2;
    }
    
    double B3(final double t) {
        final double[][] L = { { 607.0, 1.981, 3340.612 }, { 43.0, 0.0, 0.0 }, { 14.0, 1.8, 6681.22 }, { 3.0, 3.45, 10021.84 } };
        double b3 = 0.0;
        for (int i = 0; i <= 3; ++i) {
            b3 += L[i][0] * Math.cos(L[i][1] + L[i][2] * t);
        }
        return b3;
    }
    
    double B4(final double t) {
        final double[][] L = { { 13.0, 0.0, 0.0 }, { 11.0, 3.46, 3340.61 }, { 1.0, 0.5, 6681.22 } };
        double b4 = 0.0;
        for (int i = 0; i <= 2; ++i) {
            b4 += L[i][0] * Math.cos(L[i][1] + L[i][2] * t);
        }
        return b4;
    }
    
    double R0(final double t) {
        final double[][] L = { { 1.53033488E8, 0.0, 0.0 }, { 1.4184953E7, 3.47971284, 3340.6124267 }, { 660776.0, 3.817834, 6681.224853 }, { 46179.0, 4.15595, 10021.83728 }, { 8110.0, 5.5596, 2810.9215 }, { 7485.0, 1.7724, 5621.8429 }, { 5523.0, 1.3644, 2281.2305 }, { 3825.0, 4.4941, 13362.4497 }, { 2484.0, 4.9255, 2942.4634 }, { 2307.0, 0.0908, 2544.3144 }, { 1999.0, 5.3606, 3337.0893 }, { 1960.0, 4.7425, 3344.1355 }, { 1167.0, 2.1126, 5092.152 }, { 1103.0, 5.0091, 398.149 }, { 992.0, 5.839, 6151.534 }, { 899.0, 4.408, 529.691 }, { 807.0, 2.102, 1059.382 }, { 798.0, 3.448, 796.298 }, { 741.0, 1.499, 2146.165 }, { 726.0, 1.245, 8432.764 }, { 692.0, 2.134, 8962.455 }, { 633.0, 0.894, 3340.595 }, { 633.0, 2.924, 3340.63 }, { 630.0, 1.287, 1751.54 }, { 574.0, 0.829, 2914.014 }, { 526.0, 5.383, 3738.761 }, { 473.0, 5.199, 3127.313 }, { 348.0, 4.832, 16703.062 }, { 284.0, 2.907, 3532.061 }, { 280.0, 5.257, 6283.076 }, { 276.0, 1.218, 6254.627 }, { 275.0, 2.908, 1748.016 }, { 270.0, 3.764, 5884.927 }, { 239.0, 2.037, 1194.447 }, { 234.0, 5.105, 5486.778 }, { 228.0, 3.255, 6872.673 }, { 223.0, 4.199, 3149.164 }, { 219.0, 5.583, 191.448 }, { 208.0, 5.255, 3340.545 }, { 208.0, 4.846, 3340.68 }, { 186.0, 5.699, 6677.702 }, { 183.0, 5.081, 6684.748 }, { 179.0, 4.184, 3333.499 }, { 176.0, 5.953, 3870.303 }, { 164.0, 3.799, 4136.91 } };
        double r0 = 0.0;
        for (int i = 0; i <= 44; ++i) {
            r0 += L[i][0] * Math.cos(L[i][1] + L[i][2] * t);
        }
        return r0;
    }
    
    double R1(final double t) {
        final double[][] L = { { 1107433.0, 2.0325052, 3340.6124267 }, { 103176.0, 2.370718, 6681.224853 }, { 12877.0, 0.0, 0.0 }, { 10816.0, 2.70888, 10021.83728 }, { 1195.0, 3.047, 13362.4497 }, { 439.0, 2.888, 2281.23 }, { 396.0, 3.423, 3344.136 }, { 183.0, 1.584, 2544.314 }, { 136.0, 3.385, 16703.062 }, { 128.0, 6.043, 3337.089 }, { 128.0, 0.63, 1059.382 }, { 127.0, 1.954, 796.298 }, { 118.0, 2.998, 2146.165 }, { 88.0, 3.42, 398.15 }, { 83.0, 3.86, 3738.76 }, { 76.0, 4.45, 6151.53 }, { 72.0, 2.76, 529.69 }, { 67.0, 2.55, 1751.54 }, { 66.0, 4.41, 1748.02 }, { 58.0, 0.54, 1194.45 }, { 54.0, 0.68, 8962.46 }, { 51.0, 3.73, 6684.75 }, { 49.0, 5.73, 3340.6 }, { 49.0, 1.48, 3340.63 }, { 48.0, 2.58, 3149.16 }, { 48.0, 2.29, 2914.01 }, { 39.0, 2.32, 4136.91 } };
        double r1 = 0.0;
        for (int i = 0; i <= 26; ++i) {
            r1 += L[i][0] * Math.cos(L[i][1] + L[i][2] * t);
        }
        return r1;
    }
    
    double R2(final double t) {
        final double[][] L = { { 44242.0, 0.47931, 3340.61243 }, { 8138.0, 0.87, 6681.2249 }, { 1275.0, 1.2259, 10021.8373 }, { 187.0, 1.573, 13362.45 }, { 52.0, 3.14, 0.0 }, { 41.0, 1.97, 3344.14 }, { 27.0, 1.92, 16703.06 }, { 18.0, 4.43, 2281.23 }, { 12.0, 4.53, 3185.19 }, { 10.0, 5.39, 1059.38 }, { 10.0, 0.42, 796.3 } };
        double r2 = 0.0;
        for (int i = 0; i <= 10; ++i) {
            r2 += L[i][0] * Math.cos(L[i][1] + L[i][2] * t);
        }
        return r2;
    }
    
    double R3(final double t) {
        final double[][] L = { { 1113.0, 5.1499, 3340.6124 }, { 424.0, 5.613, 6681.225 }, { 100.0, 5.997, 10021.837 }, { 20.0, 0.08, 13362.45 }, { 5.0, 3.14, 0.0 }, { 3.0, 0.43, 16703.06 } };
        double r3 = 0.0;
        for (int i = 0; i <= 5; ++i) {
            r3 += L[i][0] * Math.cos(L[i][1] + L[i][2] * t);
        }
        return r3;
    }
    
    double R4(final double t) {
        final double[][] L = { { 20.0, 3.58, 3340.61 }, { 16.0, 4.05, 6681.22 }, { 6.0, 4.46, 10021.84 }, { 2.0, 4.84, 13362.45 } };
        double r4 = 0.0;
        for (int i = 0; i <= 3; ++i) {
            r4 += L[i][0] * Math.cos(L[i][1] + L[i][2] * t);
        }
        return r4;
    }
}
