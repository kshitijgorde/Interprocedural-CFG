digraph "" {
"virtualinvoke <java.awt.Component: java.awt.Graphics getGraphics()>";
 "virtualinvoke <java.awt.Component: java.awt.Graphics getGraphics()>"->"virtualinvoke <java.awt.Component: java.awt.Dimension size()>";
 "virtualinvoke <java.awt.Component: java.awt.Dimension size()>"->"fieldput <SunRise: java.awt.Dimension d>";
 "fieldput <SunRise: java.awt.Dimension d>"->"fieldget <SunRise: java.awt.Dimension d>";
 "fieldget <SunRise: java.awt.Dimension d>"->"fieldget <java.awt.Dimension: int width>";
 "fieldget <java.awt.Dimension: int width>"->"fieldget <SunRise: java.awt.Dimension d>";
 "fieldget <SunRise: java.awt.Dimension d>"->"fieldget <java.awt.Dimension: int height>";
 "fieldget <java.awt.Dimension: int height>"->"virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>";
 "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"->"fieldput <SunRise: java.lang.String textStr>";
 "fieldput <SunRise: java.lang.String textStr>"->"virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>";
 "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"->"staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>";
 "staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>"->"virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>";
 "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"->"fieldput <SunRise: java.lang.String URLstr>";
 "fieldput <SunRise: java.lang.String URLstr>"->"new java.net.URL";
 "new java.net.URL"->"fieldget <SunRise: java.lang.String URLstr>";
 "fieldget <SunRise: java.lang.String URLstr>"->"specialinvoke <java.net.URL: void <init>(java.lang.String)>";
 "specialinvoke <java.net.URL: void <init>(java.lang.String)>"->"fieldput <SunRise: java.net.URL goURL>";
 "fieldput <SunRise: java.net.URL goURL>"->"goto staticinvoke <java.awt.Toolkit: java.awt.Toolkit getDefaultToolkit()>";
 "goto staticinvoke <java.awt.Toolkit: java.awt.Toolkit getDefaultToolkit()>"->"staticinvoke <java.awt.Toolkit: java.awt.Toolkit getDefaultToolkit()>";
 "staticinvoke <java.awt.Toolkit: java.awt.Toolkit getDefaultToolkit()>"->"virtualinvoke <java.awt.Toolkit: java.lang.String[] getFontList()>";
 "virtualinvoke <java.awt.Toolkit: java.lang.String[] getFontList()>"->"new java.awt.Font";
 "new java.awt.Font"->"specialinvoke <java.awt.Font: void <init>(java.lang.String,int,int)>";
 "specialinvoke <java.awt.Font: void <init>(java.lang.String,int,int)>"->"fieldput <SunRise: java.awt.Font thisFont>";
 "fieldput <SunRise: java.awt.Font thisFont>"->"new java.awt.Font";
 "new java.awt.Font"->"specialinvoke <java.awt.Font: void <init>(java.lang.String,int,int)>";
 "specialinvoke <java.awt.Font: void <init>(java.lang.String,int,int)>"->"fieldput <SunRise: java.awt.Font tinyFont>";
 "fieldput <SunRise: java.awt.Font tinyFont>"->"fieldget <SunRise: java.awt.Font thisFont>";
 "fieldget <SunRise: java.awt.Font thisFont>"->"virtualinvoke <java.awt.Graphics: void setFont(java.awt.Font)>";
 "virtualinvoke <java.awt.Graphics: void setFont(java.awt.Font)>"->"virtualinvoke <java.awt.Graphics: java.awt.FontMetrics getFontMetrics()>";
 "virtualinvoke <java.awt.Graphics: java.awt.FontMetrics getFontMetrics()>"->"fieldput <SunRise: java.awt.FontMetrics fm>";
 "fieldput <SunRise: java.awt.FontMetrics fm>"->"fieldget <SunRise: java.awt.FontMetrics fm>";
 "fieldget <SunRise: java.awt.FontMetrics fm>"->"virtualinvoke <java.awt.FontMetrics: int getMaxAdvance()>";
 "virtualinvoke <java.awt.FontMetrics: int getMaxAdvance()>"->"fieldget <SunRise: java.awt.FontMetrics fm>";
 "fieldget <SunRise: java.awt.FontMetrics fm>"->"virtualinvoke <java.awt.FontMetrics: int getHeight()>";
 "virtualinvoke <java.awt.FontMetrics: int getHeight()>"->"fieldget <SunRise: java.awt.Dimension d>";
 "fieldget <SunRise: java.awt.Dimension d>"->"fieldget <java.awt.Dimension: int width>";
 "fieldget <java.awt.Dimension: int width>"->"fieldget <SunRise: java.awt.FontMetrics fm>";
 "fieldget <SunRise: java.awt.FontMetrics fm>"->"fieldget <SunRise: java.lang.String textStr>";
 "fieldget <SunRise: java.lang.String textStr>"->"virtualinvoke <java.awt.FontMetrics: int stringWidth(java.lang.String)>";
 "virtualinvoke <java.awt.FontMetrics: int stringWidth(java.lang.String)>"->"staticget <java.awt.Color: java.awt.Color black>";
 "staticget <java.awt.Color: java.awt.Color black>"->"fieldput <SunRise: java.awt.Color textColor>";
 "fieldput <SunRise: java.awt.Color textColor>"->"fieldput <SunRise: java.awt.Color[] skyColor>";
 "fieldput <SunRise: java.awt.Color[] skyColor>"->"new java.awt.Color";
 "new java.awt.Color"->"specialinvoke <java.awt.Color: void <init>(int,int,int)>";
 "specialinvoke <java.awt.Color: void <init>(int,int,int)>"->"fieldput <SunRise: java.awt.Color cloudColor>";
 "fieldput <SunRise: java.awt.Color cloudColor>"->"new java.awt.Color";
 "new java.awt.Color"->"specialinvoke <java.awt.Color: void <init>(int,int,int)>";
 "specialinvoke <java.awt.Color: void <init>(int,int,int)>"->"fieldput <SunRise: java.awt.Color hill0Color>";
 "fieldput <SunRise: java.awt.Color hill0Color>"->"new java.awt.Color";
 "new java.awt.Color"->"specialinvoke <java.awt.Color: void <init>(int,int,int)>";
 "specialinvoke <java.awt.Color: void <init>(int,int,int)>"->"fieldput <SunRise: java.awt.Color hill1Color>";
 "fieldput <SunRise: java.awt.Color hill1Color>"->"new java.awt.Color";
 "new java.awt.Color"->"specialinvoke <java.awt.Color: void <init>(int,int,int)>";
 "specialinvoke <java.awt.Color: void <init>(int,int,int)>"->"fieldput <SunRise: java.awt.Color mountainColor>";
 "fieldput <SunRise: java.awt.Color mountainColor>"->"new java.awt.Color";
 "new java.awt.Color"->"specialinvoke <java.awt.Color: void <init>(int,int,int)>";
 "specialinvoke <java.awt.Color: void <init>(int,int,int)>"->"fieldput <SunRise: java.awt.Color treeColor>";
 "fieldput <SunRise: java.awt.Color treeColor>"->"return";
 "specialinvoke <java.net.URL: void <init>(java.lang.String)>"->"staticget <java.lang.System: java.io.PrintStream out>";
 "staticget <java.lang.System: java.io.PrintStream out>"->"virtualinvoke <java.io.PrintStream: void println(java.lang.String)>";
}
