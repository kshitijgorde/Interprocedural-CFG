// 
// Decompiled by Procyon v0.5.30
// 

class MoonCompute
{
    final double K = 0.017453292519943295;
    double RA;
    double DEC;
    double B;
    double L;
    
    public MoonCompute(final double JD) {
        final double T = (JD - 2451545.0) / 36525.0;
        double eps = 23.433333333333334 + (21.448 - 46.815 * T - 5.9E-4 * T * T + 0.001813 * T * T * T) / 3600.0;
        eps += this.deltaEps(T);
        final double coseps = Math.cos(0.017453292519943295 * eps);
        final double sineps = Math.sin(0.017453292519943295 * eps);
        final double T2 = Math.pow(T, 2.0);
        final double T3 = Math.pow(T, 3.0);
        final double T4 = Math.pow(T, 4.0);
        final double Ls = 0.017453292519943295 * (218.3164591 + 481267.88134236 * T - 0.0013268 * T2 + T3 / 538841.0 - T4 / 6.5194E7);
        final double D = 0.017453292519943295 * (297.8502042 + 445267.1115168 * T - 0.00163 * T2 + T3 / 545868.0 - T4 / 1.13065E8);
        final double M = 0.017453292519943295 * (357.5291092 + 35999.0502909 * T - 1.536E-4 * T2 + T3 / 2.449E7);
        final double Ms = 0.017453292519943295 * (134.9634114 + 477198.8676313 * T + 0.008997 * T2 + T3 / 69699.0 - T4 / 1.4712E7);
        final double F = 0.017453292519943295 * (93.2720993 + 483202.0175273 * T - 0.0034029 * T2 - T3 / 3526000.0 + T4 / 8.6331E8);
        final double E = 1.0 - 0.002516 * T - 7.4E-6 * T2;
        final double A1 = 0.017453292519943295 * (119.75 + 131.849 * T);
        final double A2 = 0.017453292519943295 * (53.09 + 479264.29 * T);
        final double A3 = 0.017453292519943295 * (313.45 + 481266.484 * T);
        this.L = this.L0(D, M, Ms, F, E) + 3958.0 * Math.sin(A1) + 1962.0 * Math.sin(Ls - F) + 318.0 * Math.sin(A2);
        this.L = this.L * 1.0E-6 % 360.0;
        double LS = Ls / 0.017453292519943295;
        LS %= 360.0;
        this.L = LS + this.L + this.deltaPsi(T);
        if (this.L < 0.0) {
            this.L += 360.0;
        }
        this.B = this.B0(D, M, Ms, F, E) - 2235.0 * Math.sin(Ls) + 382.0 * Math.sin(A3) + 175.0 * Math.sin(A1 - F) + 175.0 * Math.sin(A1 + F) + 127.0 * Math.sin(Ls - Ms) - 115.0 * Math.sin(Ls + Ms);
        this.B = this.B * 1.0E-6 % 360.0;
        this.RA = Math.atan2(Math.sin(0.017453292519943295 * this.L) * coseps - Math.tan(0.017453292519943295 * this.B) * sineps, Math.cos(0.017453292519943295 * this.L)) / 0.017453292519943295;
        if (this.RA < 0.0) {
            this.RA += 360.0;
        }
        this.DEC = Math.asin(Math.sin(0.017453292519943295 * this.B) * coseps + Math.cos(0.017453292519943295 * this.B) * sineps * Math.sin(0.017453292519943295 * this.L)) / 0.017453292519943295;
    }
    
    public double deltaPsi(final double T) {
        final double K = 0.017453292519943295;
        final double[][] L = { { 0.0, 0.0, 0.0, 0.0, 1.0, -171996.0, -174.2 }, { -2.0, 0.0, 0.0, 2.0, 2.0, -13187.0, -1.6 }, { 0.0, 0.0, 0.0, 2.0, 2.0, -2274.0, -0.2 }, { 0.0, 0.0, 0.0, 0.0, 2.0, 2062.0, 0.2 }, { 0.0, 1.0, 0.0, 0.0, 0.0, 1426.0, -3.4 }, { 0.0, 0.0, 1.0, 0.0, 0.0, 712.0, 0.1 }, { -2.0, 1.0, 0.0, 2.0, 2.0, -517.0, 1.2 }, { 0.0, 0.0, 0.0, 2.0, 1.0, -386.0, -0.4 }, { 0.0, 0.0, 1.0, 2.0, 2.0, -301.0, 0.0 }, { -2.0, -1.0, 0.0, 2.0, 2.0, 217.0, -0.5 }, { -2.0, 0.0, 1.0, 0.0, 0.0, -158.0, 0.0 }, { -2.0, 0.0, 0.0, 2.0, 1.0, 129.0, 0.1 }, { 0.0, 0.0, -1.0, 2.0, 2.0, 123.0, 0.0 }, { 2.0, 0.0, 0.0, 0.0, 0.0, 63.0, 0.0 }, { 0.0, 0.0, 1.0, 0.0, 1.0, 63.0, 0.1 }, { 2.0, 0.0, -1.0, 2.0, 2.0, -59.0, 0.0 }, { 0.0, 0.0, -1.0, 0.0, 1.0, -58.0, -0.1 }, { 0.0, 0.0, 1.0, 2.0, 1.0, -51.0, 0.0 }, { -2.0, 0.0, 2.0, 0.0, 0.0, 48.0, 0.0 }, { 0.0, 0.0, -2.0, 2.0, 1.0, 46.0, 0.0 } };
        final double D = 297.85036 + 445267.11148 * T - 0.0019142 * T * T + T * T * T / 189474.0;
        final double M = 357.52772 + 35999.05034 * T - 1.603E-4 * T * T - T * T * T / 300000.0;
        final double Ms = 134.96298 + 477198.867398 * T + 0.0086972 * T * T + T * T * T / 56250.0;
        final double F = 93.27191 + 483202.017538 * T - 0.0036825 * T * T + T * T * T / 327270.0;
        final double omega = 125.04452 - 1934.136261 * T + 0.0020708 * T * T + T * T * T / 450000.0;
        double sum = 0.0;
        for (int i = 0; i <= 19; ++i) {
            sum += (L[i][5] + L[i][6] * T) * Math.sin(0.017453292519943295 * (L[i][0] * D + L[i][1] * M + L[i][2] * Ms + L[i][3] * F + L[i][4] * omega));
        }
        sum /= 10000.0;
        return sum / 3600.0;
    }
    
    public double deltaEps(final double T) {
        final double K = 0.017453292519943295;
        final double[][] L = { { 0.0, 0.0, 0.0, 0.0, 1.0, 92025.0, 8.9 }, { -2.0, 0.0, 0.0, 2.0, 2.0, 5736.0, -3.1 }, { 0.0, 0.0, 0.0, 2.0, 2.0, 977.0, -0.5 }, { 0.0, 0.0, 0.0, 0.0, 2.0, -895.0, 0.5 }, { 0.0, 1.0, 0.0, 0.0, 0.0, 54.0, -0.1 }, { 0.0, 0.0, 1.0, 0.0, 0.0, -7.0, 0.0 }, { -2.0, 1.0, 0.0, 2.0, 2.0, 224.0, -0.6 }, { 0.0, 0.0, 0.0, 2.0, 1.0, 200.0, 0.0 }, { 0.0, 0.0, 1.0, 2.0, 2.0, 129.0, -0.1 }, { -2.0, -1.0, 0.0, 2.0, 2.0, -95.0, 0.3 }, { -2.0, 0.0, 0.0, 2.0, 1.0, -70.0, 0.0 }, { 0.0, 0.0, -1.0, 2.0, 2.0, -53.0, 0.0 }, { 0.0, 0.0, 1.0, 0.0, 1.0, -33.0, 0.0 }, { 2.0, 0.0, -1.0, 2.0, 2.0, 26.0, 0.0 }, { 0.0, 0.0, -1.0, 0.0, 1.0, 32.0, 0.0 }, { 0.0, 0.0, 1.0, 2.0, 1.0, 27.0, 0.0 }, { 0.0, 0.0, -2.0, 2.0, 1.0, -24.0, 0.0 }, { 2.0, 0.0, 0.0, 2.0, 2.0, 16.0, 0.0 }, { 0.0, 0.0, 2.0, 2.0, 2.0, 13.0, 0.0 }, { -2.0, 0.0, 1.0, 2.0, 2.0, -12.0, 0.0 }, { 0.0, 0.0, -1.0, 2.0, 1.0, -10.0, 0.0 }, { 2.0, 0.0, -1.0, 0.0, 1.0, -8.0, 0.0 }, { -2.0, 2.0, 0.0, 2.0, 2.0, 7.0, 0.0 }, { 0.0, 1.0, 0.0, 0.0, 1.0, 9.0, 0.0 } };
        final double D = 297.85036 + 445267.11148 * T - 0.0019142 * T * T + T * T * T / 189474.0;
        final double M = 357.52772 + 35999.05034 * T - 1.603E-4 * T * T - T * T * T / 300000.0;
        final double Ms = 134.96298 + 477198.867398 * T + 0.0086972 * T * T + T * T * T / 56250.0;
        final double F = 93.27191 + 483202.017538 * T - 0.0036825 * T * T + T * T * T / 327270.0;
        final double omega = 125.04452 - 1934.136261 * T + 0.0020708 * T * T + T * T * T / 450000.0;
        double sum = 0.0;
        for (int i = 0; i <= 23; ++i) {
            sum += (L[i][5] + L[i][6] * T) * Math.cos(0.017453292519943295 * (L[i][0] * D + L[i][1] * M + L[i][2] * Ms + L[i][3] * F + L[i][4] * omega));
        }
        sum /= 10000.0;
        return sum / 3600.0;
    }
    
    double L0(final double D, final double M, final double Ms, final double F, final double E) {
        final double[][] L = { { 6288774.0, 0.0, 0.0, 1.0, 0.0 }, { 1274027.0, 2.0, 0.0, -1.0, 0.0 }, { 658314.0, 2.0, 0.0, 0.0, 0.0 }, { 213618.0, 0.0, 0.0, 2.0, 0.0 }, { -185116.0, 0.0, 1.0, 0.0, 0.0 }, { -114332.0, 0.0, 0.0, 0.0, 2.0 }, { 58793.0, 2.0, 0.0, -2.0, 0.0 }, { 57066.0, 2.0, -1.0, -1.0, 0.0 }, { 53322.0, 2.0, 0.0, 1.0, 0.0 }, { 45758.0, 2.0, -1.0, 0.0, 0.0 }, { -40923.0, 0.0, 1.0, -1.0, 0.0 }, { -34720.0, 1.0, 0.0, 0.0, 0.0 }, { -30383.0, 0.0, 1.0, 1.0, 0.0 }, { 15327.0, 2.0, 0.0, 0.0, -2.0 }, { -12528.0, 0.0, 0.0, 1.0, 2.0 }, { 10980.0, 0.0, 0.0, 1.0, -2.0 }, { 10675.0, 4.0, 0.0, -1.0, 0.0 }, { 10034.0, 0.0, 0.0, 3.0, 0.0 }, { 8548.0, 4.0, 0.0, -2.0, 0.0 }, { -7888.0, 2.0, 1.0, -1.0, 0.0 }, { -6766.0, 2.0, 1.0, 0.0, 0.0 }, { -5163.0, 1.0, 0.0, -1.0, 0.0 }, { 4987.0, 1.0, 1.0, 0.0, 0.0 }, { 4036.0, 2.0, -1.0, 1.0, 0.0 }, { 3994.0, 2.0, 0.0, 2.0, 0.0 }, { 3861.0, 4.0, 0.0, 0.0, 0.0 }, { 3665.0, 2.0, 0.0, -3.0, 0.0 }, { -2689.0, 0.0, 1.0, -2.0, 0.0 }, { -2602.0, 2.0, 0.0, -1.0, 2.0 }, { 2390.0, 2.0, -1.0, -2.0, 0.0 }, { -2348.0, 1.0, 0.0, 1.0, 0.0 }, { 2236.0, 2.0, -2.0, 0.0, 0.0 }, { -2120.0, 0.0, 1.0, 2.0, 0.0 }, { -2069.0, 0.0, 2.0, 0.0, 0.0 }, { 2048.0, 2.0, -2.0, -1.0, 0.0 }, { -1773.0, 2.0, 0.0, 1.0, -2.0 }, { -1595.0, 2.0, 0.0, 0.0, 2.0 }, { 1215.0, 4.0, -1.0, -1.0, 0.0 }, { -1110.0, 0.0, 0.0, 2.0, 2.0 }, { -892.0, 3.0, 0.0, -1.0, 0.0 }, { -810.0, 2.0, 1.0, 1.0, 0.0 }, { 759.0, 4.0, -1.0, -2.0, 0.0 }, { -713.0, 0.0, 2.0, -1.0, 0.0 }, { -700.0, 2.0, 2.0, -1.0, 0.0 }, { 691.0, 2.0, 1.0, -2.0, 0.0 }, { 596.0, 2.0, -1.0, 0.0, -2.0 }, { 549.0, 4.0, 0.0, 1.0, 0.0 }, { 537.0, 0.0, 0.0, 4.0, 0.0 }, { 520.0, 4.0, -1.0, 0.0, 0.0 }, { -487.0, 1.0, 0.0, -2.0, 0.0 }, { -399.0, 2.0, 1.0, 0.0, -2.0 }, { -381.0, 0.0, 0.0, 2.0, -2.0 }, { 351.0, 1.0, 1.0, 1.0, 0.0 }, { -340.0, 3.0, 0.0, -2.0, 0.0 }, { 330.0, 4.0, 0.0, -3.0, 0.0 }, { 327.0, 2.0, -1.0, 2.0, 0.0 }, { -323.0, 0.0, 2.0, 1.0, 0.0 }, { 299.0, 1.0, 1.0, -1.0, 0.0 }, { 294.0, 2.0, 0.0, 3.0, 0.0 } };
        double l = 0.0;
        for (int i = 0; i < 59; ++i) {
            double term = L[i][0] * Math.sin(L[i][1] * D + L[i][2] * M + L[i][3] * Ms + L[i][4] * F);
            if (Math.abs(L[i][2]) == 1.0) {
                term *= E;
            }
            if (Math.abs(L[i][2]) == 2.0) {
                term *= E * E;
            }
            l += term;
        }
        return l;
    }
    
    double B0(final double D, final double M, final double Ms, final double F, final double E) {
        final double[][] L = { { 5128122.0, 0.0, 0.0, 0.0, 1.0 }, { 280602.0, 0.0, 0.0, 1.0, 1.0 }, { 277693.0, 0.0, 0.0, 1.0, -1.0 }, { 173237.0, 2.0, 0.0, 0.0, -1.0 }, { 55413.0, 2.0, 0.0, -1.0, 1.0 }, { 46271.0, 2.0, 0.0, -1.0, -1.0 }, { 32573.0, 2.0, 0.0, 0.0, 1.0 }, { 17198.0, 0.0, 0.0, 2.0, 1.0 }, { 9266.0, 2.0, 0.0, 1.0, -1.0 }, { 8822.0, 0.0, 0.0, 2.0, -1.0 }, { 8216.0, 2.0, -1.0, 0.0, -1.0 }, { 4324.0, 2.0, 0.0, -2.0, -1.0 }, { 4200.0, 2.0, 0.0, 1.0, 1.0 }, { -3359.0, 2.0, 1.0, 0.0, -1.0 }, { 2463.0, 2.0, -1.0, -1.0, 1.0 }, { 2211.0, 2.0, -1.0, 0.0, 1.0 }, { 2065.0, 2.0, -1.0, -1.0, -1.0 }, { -1870.0, 0.0, 1.0, -1.0, -1.0 }, { 1828.0, 4.0, 0.0, -1.0, -1.0 }, { -1794.0, 0.0, 1.0, 0.0, 1.0 }, { -1749.0, 0.0, 0.0, 0.0, 3.0 }, { -1565.0, 0.0, 1.0, -1.0, 1.0 }, { -1491.0, 1.0, 0.0, 0.0, 1.0 }, { -1475.0, 0.0, 1.0, 1.0, 1.0 }, { -1410.0, 0.0, 1.0, 1.0, -1.0 }, { -1344.0, 0.0, 1.0, 0.0, -1.0 }, { -1335.0, 1.0, 0.0, 0.0, -1.0 }, { 1107.0, 0.0, 0.0, 3.0, 1.0 }, { 1021.0, 4.0, 0.0, 0.0, -1.0 }, { 833.0, 4.0, 0.0, -1.0, 1.0 }, { 777.0, 0.0, 0.0, 1.0, -3.0 }, { 671.0, 4.0, 0.0, -2.0, 1.0 }, { 607.0, 2.0, 0.0, 0.0, -3.0 }, { 596.0, 2.0, 0.0, 2.0, -1.0 }, { 491.0, 2.0, -1.0, 1.0, -1.0 }, { -451.0, 2.0, 0.0, -2.0, 1.0 }, { 439.0, 0.0, 0.0, 3.0, -1.0 }, { 422.0, 2.0, 0.0, 2.0, 1.0 }, { 421.0, 2.0, 0.0, -3.0, -1.0 }, { -366.0, 2.0, 1.0, -1.0, 1.0 }, { -351.0, 2.0, 1.0, 0.0, 1.0 }, { 331.0, 4.0, 0.0, 0.0, 1.0 }, { 315.0, 2.0, -1.0, 1.0, 1.0 }, { 302.0, 2.0, -2.0, 0.0, -1.0 }, { -283.0, 0.0, 0.0, 1.0, 3.0 }, { -229.0, 2.0, 1.0, 1.0, -1.0 }, { 223.0, 1.0, 1.0, 0.0, -1.0 }, { 223.0, 1.0, 1.0, 0.0, 1.0 }, { -220.0, 0.0, 1.0, -2.0, -1.0 }, { -220.0, 2.0, 1.0, -1.0, -1.0 }, { -185.0, 1.0, 0.0, 1.0, 1.0 }, { 181.0, 2.0, -1.0, -2.0, -1.0 }, { -177.0, 0.0, 1.0, 2.0, 1.0 }, { 176.0, 4.0, 0.0, -2.0, -1.0 }, { 166.0, 4.0, -1.0, -1.0, -1.0 }, { -164.0, 1.0, 0.0, 1.0, -1.0 }, { 132.0, 4.0, 0.0, 1.0, -1.0 }, { -119.0, 1.0, 0.0, -1.0, -1.0 }, { 115.0, 4.0, -1.0, 0.0, -1.0 }, { 107.0, 2.0, -2.0, 0.0, 1.0 } };
        double b = 0.0;
        for (int i = 0; i <= 59; ++i) {
            double term = L[i][0] * Math.sin(L[i][1] * D + L[i][2] * M + L[i][3] * Ms + L[i][4] * F);
            if (Math.abs(L[i][2]) == 1.0) {
                term *= E;
            }
            if (Math.abs(L[i][2]) == 2.0) {
                term = term * E * E;
            }
            b += term;
        }
        return b;
    }
    
    double alpha() {
        return this.RA;
    }
    
    double delta() {
        return this.DEC;
    }
    
    double beta() {
        return this.B;
    }
    
    double lambda() {
        return this.L;
    }
}
