digraph "" {
"virtualinvoke <java.applet.Applet: java.net.URL getDocumentBase()>";
 "virtualinvoke <java.applet.Applet: java.net.URL getDocumentBase()>"->"virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>";
 "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"->"virtualinvoke <java.applet.Applet: java.awt.Image getImage(java.net.URL,java.lang.String)>";
 "virtualinvoke <java.applet.Applet: java.awt.Image getImage(java.net.URL,java.lang.String)>"->"fieldput <ImageMap: java.awt.Image baseImage>";
 "fieldput <ImageMap: java.awt.Image baseImage>"->"virtualinvoke <java.applet.Applet: java.net.URL getDocumentBase()>";
 "virtualinvoke <java.applet.Applet: java.net.URL getDocumentBase()>"->"virtualinvoke <java.net.URL: java.lang.String toString()>";
 "virtualinvoke <java.net.URL: java.lang.String toString()>"->"goto load.r r3";
 "goto load.r r3"->"virtualinvoke <java.lang.String: int indexOf(int,int)>";
 "virtualinvoke <java.lang.String: int indexOf(int,int)>"->"new java.lang.StringBuffer";
 "new java.lang.StringBuffer"->"new java.lang.String";
 "new java.lang.String"->"virtualinvoke <java.lang.String: char[] toCharArray()>";
 "virtualinvoke <java.lang.String: char[] toCharArray()>"->"specialinvoke <java.lang.String: void <init>(char[],int,int)>";
 "specialinvoke <java.lang.String: void <init>(char[],int,int)>"->"staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>";
 "staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>"->"specialinvoke <java.lang.StringBuffer: void <init>(java.lang.String)>";
 "specialinvoke <java.lang.StringBuffer: void <init>(java.lang.String)>"->"virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>";
 "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"->"virtualinvoke <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>";
 "virtualinvoke <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>"->"virtualinvoke <java.lang.StringBuffer: java.lang.String toString()>";
 "virtualinvoke <java.lang.StringBuffer: java.lang.String toString()>"->"staticget <java.lang.System: java.io.PrintStream out>";
 "staticget <java.lang.System: java.io.PrintStream out>"->"new java.lang.StringBuffer";
 "new java.lang.StringBuffer"->"specialinvoke <java.lang.StringBuffer: void <init>(java.lang.String)>";
 "specialinvoke <java.lang.StringBuffer: void <init>(java.lang.String)>"->"virtualinvoke <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>";
 "virtualinvoke <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>"->"virtualinvoke <java.lang.StringBuffer: java.lang.String toString()>";
 "virtualinvoke <java.lang.StringBuffer: java.lang.String toString()>"->"virtualinvoke <java.io.PrintStream: void println(java.lang.String)>";
 "virtualinvoke <java.io.PrintStream: void println(java.lang.String)>"->"virtualinvoke <java.applet.Applet: void showStatus(java.lang.String)>";
 "virtualinvoke <java.applet.Applet: void showStatus(java.lang.String)>"->"new java.net.URL";
 "new java.net.URL"->"specialinvoke <java.net.URL: void <init>(java.lang.String)>";
 "specialinvoke <java.net.URL: void <init>(java.lang.String)>"->"virtualinvoke <java.net.URL: java.io.InputStream openStream()>";
 "virtualinvoke <java.net.URL: java.io.InputStream openStream()>"->"new java.io.ByteArrayOutputStream";
 "new java.io.ByteArrayOutputStream"->"specialinvoke <java.io.ByteArrayOutputStream: void <init>()>";
 "specialinvoke <java.io.ByteArrayOutputStream: void <init>()>"->"virtualinvoke <java.io.InputStream: int read(byte[],int,int)>";
 "virtualinvoke <java.io.InputStream: int read(byte[],int,int)>"->"virtualinvoke <java.io.ByteArrayOutputStream: void write(byte[],int,int)>";
 "virtualinvoke <java.io.ByteArrayOutputStream: void write(byte[],int,int)>"->"goto load.i i9";
 "goto load.i i9"->"virtualinvoke <java.io.ByteArrayOutputStream: java.lang.String toString()>";
 "virtualinvoke <java.io.ByteArrayOutputStream: java.lang.String toString()>"->"virtualinvoke <java.lang.String: int indexOf(java.lang.String)>";
 "virtualinvoke <java.lang.String: int indexOf(java.lang.String)>"->"goto load.i r3";
 "goto load.i r3"->"ifle return";
 "ifle return"->"new java.lang.String";
 "new java.lang.String"->"virtualinvoke <java.io.ByteArrayOutputStream: byte[] toByteArray()>";
 "virtualinvoke <java.io.ByteArrayOutputStream: byte[] toByteArray()>"->"specialinvoke <java.lang.String: void <init>(byte[],int,int,int)>";
 "specialinvoke <java.lang.String: void <init>(byte[],int,int,int)>"->"goto load.i r1";
 "goto load.i r1"->"virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>";
 "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"->"new java.awt.Color";
 "new java.awt.Color"->"staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String,int)>";
 "staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String,int)>"->"virtualinvoke <java.lang.Integer: int intValue()>";
 "virtualinvoke <java.lang.Integer: int intValue()>"->"specialinvoke <java.awt.Color: void <init>(int)>";
 "specialinvoke <java.awt.Color: void <init>(int)>"->"fieldput <ImageMap: java.awt.Color highlight_color>";
 "fieldput <ImageMap: java.awt.Color highlight_color>"->"goto return";
 "goto return"->"return";
 "specialinvoke <java.awt.Color: void <init>(int)>"->"staticget <java.awt.Color: java.awt.Color blue>";
 "staticget <java.awt.Color: java.awt.Color blue>"->"fieldput <ImageMap: java.awt.Color highlight_color>";
 "fieldput <ImageMap: java.awt.Color highlight_color>"->"goto return";
"goto load.i i6";
 "goto load.i i6"->"goto load.i i14";
 "goto load.i i14"->"new java.awt.Polygon";
 "new java.awt.Polygon"->"specialinvoke <java.awt.Polygon: void <init>(int[],int[],int)>";
 "specialinvoke <java.awt.Polygon: void <init>(int[],int[],int)>"->"fieldput <Poly: java.awt.Polygon pol>";
 "fieldput <Poly: java.awt.Polygon pol>"-> "virtualinvoke <java.lang.String: int indexOf(java.lang.String)>"->"virtualinvoke <java.lang.Throwable: void printStackTrace()>";
 "virtualinvoke <java.lang.Throwable: void printStackTrace()>"->"return";
"virtualinvoke <java.io.InputStream: int read(byte[],int,int)>";
 "virtualinvoke <java.io.InputStream: int read(byte[],int,int)>"->"virtualinvoke <java.io.ByteArrayOutputStream: void write(byte[],int,int)>";
}
