digraph "" {
"new java.awt.MediaTracker";
 "new java.awt.MediaTracker"->"specialinvoke <java.awt.MediaTracker: void <init>(java.awt.Component)>";
 "specialinvoke <java.awt.MediaTracker: void <init>(java.awt.Component)>"->"fieldput <AquariumCity: java.awt.MediaTracker tracker>";
 "fieldput <AquariumCity: java.awt.MediaTracker tracker>"->"staticget <java.awt.Color: java.awt.Color lightGray>";
 "staticget <java.awt.Color: java.awt.Color lightGray>"->"fieldput <AquariumCity: java.awt.Color BackColor>";
 "fieldput <AquariumCity: java.awt.Color BackColor>"->"virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>";
 "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"->"new java.awt.Color";
 "new java.awt.Color"->"staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String,int)>";
 "staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String,int)>"->"virtualinvoke <java.lang.Integer: int intValue()>";
 "virtualinvoke <java.lang.Integer: int intValue()>"->"specialinvoke <java.awt.Color: void <init>(int)>";
 "specialinvoke <java.awt.Color: void <init>(int)>"->"fieldput <AquariumCity: java.awt.Color BackColor>";
 "fieldput <AquariumCity: java.awt.Color BackColor>"->"staticget <java.awt.Color: java.awt.Color white>";
 "staticget <java.awt.Color: java.awt.Color white>"->"fieldput <AquariumCity: java.awt.Color MoveFontColor>";
 "fieldput <AquariumCity: java.awt.Color MoveFontColor>"->"virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>";
 "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"->"new java.awt.Color";
 "new java.awt.Color"->"staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String,int)>";
 "staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String,int)>"->"virtualinvoke <java.lang.Integer: int intValue()>";
 "virtualinvoke <java.lang.Integer: int intValue()>"->"specialinvoke <java.awt.Color: void <init>(int)>";
 "specialinvoke <java.awt.Color: void <init>(int)>"->"fieldput <AquariumCity: java.awt.Color MoveFontColor>";
 "fieldput <AquariumCity: java.awt.Color MoveFontColor>"->"fieldput <AquariumCity: java.lang.String MoveFontType>";
 "fieldput <AquariumCity: java.lang.String MoveFontType>"->"virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>";
 "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"->"fieldput <AquariumCity: java.lang.String MoveFontType>";
 "fieldput <AquariumCity: java.lang.String MoveFontType>"->"virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>";
 "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"->"staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>";
 "staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>"->"virtualinvoke <java.lang.Integer: int intValue()>";
 "virtualinvoke <java.lang.Integer: int intValue()>"->"staticget <java.awt.Color: java.awt.Color white>";
 "staticget <java.awt.Color: java.awt.Color white>"->"fieldput <AquariumCity: java.awt.Color RayerFontColor>";
 "fieldput <AquariumCity: java.awt.Color RayerFontColor>"->"virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>";
 "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"->"new java.awt.Color";
 "new java.awt.Color"->"staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String,int)>";
 "staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String,int)>"->"virtualinvoke <java.lang.Integer: int intValue()>";
 "virtualinvoke <java.lang.Integer: int intValue()>"->"specialinvoke <java.awt.Color: void <init>(int)>";
 "specialinvoke <java.awt.Color: void <init>(int)>"->"fieldput <AquariumCity: java.awt.Color RayerFontColor>";
 "fieldput <AquariumCity: java.awt.Color RayerFontColor>"->"fieldput <AquariumCity: java.lang.String RayerFontType>";
 "fieldput <AquariumCity: java.lang.String RayerFontType>"->"virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>";
 "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"->"fieldput <AquariumCity: java.lang.String RayerFontType>";
 "fieldput <AquariumCity: java.lang.String RayerFontType>"->"fieldput <AquariumCity: java.lang.String MessageFontType>";
 "fieldput <AquariumCity: java.lang.String MessageFontType>"->"virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>";
 "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"->"fieldput <AquariumCity: java.lang.String MessageFontType>";
 "fieldput <AquariumCity: java.lang.String MessageFontType>"->"staticget <java.awt.Color: java.awt.Color black>";
 "staticget <java.awt.Color: java.awt.Color black>"->"fieldput <AquariumCity: java.awt.Color ShadowFontColor>";
 "fieldput <AquariumCity: java.awt.Color ShadowFontColor>"->"virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>";
 "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"->"new java.awt.Color";
 "new java.awt.Color"->"staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String,int)>";
 "staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String,int)>"->"virtualinvoke <java.lang.Integer: int intValue()>";
 "virtualinvoke <java.lang.Integer: int intValue()>"->"specialinvoke <java.awt.Color: void <init>(int)>";
 "specialinvoke <java.awt.Color: void <init>(int)>"->"fieldput <AquariumCity: java.awt.Color ShadowFontColor>";
 "fieldput <AquariumCity: java.awt.Color ShadowFontColor>"->"staticget <java.awt.Color: java.awt.Color white>";
 "staticget <java.awt.Color: java.awt.Color white>"->"fieldput <AquariumCity: java.awt.Color MessageFontColor>";
 "fieldput <AquariumCity: java.awt.Color MessageFontColor>"->"virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>";
 "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"->"new java.awt.Color";
 "new java.awt.Color"->"staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String,int)>";
 "staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String,int)>"->"virtualinvoke <java.lang.Integer: int intValue()>";
 "virtualinvoke <java.lang.Integer: int intValue()>"->"specialinvoke <java.awt.Color: void <init>(int)>";
 "specialinvoke <java.awt.Color: void <init>(int)>"->"fieldput <AquariumCity: java.awt.Color MessageFontColor>";
 "fieldput <AquariumCity: java.awt.Color MessageFontColor>"->"fieldput <AquariumCity: java.lang.String ShadowStatus>";
 "fieldput <AquariumCity: java.lang.String ShadowStatus>"->"virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>";
 "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"->"fieldput <AquariumCity: java.lang.String ShadowStatus>";
 "fieldput <AquariumCity: java.lang.String ShadowStatus>"->"virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>";
 "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"->"goto load.r r0";
 "goto load.r r0"->"virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>";
 "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"->"goto load.r r0";
 "goto load.r r0"->"virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>";
 "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"->"goto load.r r0";
 "goto load.r r0"->"virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>";
 "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"->"goto load.r r0";
 "goto load.r r0"->"virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>";
 "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"->"goto load.r r0";
 "goto load.r r0"->"virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>";
 "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"->"goto load.r r0";
 "goto load.r r0"->"virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>";
 "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"->"fieldput <AquariumCity: java.lang.String JumpTo>";
 "fieldput <AquariumCity: java.lang.String JumpTo>"->"goto load.r r0";
 "goto load.r r0"->"virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>";
 "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"->"fieldput <AquariumCity: java.lang.String Target>";
 "fieldput <AquariumCity: java.lang.String Target>"->"goto load.r r0";
 "goto load.r r0"->"virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>";
 "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"->"goto load.r r0";
 "goto load.r r0"->"virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>";
 "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"->"goto load.r r0";
 "goto load.r r0"->"virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>";
 "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"->"goto load.r r0";
 "goto load.r r0"->"virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>";
 "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"->"goto load.r r0";
 "goto load.r r0"->"virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>";
 "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"->"goto load.r r0";
 "goto load.r r0"->"virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>";
 "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"->"goto load.r r0";
 "goto load.r r0"->"virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>";
 "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"->"goto load.r r0";
 "goto load.r r0"->"virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>";
 "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"->"goto load.r r0";
 "goto load.r r0"->"virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>";
 "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"->"goto load.r r0";
 "goto load.r r0"->"virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>";
 "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"->"goto load.r r0";
 "goto load.r r0"->"virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>";
 "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"->"goto load.r r0";
 "goto load.r r0"->"virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>";
 "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"->"goto load.r r0";
 "goto load.r r0"->"virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>";
 "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"->"goto load.r r0";
 "goto load.r r0"->"virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>";
 "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"->"goto load.r r0";
 "goto load.r r0"->"virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>";
 "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"->"goto load.r r0";
 "goto load.r r0"->"virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>";
 "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"->"goto load.r r0";
 "goto load.r r0"->"goto load.r r0";
 "goto load.r r0"->"new java.util.StringTokenizer";
 "new java.util.StringTokenizer"->"virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>";
 "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"->"specialinvoke <java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>";
 "specialinvoke <java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>"->"virtualinvoke <java.util.StringTokenizer: int countTokens()>";
 "virtualinvoke <java.util.StringTokenizer: int countTokens()>"->"fieldput <AquariumCity: java.awt.Image[] BackImg>";
 "fieldput <AquariumCity: java.awt.Image[] BackImg>"->"fieldput <AquariumCity: java.lang.String[] JumpToRayerMove>";
 "fieldput <AquariumCity: java.lang.String[] JumpToRayerMove>"->"fieldput <AquariumCity: java.lang.String[] RayerMouseMessage>";
 "fieldput <AquariumCity: java.lang.String[] RayerMouseMessage>"->"goto load.r $r33";
 "goto load.r $r33"->"virtualinvoke <java.util.StringTokenizer: boolean hasMoreTokens()>";
 "virtualinvoke <java.util.StringTokenizer: boolean hasMoreTokens()>"->"ifne new java.util.StringTokenizer";
 "ifne new java.util.StringTokenizer"->"virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>";
 "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"->"fieldput <AquariumCity: java.lang.String ImageName>";
 "fieldput <AquariumCity: java.lang.String ImageName>"->"fieldget <AquariumCity: java.lang.String ImageName>";
 "fieldget <AquariumCity: java.lang.String ImageName>"->"virtualinvoke <java.applet.Applet: java.net.URL getDocumentBase()>";
 "virtualinvoke <java.applet.Applet: java.net.URL getDocumentBase()>"->"fieldget <AquariumCity: java.lang.String ImageName>";
 "fieldget <AquariumCity: java.lang.String ImageName>"->"virtualinvoke <java.applet.Applet: java.awt.Image getImage(java.net.URL,java.lang.String)>";
 "virtualinvoke <java.applet.Applet: java.awt.Image getImage(java.net.URL,java.lang.String)>"->"fieldput <AquariumCity: java.awt.Image BackImage>";
 "fieldput <AquariumCity: java.awt.Image BackImage>"->"new java.util.StringTokenizer";
 "new java.util.StringTokenizer"->"virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>";
 "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"->"specialinvoke <java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>";
 "specialinvoke <java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>"->"virtualinvoke <java.util.StringTokenizer: int countTokens()>";
 "virtualinvoke <java.util.StringTokenizer: int countTokens()>"->"fieldput <AquariumCity: java.awt.Image[] Screen>";
 "fieldput <AquariumCity: java.awt.Image[] Screen>"->"fieldput <AquariumCity: java.lang.String[] JumpToMove>";
 "fieldput <AquariumCity: java.lang.String[] JumpToMove>"->"fieldput <AquariumCity: java.lang.String[] MoveMouseMessage>";
 "fieldput <AquariumCity: java.lang.String[] MoveMouseMessage>"->"goto load.r $r33";
 "goto load.r $r33"->"virtualinvoke <java.util.StringTokenizer: boolean hasMoreTokens()>";
 "virtualinvoke <java.util.StringTokenizer: boolean hasMoreTokens()>"->"ifne new java.util.StringTokenizer";
 "ifne new java.util.StringTokenizer"->"new java.util.StringTokenizer";
 "new java.util.StringTokenizer"->"virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>";
 "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"->"specialinvoke <java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>";
 "specialinvoke <java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>"->"virtualinvoke <java.util.StringTokenizer: int countTokens()>";
 "virtualinvoke <java.util.StringTokenizer: int countTokens()>"->"fieldput <AquariumCity: java.lang.String[] Message>";
 "fieldput <AquariumCity: java.lang.String[] Message>"->"goto load.r $r33";
 "goto load.r $r33"->"virtualinvoke <java.util.StringTokenizer: boolean hasMoreTokens()>";
 "virtualinvoke <java.util.StringTokenizer: boolean hasMoreTokens()>"->"ifne new java.util.StringTokenizer";
 "ifne new java.util.StringTokenizer"->"virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>";
 "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"->"virtualinvoke <java.lang.String: boolean equals(java.lang.Object)>";
 "virtualinvoke <java.lang.String: boolean equals(java.lang.Object)>"->"virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>";
 "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"->"virtualinvoke <java.lang.String: boolean equals(java.lang.Object)>";
 "virtualinvoke <java.lang.String: boolean equals(java.lang.Object)>"->"fieldget <AquariumCity: java.awt.Color BackColor>";
 "fieldget <AquariumCity: java.awt.Color BackColor>"->"virtualinvoke <java.awt.Component: void setBackground(java.awt.Color)>";
 "virtualinvoke <java.awt.Component: void setBackground(java.awt.Color)>"->"virtualinvoke <java.awt.Component: java.awt.Image createImage(int,int)>";
 "virtualinvoke <java.awt.Component: java.awt.Image createImage(int,int)>"->"fieldput <AquariumCity: java.awt.Image ScreenImg>";
 "fieldput <AquariumCity: java.awt.Image ScreenImg>"->"fieldget <AquariumCity: java.awt.Image ScreenImg>";
 "fieldget <AquariumCity: java.awt.Image ScreenImg>"->"virtualinvoke <java.awt.Image: java.awt.Graphics getGraphics()>";
 "virtualinvoke <java.awt.Image: java.awt.Graphics getGraphics()>"->"fieldput <AquariumCity: java.awt.Graphics ScreenBuffer>";
 "fieldput <AquariumCity: java.awt.Graphics ScreenBuffer>"->"return";
 "ifne new java.util.StringTokenizer"->"new java.util.StringTokenizer";
 "new java.util.StringTokenizer"->"virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>";
 "virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>"->"specialinvoke <java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>";
 "specialinvoke <java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>"->"fieldget <AquariumCity: java.lang.String[] Message>";
 "fieldget <AquariumCity: java.lang.String[] Message>"->"virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>";
 "virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>"->"virtualinvoke <java.lang.String: java.lang.String trim()>";
 "virtualinvoke <java.lang.String: java.lang.String trim()>"->"virtualinvoke <java.util.StringTokenizer: boolean hasMoreTokens()>";
 "virtualinvoke <java.util.StringTokenizer: boolean hasMoreTokens()>"->"virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>";
 "virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>"->"virtualinvoke <java.lang.String: java.lang.String trim()>";
 "virtualinvoke <java.lang.String: java.lang.String trim()>"->"virtualinvoke <java.lang.String: boolean equals(java.lang.Object)>";
 "virtualinvoke <java.lang.String: boolean equals(java.lang.Object)>"->"staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>";
 "staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>"->"goto load.r r0";
 "goto load.r r0"->"virtualinvoke <java.util.StringTokenizer: boolean hasMoreTokens()>";
 "virtualinvoke <java.util.StringTokenizer: boolean hasMoreTokens()>"->"virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>";
 "virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>"->"virtualinvoke <java.lang.String: java.lang.String trim()>";
 "virtualinvoke <java.lang.String: java.lang.String trim()>"->"virtualinvoke <java.lang.String: boolean equals(java.lang.Object)>";
 "virtualinvoke <java.lang.String: boolean equals(java.lang.Object)>"->"staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>";
 "staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>"->"goto load.r r0";
 "goto load.r r0"->"virtualinvoke <java.util.StringTokenizer: boolean hasMoreTokens()>";
 "virtualinvoke <java.util.StringTokenizer: boolean hasMoreTokens()>"->"virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>";
 "virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>"->"virtualinvoke <java.lang.String: java.lang.String trim()>";
 "virtualinvoke <java.lang.String: java.lang.String trim()>"->"virtualinvoke <java.lang.String: boolean equals(java.lang.Object)>";
 "virtualinvoke <java.lang.String: boolean equals(java.lang.Object)>"->"staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>";
 "staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>"->"goto load.r r0";
 "goto load.r r0"->"virtualinvoke <java.util.StringTokenizer: boolean hasMoreTokens()>";
 "virtualinvoke <java.util.StringTokenizer: boolean hasMoreTokens()>"->"virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>";
 "virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>"->"virtualinvoke <java.lang.String: java.lang.String trim()>";
 "virtualinvoke <java.lang.String: java.lang.String trim()>"->"virtualinvoke <java.lang.String: boolean equals(java.lang.Object)>";
 "virtualinvoke <java.lang.String: boolean equals(java.lang.Object)>"->"staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>";
 "staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>"->"goto load.r r0";
 "goto load.r r0"->"virtualinvoke <java.util.StringTokenizer: boolean hasMoreTokens()>";
 "virtualinvoke <java.util.StringTokenizer: boolean hasMoreTokens()>"->"virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>";
 "virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>"->"virtualinvoke <java.lang.String: java.lang.String trim()>";
 "virtualinvoke <java.lang.String: java.lang.String trim()>"->"virtualinvoke <java.lang.String: boolean equals(java.lang.Object)>";
 "virtualinvoke <java.lang.String: boolean equals(java.lang.Object)>"->"staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>";
 "staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>"->"goto load.r r0";
 "goto load.r r0"->"virtualinvoke <java.util.StringTokenizer: boolean hasMoreTokens()>";
 "virtualinvoke <java.util.StringTokenizer: boolean hasMoreTokens()>"->"virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>";
 "virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>"->"virtualinvoke <java.lang.String: java.lang.String trim()>";
 "virtualinvoke <java.lang.String: java.lang.String trim()>"->"virtualinvoke <java.lang.String: boolean equals(java.lang.Object)>";
 "virtualinvoke <java.lang.String: boolean equals(java.lang.Object)>"->"staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>";
 "staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>"->"goto load.r r0";
 "goto load.r r0"->"virtualinvoke <java.util.StringTokenizer: boolean hasMoreTokens()>";
 "virtualinvoke <java.util.StringTokenizer: boolean hasMoreTokens()>"->"virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>";
 "virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>"->"virtualinvoke <java.lang.String: java.lang.String trim()>";
 "virtualinvoke <java.lang.String: java.lang.String trim()>"->"virtualinvoke <java.lang.String: boolean equals(java.lang.Object)>";
 "virtualinvoke <java.lang.String: boolean equals(java.lang.Object)>"->"staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>";
 "staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>"->"goto inc.i i105 1";
 "goto inc.i i105 1"-> "staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>"->"goto inc.i i105 1";
 "staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>"->"goto load.r r0";
 "staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>"->"goto load.r r0";
 "staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>"->"goto load.r r0";
 "staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>"->"goto load.r r0";
 "staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>"->"goto load.r r0";
 "staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>"->"goto load.r r0";
 "ifne new java.util.StringTokenizer"->"new java.util.StringTokenizer";
 "new java.util.StringTokenizer"->"virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>";
 "virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>"->"specialinvoke <java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>";
 "specialinvoke <java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>"->"virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>";
 "virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>"->"virtualinvoke <java.lang.String: java.lang.String trim()>";
 "virtualinvoke <java.lang.String: java.lang.String trim()>"->"fieldput <AquariumCity: java.lang.String ImageName>";
 "fieldput <AquariumCity: java.lang.String ImageName>"->"fieldget <AquariumCity: java.awt.Image[] Screen>";
 "fieldget <AquariumCity: java.awt.Image[] Screen>"->"fieldget <AquariumCity: java.awt.Image[] Screen>";
 "fieldget <AquariumCity: java.awt.Image[] Screen>"->"virtualinvoke <java.applet.Applet: java.net.URL getDocumentBase()>";
 "virtualinvoke <java.applet.Applet: java.net.URL getDocumentBase()>"->"fieldget <AquariumCity: java.lang.String ImageName>";
 "fieldget <AquariumCity: java.lang.String ImageName>"->"virtualinvoke <java.applet.Applet: java.awt.Image getImage(java.net.URL,java.lang.String)>";
 "virtualinvoke <java.applet.Applet: java.awt.Image getImage(java.net.URL,java.lang.String)>"->"virtualinvoke <java.util.StringTokenizer: boolean hasMoreTokens()>";
 "virtualinvoke <java.util.StringTokenizer: boolean hasMoreTokens()>"->"virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>";
 "virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>"->"virtualinvoke <java.lang.String: java.lang.String trim()>";
 "virtualinvoke <java.lang.String: java.lang.String trim()>"->"virtualinvoke <java.lang.String: boolean equals(java.lang.Object)>";
 "virtualinvoke <java.lang.String: boolean equals(java.lang.Object)>"->"staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>";
 "staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>"->"goto load.r r0";
 "goto load.r r0"->"virtualinvoke <java.util.StringTokenizer: boolean hasMoreTokens()>";
 "virtualinvoke <java.util.StringTokenizer: boolean hasMoreTokens()>"->"virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>";
 "virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>"->"virtualinvoke <java.lang.String: java.lang.String trim()>";
 "virtualinvoke <java.lang.String: java.lang.String trim()>"->"virtualinvoke <java.lang.String: boolean equals(java.lang.Object)>";
 "virtualinvoke <java.lang.String: boolean equals(java.lang.Object)>"->"staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>";
 "staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>"->"goto load.r r0";
 "goto load.r r0"->"virtualinvoke <java.util.StringTokenizer: boolean hasMoreTokens()>";
 "virtualinvoke <java.util.StringTokenizer: boolean hasMoreTokens()>"->"virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>";
 "virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>"->"virtualinvoke <java.lang.String: java.lang.String trim()>";
 "virtualinvoke <java.lang.String: java.lang.String trim()>"->"virtualinvoke <java.lang.String: boolean equals(java.lang.Object)>";
 "virtualinvoke <java.lang.String: boolean equals(java.lang.Object)>"->"staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>";
 "staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>"->"goto load.r r0";
 "goto load.r r0"->"virtualinvoke <java.util.StringTokenizer: boolean hasMoreTokens()>";
 "virtualinvoke <java.util.StringTokenizer: boolean hasMoreTokens()>"->"virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>";
 "virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>"->"virtualinvoke <java.lang.String: java.lang.String trim()>";
 "virtualinvoke <java.lang.String: java.lang.String trim()>"->"virtualinvoke <java.lang.String: boolean equals(java.lang.Object)>";
 "virtualinvoke <java.lang.String: boolean equals(java.lang.Object)>"->"staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>";
 "staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>"->"goto load.r r0";
 "goto load.r r0"->"virtualinvoke <java.util.StringTokenizer: boolean hasMoreTokens()>";
 "virtualinvoke <java.util.StringTokenizer: boolean hasMoreTokens()>"->"virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>";
 "virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>"->"virtualinvoke <java.lang.String: java.lang.String trim()>";
 "virtualinvoke <java.lang.String: java.lang.String trim()>"->"virtualinvoke <java.lang.String: boolean equals(java.lang.Object)>";
 "virtualinvoke <java.lang.String: boolean equals(java.lang.Object)>"->"staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>";
 "staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>"->"goto load.r r0";
 "goto load.r r0"->"virtualinvoke <java.util.StringTokenizer: boolean hasMoreTokens()>";
 "virtualinvoke <java.util.StringTokenizer: boolean hasMoreTokens()>"->"virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>";
 "virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>"->"virtualinvoke <java.lang.String: java.lang.String trim()>";
 "virtualinvoke <java.lang.String: java.lang.String trim()>"->"virtualinvoke <java.lang.String: boolean equals(java.lang.Object)>";
 "virtualinvoke <java.lang.String: boolean equals(java.lang.Object)>"->"staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>";
 "staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>"->"goto load.r r0";
 "goto load.r r0"->"virtualinvoke <java.util.StringTokenizer: boolean hasMoreTokens()>";
 "virtualinvoke <java.util.StringTokenizer: boolean hasMoreTokens()>"->"virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>";
 "virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>"->"virtualinvoke <java.lang.String: java.lang.String trim()>";
 "virtualinvoke <java.lang.String: java.lang.String trim()>"->"virtualinvoke <java.lang.String: boolean equals(java.lang.Object)>";
 "virtualinvoke <java.lang.String: boolean equals(java.lang.Object)>"->"staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>";
 "staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>"->"goto load.r r0";
 "goto load.r r0"->"virtualinvoke <java.util.StringTokenizer: boolean hasMoreTokens()>";
 "virtualinvoke <java.util.StringTokenizer: boolean hasMoreTokens()>"->"virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>";
 "virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>"->"virtualinvoke <java.lang.String: java.lang.String trim()>";
 "virtualinvoke <java.lang.String: java.lang.String trim()>"->"virtualinvoke <java.lang.String: boolean equals(java.lang.Object)>";
 "virtualinvoke <java.lang.String: boolean equals(java.lang.Object)>"->"staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>";
 "staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>"->"goto load.r r0";
 "goto load.r r0"->"fieldget <AquariumCity: java.lang.String[] JumpToMove>";
 "fieldget <AquariumCity: java.lang.String[] JumpToMove>"->"fieldget <AquariumCity: java.lang.String JumpTo>";
 "fieldget <AquariumCity: java.lang.String JumpTo>"->"virtualinvoke <java.util.StringTokenizer: boolean hasMoreTokens()>";
 "virtualinvoke <java.util.StringTokenizer: boolean hasMoreTokens()>"->"virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>";
 "virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>"->"virtualinvoke <java.lang.String: java.lang.String trim()>";
 "virtualinvoke <java.lang.String: java.lang.String trim()>"->"virtualinvoke <java.lang.String: boolean equals(java.lang.Object)>";
 "virtualinvoke <java.lang.String: boolean equals(java.lang.Object)>"->"fieldget <AquariumCity: java.lang.String[] JumpToMove>";
 "fieldget <AquariumCity: java.lang.String[] JumpToMove>"->"goto load.r r0";
 "goto load.r r0"->"fieldget <AquariumCity: java.lang.String[] MoveMouseMessage>";
 "fieldget <AquariumCity: java.lang.String[] MoveMouseMessage>"->"virtualinvoke <java.util.StringTokenizer: boolean hasMoreTokens()>";
 "virtualinvoke <java.util.StringTokenizer: boolean hasMoreTokens()>"->"virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>";
 "virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>"->"virtualinvoke <java.lang.String: java.lang.String trim()>";
 "virtualinvoke <java.lang.String: java.lang.String trim()>"->"virtualinvoke <java.lang.String: boolean equals(java.lang.Object)>";
 "virtualinvoke <java.lang.String: boolean equals(java.lang.Object)>"->"fieldget <AquariumCity: java.lang.String[] MoveMouseMessage>";
 "fieldget <AquariumCity: java.lang.String[] MoveMouseMessage>"->"goto load.r r0";
 "goto load.r r0"->"virtualinvoke <java.util.StringTokenizer: boolean hasMoreTokens()>";
 "virtualinvoke <java.util.StringTokenizer: boolean hasMoreTokens()>"->"virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>";
 "virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>"->"virtualinvoke <java.lang.String: java.lang.String trim()>";
 "virtualinvoke <java.lang.String: java.lang.String trim()>"->"virtualinvoke <java.lang.String: boolean equals(java.lang.Object)>";
 "virtualinvoke <java.lang.String: boolean equals(java.lang.Object)>"->"staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>";
 "staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>"->"goto load.r r0";
 "goto load.r r0"->"virtualinvoke <java.util.StringTokenizer: boolean hasMoreTokens()>";
 "virtualinvoke <java.util.StringTokenizer: boolean hasMoreTokens()>"->"virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>";
 "virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>"->"virtualinvoke <java.lang.String: java.lang.String trim()>";
 "virtualinvoke <java.lang.String: java.lang.String trim()>"->"virtualinvoke <java.lang.String: boolean equals(java.lang.Object)>";
 "virtualinvoke <java.lang.String: boolean equals(java.lang.Object)>"->"staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>";
 "staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>"->"goto inc.i i105 1";
 "goto inc.i i105 1"-> "staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>"->"goto inc.i i105 1";
 "staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>"->"goto load.r r0";
"goto load.r r0";
"goto load.r r0";
 "staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>"->"goto load.r r0";
 "staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>"->"goto load.r r0";
 "staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>"->"goto load.r r0";
 "staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>"->"goto load.r r0";
 "staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>"->"goto load.r r0";
 "staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>"->"goto load.r r0";
 "staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>"->"goto load.r r0";
 "staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>"->"goto load.r r0";
 "ifne new java.util.StringTokenizer"->"new java.util.StringTokenizer";
 "new java.util.StringTokenizer"->"virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>";
 "virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>"->"specialinvoke <java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>";
 "specialinvoke <java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>"->"virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>";
 "virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>"->"virtualinvoke <java.lang.String: java.lang.String trim()>";
 "virtualinvoke <java.lang.String: java.lang.String trim()>"->"fieldput <AquariumCity: java.lang.String ImageName>";
 "fieldput <AquariumCity: java.lang.String ImageName>"->"fieldget <AquariumCity: java.awt.Image[] BackImg>";
 "fieldget <AquariumCity: java.awt.Image[] BackImg>"->"fieldget <AquariumCity: java.awt.Image[] BackImg>";
 "fieldget <AquariumCity: java.awt.Image[] BackImg>"->"virtualinvoke <java.applet.Applet: java.net.URL getDocumentBase()>";
 "virtualinvoke <java.applet.Applet: java.net.URL getDocumentBase()>"->"fieldget <AquariumCity: java.lang.String ImageName>";
 "fieldget <AquariumCity: java.lang.String ImageName>"->"virtualinvoke <java.applet.Applet: java.awt.Image getImage(java.net.URL,java.lang.String)>";
 "virtualinvoke <java.applet.Applet: java.awt.Image getImage(java.net.URL,java.lang.String)>"->"virtualinvoke <java.util.StringTokenizer: boolean hasMoreTokens()>";
 "virtualinvoke <java.util.StringTokenizer: boolean hasMoreTokens()>"->"virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>";
 "virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>"->"virtualinvoke <java.lang.String: java.lang.String trim()>";
 "virtualinvoke <java.lang.String: java.lang.String trim()>"->"virtualinvoke <java.lang.String: boolean equals(java.lang.Object)>";
 "virtualinvoke <java.lang.String: boolean equals(java.lang.Object)>"->"staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>";
 "staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>"->"goto load.r r0";
 "goto load.r r0"->"virtualinvoke <java.util.StringTokenizer: boolean hasMoreTokens()>";
 "virtualinvoke <java.util.StringTokenizer: boolean hasMoreTokens()>"->"virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>";
 "virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>"->"virtualinvoke <java.lang.String: java.lang.String trim()>";
 "virtualinvoke <java.lang.String: java.lang.String trim()>"->"virtualinvoke <java.lang.String: boolean equals(java.lang.Object)>";
 "virtualinvoke <java.lang.String: boolean equals(java.lang.Object)>"->"staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>";
 "staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>"->"goto load.r r0";
 "goto load.r r0"->"virtualinvoke <java.util.StringTokenizer: boolean hasMoreTokens()>";
 "virtualinvoke <java.util.StringTokenizer: boolean hasMoreTokens()>"->"virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>";
 "virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>"->"virtualinvoke <java.lang.String: java.lang.String trim()>";
 "virtualinvoke <java.lang.String: java.lang.String trim()>"->"virtualinvoke <java.lang.String: boolean equals(java.lang.Object)>";
 "virtualinvoke <java.lang.String: boolean equals(java.lang.Object)>"->"staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>";
 "staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>"->"goto load.r r0";
 "goto load.r r0"->"virtualinvoke <java.util.StringTokenizer: boolean hasMoreTokens()>";
 "virtualinvoke <java.util.StringTokenizer: boolean hasMoreTokens()>"->"virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>";
 "virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>"->"virtualinvoke <java.lang.String: java.lang.String trim()>";
 "virtualinvoke <java.lang.String: java.lang.String trim()>"->"virtualinvoke <java.lang.String: boolean equals(java.lang.Object)>";
 "virtualinvoke <java.lang.String: boolean equals(java.lang.Object)>"->"staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>";
 "staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>"->"goto load.r r0";
 "goto load.r r0"->"virtualinvoke <java.util.StringTokenizer: boolean hasMoreTokens()>";
 "virtualinvoke <java.util.StringTokenizer: boolean hasMoreTokens()>"->"virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>";
 "virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>"->"virtualinvoke <java.lang.String: java.lang.String trim()>";
 "virtualinvoke <java.lang.String: java.lang.String trim()>"->"virtualinvoke <java.lang.String: boolean equals(java.lang.Object)>";
 "virtualinvoke <java.lang.String: boolean equals(java.lang.Object)>"->"staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>";
 "staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>"->"goto load.r r0";
 "goto load.r r0"->"virtualinvoke <java.util.StringTokenizer: boolean hasMoreTokens()>";
 "virtualinvoke <java.util.StringTokenizer: boolean hasMoreTokens()>"->"virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>";
 "virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>"->"virtualinvoke <java.lang.String: java.lang.String trim()>";
 "virtualinvoke <java.lang.String: java.lang.String trim()>"->"virtualinvoke <java.lang.String: boolean equals(java.lang.Object)>";
 "virtualinvoke <java.lang.String: boolean equals(java.lang.Object)>"->"staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>";
 "staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>"->"goto load.r r0";
 "goto load.r r0"->"virtualinvoke <java.util.StringTokenizer: boolean hasMoreTokens()>";
 "virtualinvoke <java.util.StringTokenizer: boolean hasMoreTokens()>"->"virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>";
 "virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>"->"virtualinvoke <java.lang.String: java.lang.String trim()>";
 "virtualinvoke <java.lang.String: java.lang.String trim()>"->"virtualinvoke <java.lang.String: boolean equals(java.lang.Object)>";
 "virtualinvoke <java.lang.String: boolean equals(java.lang.Object)>"->"staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>";
 "staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>"->"goto load.r r0";
 "goto load.r r0"->"virtualinvoke <java.util.StringTokenizer: boolean hasMoreTokens()>";
 "virtualinvoke <java.util.StringTokenizer: boolean hasMoreTokens()>"->"virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>";
 "virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>"->"virtualinvoke <java.lang.String: java.lang.String trim()>";
 "virtualinvoke <java.lang.String: java.lang.String trim()>"->"virtualinvoke <java.lang.String: boolean equals(java.lang.Object)>";
 "virtualinvoke <java.lang.String: boolean equals(java.lang.Object)>"->"staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>";
 "staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>"->"goto load.r r0";
 "goto load.r r0"->"fieldget <AquariumCity: java.lang.String[] JumpToRayerMove>";
 "fieldget <AquariumCity: java.lang.String[] JumpToRayerMove>"->"fieldget <AquariumCity: java.lang.String JumpTo>";
 "fieldget <AquariumCity: java.lang.String JumpTo>"->"virtualinvoke <java.util.StringTokenizer: boolean hasMoreTokens()>";
 "virtualinvoke <java.util.StringTokenizer: boolean hasMoreTokens()>"->"virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>";
 "virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>"->"virtualinvoke <java.lang.String: java.lang.String trim()>";
 "virtualinvoke <java.lang.String: java.lang.String trim()>"->"virtualinvoke <java.lang.String: boolean equals(java.lang.Object)>";
 "virtualinvoke <java.lang.String: boolean equals(java.lang.Object)>"->"fieldget <AquariumCity: java.lang.String[] JumpToRayerMove>";
 "fieldget <AquariumCity: java.lang.String[] JumpToRayerMove>"->"goto load.r r0";
 "goto load.r r0"->"fieldget <AquariumCity: java.lang.String[] RayerMouseMessage>";
 "fieldget <AquariumCity: java.lang.String[] RayerMouseMessage>"->"virtualinvoke <java.util.StringTokenizer: boolean hasMoreTokens()>";
 "virtualinvoke <java.util.StringTokenizer: boolean hasMoreTokens()>"->"virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>";
 "virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>"->"virtualinvoke <java.lang.String: java.lang.String trim()>";
 "virtualinvoke <java.lang.String: java.lang.String trim()>"->"virtualinvoke <java.lang.String: boolean equals(java.lang.Object)>";
 "virtualinvoke <java.lang.String: boolean equals(java.lang.Object)>"->"fieldget <AquariumCity: java.lang.String[] RayerMouseMessage>";
 "fieldget <AquariumCity: java.lang.String[] RayerMouseMessage>"->"goto load.r r0";
 "goto load.r r0"->"virtualinvoke <java.util.StringTokenizer: boolean hasMoreTokens()>";
 "virtualinvoke <java.util.StringTokenizer: boolean hasMoreTokens()>"->"virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>";
 "virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>"->"virtualinvoke <java.lang.String: java.lang.String trim()>";
 "virtualinvoke <java.lang.String: java.lang.String trim()>"->"virtualinvoke <java.lang.String: boolean equals(java.lang.Object)>";
 "virtualinvoke <java.lang.String: boolean equals(java.lang.Object)>"->"staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>";
 "staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>"->"goto load.r r0";
 "goto load.r r0"->"virtualinvoke <java.util.StringTokenizer: boolean hasMoreTokens()>";
 "virtualinvoke <java.util.StringTokenizer: boolean hasMoreTokens()>"->"virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>";
 "virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>"->"virtualinvoke <java.lang.String: java.lang.String trim()>";
 "virtualinvoke <java.lang.String: java.lang.String trim()>"->"virtualinvoke <java.lang.String: boolean equals(java.lang.Object)>";
 "virtualinvoke <java.lang.String: boolean equals(java.lang.Object)>"->"staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>";
 "staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>"->"goto load.r r0";
 "goto load.r r0"->"virtualinvoke <java.util.StringTokenizer: boolean hasMoreTokens()>";
 "virtualinvoke <java.util.StringTokenizer: boolean hasMoreTokens()>"->"virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>";
 "virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>"->"virtualinvoke <java.lang.String: java.lang.String trim()>";
 "virtualinvoke <java.lang.String: java.lang.String trim()>"->"virtualinvoke <java.lang.String: boolean equals(java.lang.Object)>";
 "virtualinvoke <java.lang.String: boolean equals(java.lang.Object)>"->"staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>";
 "staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>"->"goto inc.i i105 1";
 "goto inc.i i105 1"-> "staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>"->"goto inc.i i105 1";
 "staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>"->"goto load.r r0";
 "staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>"->"goto load.r r0";
"goto load.r r0";
"goto load.r r0";
 "staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>"->"goto load.r r0";
 "staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>"->"goto load.r r0";
 "staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>"->"goto load.r r0";
 "staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>"->"goto load.r r0";
 "staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>"->"goto load.r r0";
 "staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>"->"goto load.r r0";
 "staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>"->"goto load.r r0";
 "staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>"->"goto load.r r0";
"staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>";
 "staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>"->"virtualinvoke <java.lang.Integer: int intValue()>";
 "virtualinvoke <java.lang.Integer: int intValue()>"->"staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>";
 "staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>"->"virtualinvoke <java.lang.Integer: int intValue()>";
 "virtualinvoke <java.lang.Integer: int intValue()>"->"staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>";
 "staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>"->"virtualinvoke <java.lang.Integer: int intValue()>";
 "virtualinvoke <java.lang.Integer: int intValue()>"->"staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>";
 "staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>"->"virtualinvoke <java.lang.Integer: int intValue()>";
 "virtualinvoke <java.lang.Integer: int intValue()>"->"staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>";
 "staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>"->"virtualinvoke <java.lang.Integer: int intValue()>";
 "virtualinvoke <java.lang.Integer: int intValue()>"->"staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>";
 "staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>"->"virtualinvoke <java.lang.Integer: int intValue()>";
 "virtualinvoke <java.lang.Integer: int intValue()>"->"staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>";
 "staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>"->"virtualinvoke <java.lang.Integer: int intValue()>";
 "virtualinvoke <java.lang.Integer: int intValue()>"->"staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>";
 "staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>"->"virtualinvoke <java.lang.Integer: int intValue()>";
 "virtualinvoke <java.lang.Integer: int intValue()>"->"staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>";
 "staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>"->"virtualinvoke <java.lang.Integer: int intValue()>";
 "virtualinvoke <java.lang.Integer: int intValue()>"->"staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>";
 "staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>"->"virtualinvoke <java.lang.Integer: int intValue()>";
 "virtualinvoke <java.lang.Integer: int intValue()>"->"staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>";
 "staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>"->"virtualinvoke <java.lang.Integer: int intValue()>";
 "virtualinvoke <java.lang.Integer: int intValue()>"->"staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>";
 "staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>"->"virtualinvoke <java.lang.Integer: int intValue()>";
 "virtualinvoke <java.lang.Integer: int intValue()>"->"staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>";
 "staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>"->"virtualinvoke <java.lang.Integer: int intValue()>";
 "virtualinvoke <java.lang.Integer: int intValue()>"->"staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>";
 "staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>"->"virtualinvoke <java.lang.Integer: int intValue()>";
 "virtualinvoke <java.lang.Integer: int intValue()>"->"staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>";
 "staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>"->"virtualinvoke <java.lang.Integer: int intValue()>";
 "virtualinvoke <java.lang.Integer: int intValue()>"->"fieldput <AquariumCity: java.lang.String Target>";
"fieldput <AquariumCity: java.lang.String JumpTo>";
"staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>";
 "staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>"->"virtualinvoke <java.lang.Integer: int intValue()>";
 "virtualinvoke <java.lang.Integer: int intValue()>"->"staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>";
 "staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>"->"virtualinvoke <java.lang.Integer: int intValue()>";
 "virtualinvoke <java.lang.Integer: int intValue()>"->"staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>";
 "staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>"->"virtualinvoke <java.lang.Integer: int intValue()>";
 "virtualinvoke <java.lang.Integer: int intValue()>"->"staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>";
 "staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>"->"virtualinvoke <java.lang.Integer: int intValue()>";
 "virtualinvoke <java.lang.Integer: int intValue()>"->"staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>";
 "staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>"->"virtualinvoke <java.lang.Integer: int intValue()>";
 "virtualinvoke <java.lang.Integer: int intValue()>"->"virtualinvoke <java.lang.String: boolean equals(java.lang.Object)>";
 "virtualinvoke <java.lang.String: boolean equals(java.lang.Object)>"->"goto load.r r0";
"virtualinvoke <java.lang.String: boolean equals(java.lang.Object)>";
 "virtualinvoke <java.lang.String: boolean equals(java.lang.Object)>"->"goto load.r r0";
"virtualinvoke <java.lang.String: boolean equals(java.lang.Object)>";
 "virtualinvoke <java.lang.String: boolean equals(java.lang.Object)>"->"goto load.r r0";
}
