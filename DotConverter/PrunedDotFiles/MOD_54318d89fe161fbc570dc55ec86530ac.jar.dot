digraph "" {
"fieldput <Counter: java.awt.Color[] StarColor>";
 "fieldput <Counter: java.awt.Color[] StarColor>"->"goto load.i r1";
 "goto load.i r1"->"virtualinvoke <java.awt.Component: java.awt.Dimension size()>";
 "virtualinvoke <java.awt.Component: java.awt.Dimension size()>"->"fieldget <java.awt.Dimension: int width>";
 "fieldget <java.awt.Dimension: int width>"->"virtualinvoke <java.awt.Component: java.awt.Dimension size()>";
 "virtualinvoke <java.awt.Component: java.awt.Dimension size()>"->"fieldget <java.awt.Dimension: int height>";
 "fieldget <java.awt.Dimension: int height>"->"virtualinvoke <java.awt.Component: java.awt.Image createImage(int,int)>";
 "virtualinvoke <java.awt.Component: java.awt.Image createImage(int,int)>"->"fieldput <Counter: java.awt.Image backBuffer>";
 "fieldput <Counter: java.awt.Image backBuffer>"->"fieldget <Counter: java.awt.Image backBuffer>";
 "fieldget <Counter: java.awt.Image backBuffer>"->"virtualinvoke <java.awt.Image: java.awt.Graphics getGraphics()>";
 "virtualinvoke <java.awt.Image: java.awt.Graphics getGraphics()>"->"fieldput <Counter: java.awt.Graphics offScreen>";
 "fieldput <Counter: java.awt.Graphics offScreen>"->"new java.lang.Long";
 "new java.lang.Long"->"virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>";
 "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"->"specialinvoke <java.lang.Long: void <init>(java.lang.String)>";
 "specialinvoke <java.lang.Long: void <init>(java.lang.String)>"->"virtualinvoke <java.lang.Long: long longValue()>";
 "virtualinvoke <java.lang.Long: long longValue()>"->"virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>";
 "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"->"goto load.r r0";
 "goto load.r r0"->"virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>";
 "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"->"virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>";
 "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"->"virtualinvoke <java.lang.String: int compareTo(java.lang.String)>";
 "virtualinvoke <java.lang.String: int compareTo(java.lang.String)>"->"goto load.r r0";
 "goto load.r r0"->"specialinvoke <CountInfo: void <init>(boolean,boolean,long,java.applet.Applet)>";
 "specialinvoke <CountInfo: void <init>(boolean,boolean,long,java.applet.Applet)>"->"virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>";
 "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"->"fieldput <Counter: java.lang.String digitDirectory>";
 "fieldput <Counter: java.lang.String digitDirectory>"->"virtualinvoke <CountInfo: java.lang.String getDigitDirectory()>";
 "virtualinvoke <CountInfo: java.lang.String getDigitDirectory()>"->"fieldput <Counter: java.lang.String digitDirectory>";
 "fieldput <Counter: java.lang.String digitDirectory>"->"fieldget <Counter: java.lang.String digitDirectory>";
 "fieldget <Counter: java.lang.String digitDirectory>"->"specialinvoke <Digits: void <init>(java.applet.Applet,java.lang.String)>";
 "specialinvoke <Digits: void <init>(java.applet.Applet,java.lang.String)>"->"virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>";
 "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"->"fieldput <Counter: java.lang.String bgColorString>";
 "fieldput <Counter: java.lang.String bgColorString>"->"fieldget <Counter: java.lang.String bgColorString>";
 "fieldget <Counter: java.lang.String bgColorString>"->"new java.lang.String";
 "new java.lang.String"->"specialinvoke <java.lang.String: void <init>(java.lang.String)>";
 "specialinvoke <java.lang.String: void <init>(java.lang.String)>"->"fieldput <Counter: java.lang.String bgColorString>";
 "fieldput <Counter: java.lang.String bgColorString>"->"virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>";
 "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"->"new java.lang.String";
 "new java.lang.String"->"specialinvoke <java.lang.String: void <init>(java.lang.String)>";
 "specialinvoke <java.lang.String: void <init>(java.lang.String)>"->"fieldget <Counter: java.lang.String bgColorString>";
 "fieldget <Counter: java.lang.String bgColorString>"->"virtualinvoke <Counter: java.awt.Color convertColor(java.lang.String)>";
 "virtualinvoke <Counter: java.awt.Color convertColor(java.lang.String)>"->"fieldput <Counter: java.awt.Color bgColor>";
 "fieldput <Counter: java.awt.Color bgColor>"->"virtualinvoke <Counter: java.awt.Color convertColor(java.lang.String)>";
 "virtualinvoke <Counter: java.awt.Color convertColor(java.lang.String)>"->"fieldput <Counter: java.awt.Color fontColor>";
 "fieldput <Counter: java.awt.Color fontColor>"->"fieldget <Counter: java.awt.Color bgColor>";
 "fieldget <Counter: java.awt.Color bgColor>"->"virtualinvoke <java.awt.Component: void setBackground(java.awt.Color)>";
 "virtualinvoke <java.awt.Component: void setBackground(java.awt.Color)>"->"virtualinvoke <java.awt.Component: java.awt.Dimension size()>";
 "virtualinvoke <java.awt.Component: java.awt.Dimension size()>"->"fieldget <java.awt.Dimension: int width>";
 "fieldget <java.awt.Dimension: int width>"->"virtualinvoke <java.awt.Component: java.awt.Dimension size()>";
 "virtualinvoke <java.awt.Component: java.awt.Dimension size()>"->"fieldget <java.awt.Dimension: int height>";
 "fieldget <java.awt.Dimension: int height>"->"new java.awt.Font";
 "new java.awt.Font"->"specialinvoke <java.awt.Font: void <init>(java.lang.String,int,int)>";
 "specialinvoke <java.awt.Font: void <init>(java.lang.String,int,int)>"->"fieldput <Counter: java.awt.Font textFont>";
 "fieldput <Counter: java.awt.Font textFont>"->"return";
"virtualinvoke <java.lang.String: int compareTo(java.lang.String)>";
 "virtualinvoke <java.lang.String: int compareTo(java.lang.String)>"->"goto load.r r0";
"staticinvoke <java.lang.Math: double random()>";
 "staticinvoke <java.lang.Math: double random()>"->"virtualinvoke <java.awt.Component: java.awt.Dimension size()>";
 "virtualinvoke <java.awt.Component: java.awt.Dimension size()>"->"fieldget <java.awt.Dimension: int width>";
 "fieldget <java.awt.Dimension: int width>"->"staticinvoke <java.lang.Math: double random()>";
 "staticinvoke <java.lang.Math: double random()>"->"virtualinvoke <java.awt.Component: java.awt.Dimension size()>";
 "virtualinvoke <java.awt.Component: java.awt.Dimension size()>"->"fieldget <java.awt.Dimension: int height>";
 "fieldget <java.awt.Dimension: int height>"->"staticinvoke <java.lang.Math: double random()>";
 "staticinvoke <java.lang.Math: double random()>"->"staticinvoke <java.lang.Math: double random()>";
 "staticinvoke <java.lang.Math: double random()>"->"fieldget <Counter: java.awt.Color[] StarColor>";
 "fieldget <Counter: java.awt.Color[] StarColor>"->"new java.awt.Color";
 "new java.awt.Color"->"specialinvoke <java.awt.Color: void <init>(int,int,int)>";
 "specialinvoke <java.awt.Color: void <init>(int,int,int)>"->}
