// 
// Decompiled by Procyon v0.5.30
// 

package org.jruby.gen;

import org.jruby.internal.runtime.methods.JavaMethod;
import org.jruby.Ruby;
import org.jruby.RubyClass;
import org.jruby.RubyEtc$s$1$0$getpwnam;
import org.jruby.RubyEtc$s$0$0$getlogin;
import org.jruby.RubyEtc$s$0$1$getgrgid;
import org.jruby.RubyEtc$s$0$0$endgrent;
import org.jruby.RubyEtc$s$0$0$setpwent;
import org.jruby.RubyEtc$s$0$1$getpwuid;
import org.jruby.RubyEtc$s$0$0$passwd;
import org.jruby.RubyEtc$s$0$0$getpwent;
import org.jruby.RubyEtc$s$0$0$endpwent;
import org.jruby.RubyEtc$s$0$0$getgrent;
import org.jruby.runtime.Block;
import org.jruby.RubyEtc$s$0$0$group;
import org.jruby.RubyEtc$s$0$0$setgrent;
import org.jruby.internal.runtime.methods.DynamicMethod;
import org.jruby.runtime.builtin.IRubyObject;
import org.jruby.RubyEtc;
import org.jruby.internal.runtime.methods.CallConfiguration;
import org.jruby.RubyEtc$s$1$0$getgrnam;
import org.jruby.runtime.Visibility;
import org.jruby.RubyModule;
import org.jruby.anno.TypePopulator;

public class org$jruby$RubyEtc$Populator extends TypePopulator
{
    public void populate(final RubyModule cls, final Class clazz) {
        final RubyClass singletonClass = cls.getSingletonClass();
        final Ruby runtime = cls.getRuntime();
        JavaMethod javaMethod = new RubyEtc$s$1$0$getgrnam(cls, Visibility.PUBLIC);
        TypePopulator.populateMethod(javaMethod, 1, "getgrnam", true, CallConfiguration.FrameNoneScopeNone, false);
        javaMethod.setNativeCall(RubyEtc.class, "getgrnam", IRubyObject.class, new Class[] { IRubyObject.class, IRubyObject.class }, true);
        cls.addMethodAtBootTimeOnly("getgrnam", javaMethod);
        DynamicMethod moduleMethod = TypePopulator.populateModuleMethod(cls, javaMethod);
        singletonClass.addMethodAtBootTimeOnly("getgrnam", moduleMethod);
        javaMethod = new RubyEtc$s$0$0$setgrent(cls, Visibility.PUBLIC);
        TypePopulator.populateMethod(javaMethod, 0, "setgrent", true, CallConfiguration.FrameNoneScopeNone, false);
        javaMethod.setNativeCall(RubyEtc.class, "setgrent", IRubyObject.class, new Class[] { IRubyObject.class }, true);
        cls.addMethodAtBootTimeOnly("setgrent", javaMethod);
        moduleMethod = TypePopulator.populateModuleMethod(cls, javaMethod);
        singletonClass.addMethodAtBootTimeOnly("setgrent", moduleMethod);
        javaMethod = new RubyEtc$s$0$0$group(cls, Visibility.PUBLIC);
        TypePopulator.populateMethod(javaMethod, 0, "group", true, CallConfiguration.FrameNoneScopeNone, false);
        javaMethod.setNativeCall(RubyEtc.class, "group", IRubyObject.class, new Class[] { IRubyObject.class, Block.class }, true);
        cls.addMethodAtBootTimeOnly("group", javaMethod);
        moduleMethod = TypePopulator.populateModuleMethod(cls, javaMethod);
        singletonClass.addMethodAtBootTimeOnly("group", moduleMethod);
        javaMethod = new RubyEtc$s$0$0$getgrent(cls, Visibility.PUBLIC);
        TypePopulator.populateMethod(javaMethod, 0, "getgrent", true, CallConfiguration.FrameNoneScopeNone, false);
        javaMethod.setNativeCall(RubyEtc.class, "getgrent", IRubyObject.class, new Class[] { IRubyObject.class }, true);
        cls.addMethodAtBootTimeOnly("getgrent", javaMethod);
        moduleMethod = TypePopulator.populateModuleMethod(cls, javaMethod);
        singletonClass.addMethodAtBootTimeOnly("getgrent", moduleMethod);
        javaMethod = new RubyEtc$s$0$0$endpwent(cls, Visibility.PUBLIC);
        TypePopulator.populateMethod(javaMethod, 0, "endpwent", true, CallConfiguration.FrameNoneScopeNone, false);
        javaMethod.setNativeCall(RubyEtc.class, "endpwent", IRubyObject.class, new Class[] { IRubyObject.class }, true);
        cls.addMethodAtBootTimeOnly("endpwent", javaMethod);
        moduleMethod = TypePopulator.populateModuleMethod(cls, javaMethod);
        singletonClass.addMethodAtBootTimeOnly("endpwent", moduleMethod);
        javaMethod = new RubyEtc$s$0$0$getpwent(cls, Visibility.PUBLIC);
        TypePopulator.populateMethod(javaMethod, 0, "getpwent", true, CallConfiguration.FrameNoneScopeNone, false);
        javaMethod.setNativeCall(RubyEtc.class, "getpwent", IRubyObject.class, new Class[] { IRubyObject.class }, true);
        cls.addMethodAtBootTimeOnly("getpwent", javaMethod);
        moduleMethod = TypePopulator.populateModuleMethod(cls, javaMethod);
        singletonClass.addMethodAtBootTimeOnly("getpwent", moduleMethod);
        javaMethod = new RubyEtc$s$0$0$passwd(cls, Visibility.PUBLIC);
        TypePopulator.populateMethod(javaMethod, 0, "passwd", true, CallConfiguration.FrameNoneScopeNone, false);
        javaMethod.setNativeCall(RubyEtc.class, "passwd", IRubyObject.class, new Class[] { IRubyObject.class, Block.class }, true);
        cls.addMethodAtBootTimeOnly("passwd", javaMethod);
        moduleMethod = TypePopulator.populateModuleMethod(cls, javaMethod);
        singletonClass.addMethodAtBootTimeOnly("passwd", moduleMethod);
        javaMethod = new RubyEtc$s$0$1$getpwuid(cls, Visibility.PUBLIC);
        TypePopulator.populateMethod(javaMethod, -1, "getpwuid", true, CallConfiguration.FrameNoneScopeNone, false);
        javaMethod.setNativeCall(RubyEtc.class, "getpwuid", IRubyObject.class, new Class[] { IRubyObject.class, IRubyObject[].class }, true);
        cls.addMethodAtBootTimeOnly("getpwuid", javaMethod);
        moduleMethod = TypePopulator.populateModuleMethod(cls, javaMethod);
        singletonClass.addMethodAtBootTimeOnly("getpwuid", moduleMethod);
        javaMethod = new RubyEtc$s$0$0$setpwent(cls, Visibility.PUBLIC);
        TypePopulator.populateMethod(javaMethod, 0, "setpwent", true, CallConfiguration.FrameNoneScopeNone, false);
        javaMethod.setNativeCall(RubyEtc.class, "setpwent", IRubyObject.class, new Class[] { IRubyObject.class }, true);
        cls.addMethodAtBootTimeOnly("setpwent", javaMethod);
        moduleMethod = TypePopulator.populateModuleMethod(cls, javaMethod);
        singletonClass.addMethodAtBootTimeOnly("setpwent", moduleMethod);
        javaMethod = new RubyEtc$s$0$0$endgrent(cls, Visibility.PUBLIC);
        TypePopulator.populateMethod(javaMethod, 0, "endgrent", true, CallConfiguration.FrameNoneScopeNone, false);
        javaMethod.setNativeCall(RubyEtc.class, "endgrent", IRubyObject.class, new Class[] { IRubyObject.class }, true);
        cls.addMethodAtBootTimeOnly("endgrent", javaMethod);
        moduleMethod = TypePopulator.populateModuleMethod(cls, javaMethod);
        singletonClass.addMethodAtBootTimeOnly("endgrent", moduleMethod);
        javaMethod = new RubyEtc$s$0$1$getgrgid(cls, Visibility.PUBLIC);
        TypePopulator.populateMethod(javaMethod, -1, "getgrgid", true, CallConfiguration.FrameNoneScopeNone, false);
        javaMethod.setNativeCall(RubyEtc.class, "getgrgid", IRubyObject.class, new Class[] { IRubyObject.class, IRubyObject[].class }, true);
        cls.addMethodAtBootTimeOnly("getgrgid", javaMethod);
        moduleMethod = TypePopulator.populateModuleMethod(cls, javaMethod);
        singletonClass.addMethodAtBootTimeOnly("getgrgid", moduleMethod);
        javaMethod = new RubyEtc$s$0$0$getlogin(cls, Visibility.PUBLIC);
        TypePopulator.populateMethod(javaMethod, 0, "getlogin", true, CallConfiguration.FrameNoneScopeNone, false);
        javaMethod.setNativeCall(RubyEtc.class, "getlogin", IRubyObject.class, new Class[] { IRubyObject.class }, true);
        cls.addMethodAtBootTimeOnly("getlogin", javaMethod);
        moduleMethod = TypePopulator.populateModuleMethod(cls, javaMethod);
        singletonClass.addMethodAtBootTimeOnly("getlogin", moduleMethod);
        javaMethod = new RubyEtc$s$1$0$getpwnam(cls, Visibility.PUBLIC);
        TypePopulator.populateMethod(javaMethod, 1, "getpwnam", true, CallConfiguration.FrameNoneScopeNone, false);
        javaMethod.setNativeCall(RubyEtc.class, "getpwnam", IRubyObject.class, new Class[] { IRubyObject.class, IRubyObject.class }, true);
        cls.addMethodAtBootTimeOnly("getpwnam", javaMethod);
        moduleMethod = TypePopulator.populateModuleMethod(cls, javaMethod);
        singletonClass.addMethodAtBootTimeOnly("getpwnam", moduleMethod);
        runtime.addBoundMethod("org.jruby.RubyEtc.getgrnam", "getgrnam");
        runtime.addBoundMethod("org.jruby.RubyEtc.setgrent", "setgrent");
        runtime.addBoundMethod("org.jruby.RubyEtc.group", "group");
        runtime.addBoundMethod("org.jruby.RubyEtc.getgrent", "getgrent");
        runtime.addBoundMethod("org.jruby.RubyEtc.endpwent", "endpwent");
        runtime.addBoundMethod("org.jruby.RubyEtc.getpwent", "getpwent");
        runtime.addBoundMethod("org.jruby.RubyEtc.passwd", "passwd");
        runtime.addBoundMethod("org.jruby.RubyEtc.getpwuid", "getpwuid");
        runtime.addBoundMethod("org.jruby.RubyEtc.setpwent", "setpwent");
        runtime.addBoundMethod("org.jruby.RubyEtc.endgrent", "endgrent");
        runtime.addBoundMethod("org.jruby.RubyEtc.getgrgid", "getgrgid");
        runtime.addBoundMethod("org.jruby.RubyEtc.getlogin", "getlogin");
        runtime.addBoundMethod("org.jruby.RubyEtc.getpwnam", "getpwnam");
    }
}
