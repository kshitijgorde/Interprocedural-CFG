digraph "" {
"virtualinvoke <java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>";
 "virtualinvoke <java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>"->"staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>";
 "staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>"->"virtualinvoke <java.lang.String: int indexOf(java.lang.String)>";
 "virtualinvoke <java.lang.String: int indexOf(java.lang.String)>"->"virtualinvoke <java.lang.String: int indexOf(java.lang.String)>";
 "virtualinvoke <java.lang.String: int indexOf(java.lang.String)>"->"virtualinvoke <java.lang.String: int indexOf(java.lang.String)>";
 "virtualinvoke <java.lang.String: int indexOf(java.lang.String)>"->"virtualinvoke <java.lang.String: int indexOf(java.lang.String)>";
 "virtualinvoke <java.lang.String: int indexOf(java.lang.String)>"->"virtualinvoke <java.lang.String: int indexOf(java.lang.String)>";
 "virtualinvoke <java.lang.String: int indexOf(java.lang.String)>"->"virtualinvoke <java.lang.String: int indexOf(java.lang.String)>";
 "virtualinvoke <java.lang.String: int indexOf(java.lang.String)>"->"virtualinvoke <java.lang.String: int indexOf(java.lang.String)>";
 "virtualinvoke <java.lang.String: int indexOf(java.lang.String)>"->"virtualinvoke <java.lang.String: int indexOf(java.lang.String)>";
 "virtualinvoke <java.lang.String: int indexOf(java.lang.String)>"->"virtualinvoke <java.lang.String: int indexOf(java.lang.String)>";
 "virtualinvoke <java.lang.String: int indexOf(java.lang.String)>"->"virtualinvoke <java.lang.String: int indexOf(java.lang.String)>";
 "virtualinvoke <java.lang.String: int indexOf(java.lang.String)>"->"virtualinvoke <java.lang.String: int indexOf(java.lang.String)>";
 "virtualinvoke <java.lang.String: int indexOf(java.lang.String)>"->"virtualinvoke <java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>";
 "virtualinvoke <java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>"->"staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>";
 "staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>"->"virtualinvoke <java.lang.String: java.lang.String toLowerCase()>";
 "virtualinvoke <java.lang.String: java.lang.String toLowerCase()>"->"virtualinvoke <java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>";
 "virtualinvoke <java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>"->"virtualinvoke <java.lang.String: int indexOf(java.lang.String)>";
 "virtualinvoke <java.lang.String: int indexOf(java.lang.String)>"->"iflt return";
 "iflt return"->"staticinvoke <KAK.NED.sexxxy: java.lang.String repeat(char,int)>";
 "staticinvoke <KAK.NED.sexxxy: java.lang.String repeat(char,int)>"->"goto load.r r56";
 "goto load.r r56"->"virtualinvoke <java.lang.String: int indexOf(java.lang.String)>";
 "virtualinvoke <java.lang.String: int indexOf(java.lang.String)>"->"staticinvoke <KAK.NED.sexxxy: java.lang.String repeat(char,int)>";
 "staticinvoke <KAK.NED.sexxxy: java.lang.String repeat(char,int)>"->"new java.lang.StringBuilder";
 "new java.lang.StringBuilder"->"specialinvoke <java.lang.StringBuilder: void <init>()>";
 "specialinvoke <java.lang.StringBuilder: void <init>()>"->"virtualinvoke <java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>";
 "virtualinvoke <java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>"->"virtualinvoke <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
 "virtualinvoke <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>"->"virtualinvoke <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
 "virtualinvoke <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>"->"virtualinvoke <java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>";
 "virtualinvoke <java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>"->"virtualinvoke <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
 "virtualinvoke <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>"->"virtualinvoke <java.lang.StringBuilder: java.lang.String toString()>";
 "virtualinvoke <java.lang.StringBuilder: java.lang.String toString()>"->"goto new java.net.URL";
 "goto new java.net.URL"->"new java.net.URL";
 "new java.net.URL"->"specialinvoke <java.net.URL: void <init>(java.lang.String)>";
 "specialinvoke <java.net.URL: void <init>(java.lang.String)>"->"virtualinvoke <java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>";
 "virtualinvoke <java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>"->"virtualinvoke <KAK.NED.sexxxy: java.lang.String getParameter(java.lang.String)>";
 "virtualinvoke <KAK.NED.sexxxy: java.lang.String getParameter(java.lang.String)>"->"virtualinvoke <java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>";
 "virtualinvoke <java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>"->"virtualinvoke <KAK.NED.sexxxy: java.nio.IntBuffer[] CP4CKR0XSPR4Y(java.lang.String,java.lang.String)>";
 "virtualinvoke <KAK.NED.sexxxy: java.nio.IntBuffer[] CP4CKR0XSPR4Y(java.lang.String,java.lang.String)>"->"fieldput <KAK.NED.sexxxy: java.nio.IntBuffer[] mem>";
 "fieldput <KAK.NED.sexxxy: java.nio.IntBuffer[] mem>"->"staticinvoke <javax.sound.midi.MidiSystem: javax.sound.midi.Sequencer getSequencer()>";
 "staticinvoke <javax.sound.midi.MidiSystem: javax.sound.midi.Sequencer getSequencer()>"->"staticinvoke <javax.sound.midi.MidiSystem: javax.sound.midi.Soundbank getSoundbank(java.net.URL)>";
 "staticinvoke <javax.sound.midi.MidiSystem: javax.sound.midi.Soundbank getSoundbank(java.net.URL)>"->"staticinvoke <javax.sound.midi.MidiSystem: javax.sound.midi.Sequencer getSequencer()>";
 "staticinvoke <javax.sound.midi.MidiSystem: javax.sound.midi.Sequencer getSequencer()>"->"staticinvoke <java.lang.Thread: void sleep(long)>";
 "staticinvoke <java.lang.Thread: void sleep(long)>"->"goto push 10L";
 "staticinvoke <java.lang.Thread: void sleep(long)>"->"staticget <java.lang.System: java.io.PrintStream out>";
 "staticget <java.lang.System: java.io.PrintStream out>"->"virtualinvoke <java.io.PrintStream: void println(java.lang.Object)>";
 "virtualinvoke <java.io.PrintStream: void println(java.lang.Object)>"->"goto return";
 "goto return"->"return";
"staticinvoke <KAK.NED.sexxxy: java.lang.String repeat(char,int)>";
 "staticinvoke <KAK.NED.sexxxy: java.lang.String repeat(char,int)>"->"new java.lang.StringBuilder";
 "new java.lang.StringBuilder"->"specialinvoke <java.lang.StringBuilder: void <init>()>";
 "specialinvoke <java.lang.StringBuilder: void <init>()>"->"virtualinvoke <java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>";
 "virtualinvoke <java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>"->"virtualinvoke <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
 "virtualinvoke <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>"->"virtualinvoke <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
 "virtualinvoke <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>"->"virtualinvoke <java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>";
 "virtualinvoke <java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>"->"virtualinvoke <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
 "virtualinvoke <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>"->"virtualinvoke <java.lang.StringBuilder: java.lang.String toString()>";
 "virtualinvoke <java.lang.StringBuilder: java.lang.String toString()>"-> "iflt return"->"return";
"ifcmpeq.r new java.io.ObjectInputStream";
 "ifcmpeq.r new java.io.ObjectInputStream"->"ifcmpeq.r new java.io.ObjectInputStream";
 "ifcmpeq.r new java.io.ObjectInputStream"->"virtualinvoke <java.lang.String: int indexOf(java.lang.String)>";
 "virtualinvoke <java.lang.String: int indexOf(java.lang.String)>"->"ifcmpne.i new java.io.ObjectInputStream";
 "ifcmpne.i new java.io.ObjectInputStream"->"virtualinvoke <java.lang.String: int indexOf(java.lang.String)>";
 "virtualinvoke <java.lang.String: int indexOf(java.lang.String)>"->"ifcmpne.i new java.io.ObjectInputStream";
 "ifcmpne.i new java.io.ObjectInputStream"->"virtualinvoke <java.lang.String: int indexOf(java.lang.String)>";
 "virtualinvoke <java.lang.String: int indexOf(java.lang.String)>"->"ifcmpne.i new java.io.ObjectInputStream";
 "ifcmpne.i new java.io.ObjectInputStream"->"virtualinvoke <java.lang.String: int indexOf(java.lang.String)>";
 "virtualinvoke <java.lang.String: int indexOf(java.lang.String)>"->"ifcmpne.i new java.io.ObjectInputStream";
 "ifcmpne.i new java.io.ObjectInputStream"->"virtualinvoke <java.lang.String: int indexOf(java.lang.String)>";
 "virtualinvoke <java.lang.String: int indexOf(java.lang.String)>"->"ifcmpne.i new java.io.ObjectInputStream";
 "ifcmpne.i new java.io.ObjectInputStream"->"virtualinvoke <java.lang.String: int indexOf(java.lang.String)>";
 "virtualinvoke <java.lang.String: int indexOf(java.lang.String)>"->"ifcmpne.i new java.io.ObjectInputStream";
 "ifcmpne.i new java.io.ObjectInputStream"->"virtualinvoke <java.lang.String: int indexOf(java.lang.String)>";
 "virtualinvoke <java.lang.String: int indexOf(java.lang.String)>"->"ifcmpne.i new java.io.ObjectInputStream";
 "ifcmpne.i new java.io.ObjectInputStream"->"virtualinvoke <java.lang.String: int indexOf(java.lang.String)>";
 "virtualinvoke <java.lang.String: int indexOf(java.lang.String)>"->"ifcmpne.i new java.io.ObjectInputStream";
 "ifcmpne.i new java.io.ObjectInputStream"->"virtualinvoke <java.lang.String: int indexOf(java.lang.String)>";
 "virtualinvoke <java.lang.String: int indexOf(java.lang.String)>"->"ifcmpne.i new java.io.ObjectInputStream";
 "ifcmpne.i new java.io.ObjectInputStream"->"virtualinvoke <java.lang.String: int indexOf(java.lang.String)>";
 "virtualinvoke <java.lang.String: int indexOf(java.lang.String)>"->"ifcmpne.i new java.io.ObjectInputStream";
 "ifcmpne.i new java.io.ObjectInputStream"->"virtualinvoke <java.lang.String: int indexOf(java.lang.String)>";
 "virtualinvoke <java.lang.String: int indexOf(java.lang.String)>"->"ifcmpne.i new java.io.ObjectInputStream";
 "ifcmpne.i new java.io.ObjectInputStream"->"virtualinvoke <java.lang.String: int indexOf(java.lang.String)>";
 "virtualinvoke <java.lang.String: int indexOf(java.lang.String)>"->"ifcmpne.i new java.io.ObjectInputStream";
 "ifcmpne.i new java.io.ObjectInputStream"->"virtualinvoke <java.lang.String: int indexOf(java.lang.String)>";
 "virtualinvoke <java.lang.String: int indexOf(java.lang.String)>"->"ifcmpne.i new java.io.ObjectInputStream";
 "ifcmpne.i new java.io.ObjectInputStream"->"virtualinvoke <java.lang.String: int indexOf(java.lang.String)>";
 "virtualinvoke <java.lang.String: int indexOf(java.lang.String)>"->"ifcmpne.i new java.io.ObjectInputStream";
 "ifcmpne.i new java.io.ObjectInputStream"->"virtualinvoke <java.lang.String: int indexOf(java.lang.String)>";
 "virtualinvoke <java.lang.String: int indexOf(java.lang.String)>"->"ifcmpne.i new java.io.ObjectInputStream";
 "ifcmpne.i new java.io.ObjectInputStream"->"virtualinvoke <java.lang.String: int indexOf(java.lang.String)>";
 "virtualinvoke <java.lang.String: int indexOf(java.lang.String)>"->"ifcmpne.i new java.io.ObjectInputStream";
 "ifcmpne.i new java.io.ObjectInputStream"->"virtualinvoke <java.lang.String: int indexOf(java.lang.String)>";
 "virtualinvoke <java.lang.String: int indexOf(java.lang.String)>"->"ifcmpne.i new java.io.ObjectInputStream";
 "ifcmpne.i new java.io.ObjectInputStream"->"virtualinvoke <java.lang.String: int indexOf(java.lang.String)>";
 "virtualinvoke <java.lang.String: int indexOf(java.lang.String)>"->"ifcmpne.i new java.io.ObjectInputStream";
 "ifcmpne.i new java.io.ObjectInputStream"->"virtualinvoke <java.lang.String: int indexOf(java.lang.String)>";
 "virtualinvoke <java.lang.String: int indexOf(java.lang.String)>"->"ifcmpne.i new java.io.ObjectInputStream";
 "ifcmpne.i new java.io.ObjectInputStream"->"virtualinvoke <java.lang.String: int indexOf(java.lang.String)>";
 "virtualinvoke <java.lang.String: int indexOf(java.lang.String)>"->"ifcmpne.i new java.io.ObjectInputStream";
 "ifcmpne.i new java.io.ObjectInputStream"->"virtualinvoke <java.lang.String: int indexOf(java.lang.String)>";
 "virtualinvoke <java.lang.String: int indexOf(java.lang.String)>"->"ifcmpne.i new java.io.ObjectInputStream";
 "ifcmpne.i new java.io.ObjectInputStream"->"virtualinvoke <java.lang.String: int indexOf(java.lang.String)>";
 "virtualinvoke <java.lang.String: int indexOf(java.lang.String)>"->"ifcmpne.i new java.io.ObjectInputStream";
 "ifcmpne.i new java.io.ObjectInputStream"->"virtualinvoke <java.lang.String: int indexOf(java.lang.String)>";
 "virtualinvoke <java.lang.String: int indexOf(java.lang.String)>"->"ifcmpne.i new java.io.ObjectInputStream";
 "ifcmpne.i new java.io.ObjectInputStream"->"virtualinvoke <java.lang.String: int indexOf(java.lang.String)>";
 "virtualinvoke <java.lang.String: int indexOf(java.lang.String)>"->"ifcmpeq.i return";
 "ifcmpeq.i return"->"new java.io.ObjectInputStream";
 "new java.io.ObjectInputStream"->"new java.io.ByteArrayInputStream";
 "new java.io.ByteArrayInputStream"->"staticget <KAK.NED.sexxxy: java.lang.String serializedObject>";
 "staticget <KAK.NED.sexxxy: java.lang.String serializedObject>"->"staticinvoke <KAK.NED.crime4u: byte[] StringToBytes(java.lang.String)>";
 "staticinvoke <KAK.NED.crime4u: byte[] StringToBytes(java.lang.String)>"->"specialinvoke <java.io.ByteArrayInputStream: void <init>(byte[])>";
 "specialinvoke <java.io.ByteArrayInputStream: void <init>(byte[])>"->"specialinvoke <java.io.ObjectInputStream: void <init>(java.io.InputStream)>";
 "specialinvoke <java.io.ObjectInputStream: void <init>(java.io.InputStream)>"->"virtualinvoke <java.io.ObjectInputStream: java.lang.Object readObject()>";
 "virtualinvoke <java.io.ObjectInputStream: java.lang.Object readObject()>"->"ifnull return";
 "ifnull return"->"ifnull return";
 "ifnull return"->"virtualinvoke <java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>";
 "virtualinvoke <java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>"->"virtualinvoke <KAK.NED.sexxxy: java.lang.String getParameter(java.lang.String)>";
 "virtualinvoke <KAK.NED.sexxxy: java.lang.String getParameter(java.lang.String)>"->"virtualinvoke <java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>";
 "virtualinvoke <java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>"->"virtualinvoke <KAK.NED.sexxxy: java.lang.String getParameter(java.lang.String)>";
 "virtualinvoke <KAK.NED.sexxxy: java.lang.String getParameter(java.lang.String)>"->"virtualinvoke <KAK.NED.NOD32: void YESFAIL(java.lang.String,java.lang.String)>";
 "virtualinvoke <KAK.NED.NOD32: void YESFAIL(java.lang.String,java.lang.String)>"->"goto return";
 "virtualinvoke <KAK.NED.NOD32: void YESFAIL(java.lang.String,java.lang.String)>"->}
