digraph "" {
"virtualinvoke <java.awt.Component: java.awt.Dimension getSize()>";
 "virtualinvoke <java.awt.Component: java.awt.Dimension getSize()>"->"fieldget <java.awt.Dimension: int width>";
 "fieldget <java.awt.Dimension: int width>"->"new java.awt.Font";
 "new java.awt.Font"->"specialinvoke <java.awt.Font: void <init>(java.lang.String,int,int)>";
 "specialinvoke <java.awt.Font: void <init>(java.lang.String,int,int)>"->"fieldput <worldclock: java.awt.Font AnzeigeFont>";
 "fieldput <worldclock: java.awt.Font AnzeigeFont>"->"new java.awt.Color";
 "new java.awt.Color"->"specialinvoke <java.awt.Color: void <init>(int,int,int)>";
 "specialinvoke <java.awt.Color: void <init>(int,int,int)>"->"fieldput <worldclock: java.awt.Color uhrfarbe>";
 "fieldput <worldclock: java.awt.Color uhrfarbe>"->"new java.awt.Color";
 "new java.awt.Color"->"specialinvoke <java.awt.Color: void <init>(int,int,int)>";
 "specialinvoke <java.awt.Color: void <init>(int,int,int)>"->"fieldput <worldclock: java.awt.Color stundecolor>";
 "fieldput <worldclock: java.awt.Color stundecolor>"->"new java.awt.Color";
 "new java.awt.Color"->"specialinvoke <java.awt.Color: void <init>(int,int,int)>";
 "specialinvoke <java.awt.Color: void <init>(int,int,int)>"->"fieldput <worldclock: java.awt.Color minutecolor>";
 "fieldput <worldclock: java.awt.Color minutecolor>"->"new java.awt.Color";
 "new java.awt.Color"->"specialinvoke <java.awt.Color: void <init>(int,int,int)>";
 "specialinvoke <java.awt.Color: void <init>(int,int,int)>"->"fieldput <worldclock: java.awt.Color secondcolor>";
 "fieldput <worldclock: java.awt.Color secondcolor>"->"new java.awt.Color";
 "new java.awt.Color"->"specialinvoke <java.awt.Color: void <init>(int,int,int)>";
 "specialinvoke <java.awt.Color: void <init>(int,int,int)>"->"fieldput <worldclock: java.awt.Color bgfarbe>";
 "fieldput <worldclock: java.awt.Color bgfarbe>"->"new java.awt.Color";
 "new java.awt.Color"->"specialinvoke <java.awt.Color: void <init>(int,int,int)>";
 "specialinvoke <java.awt.Color: void <init>(int,int,int)>"->"fieldput <worldclock: java.awt.Color clockfarbe>";
 "fieldput <worldclock: java.awt.Color clockfarbe>"->"new java.awt.Color";
 "new java.awt.Color"->"specialinvoke <java.awt.Color: void <init>(int,int,int)>";
 "specialinvoke <java.awt.Color: void <init>(int,int,int)>"->"fieldput <worldclock: java.awt.Color ampmcolor>";
 "fieldput <worldclock: java.awt.Color ampmcolor>"->"virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>";
 "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"->"virtualinvoke <worldclock: int getInteger(java.lang.String)>";
 "virtualinvoke <worldclock: int getInteger(java.lang.String)>"->"virtualinvoke <worldclock: int getParameterlaenge(java.lang.String)>";
 "virtualinvoke <worldclock: int getParameterlaenge(java.lang.String)>"->"virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>";
 "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"->"virtualinvoke <java.applet.Applet: java.net.URL getCodeBase()>";
 "virtualinvoke <java.applet.Applet: java.net.URL getCodeBase()>"->"virtualinvoke <java.applet.Applet: java.awt.Image getImage(java.net.URL,java.lang.String)>";
 "virtualinvoke <java.applet.Applet: java.awt.Image getImage(java.net.URL,java.lang.String)>"->"fieldput <worldclock: java.awt.Image uhrimg>";
 "fieldput <worldclock: java.awt.Image uhrimg>"->"new java.awt.MediaTracker";
 "new java.awt.MediaTracker"->"specialinvoke <java.awt.MediaTracker: void <init>(java.awt.Component)>";
 "specialinvoke <java.awt.MediaTracker: void <init>(java.awt.Component)>"->"fieldget <worldclock: java.awt.Image uhrimg>";
 "fieldget <worldclock: java.awt.Image uhrimg>"->"virtualinvoke <java.awt.MediaTracker: void addImage(java.awt.Image,int)>";
 "virtualinvoke <java.awt.MediaTracker: void addImage(java.awt.Image,int)>"->"virtualinvoke <java.awt.MediaTracker: void waitForID(int)>";
 "virtualinvoke <java.awt.MediaTracker: void waitForID(int)>"->"goto load.r r0";
 "goto load.r r0"->"virtualinvoke <java.awt.Component: java.awt.Image createImage(int,int)>";
 "virtualinvoke <java.awt.Component: java.awt.Image createImage(int,int)>"->"fieldput <worldclock: java.awt.Image buffer>";
 "fieldput <worldclock: java.awt.Image buffer>"->"fieldget <worldclock: java.awt.Image buffer>";
 "fieldget <worldclock: java.awt.Image buffer>"->"virtualinvoke <java.awt.Image: java.awt.Graphics getGraphics()>";
 "virtualinvoke <java.awt.Image: java.awt.Graphics getGraphics()>"->"fieldput <worldclock: java.awt.Graphics bg>";
 "fieldput <worldclock: java.awt.Graphics bg>"->"virtualinvoke <worldclock: java.awt.Color getColorParameter(java.lang.String)>";
 "virtualinvoke <worldclock: java.awt.Color getColorParameter(java.lang.String)>"->"virtualinvoke <worldclock: java.awt.Color getColorParameter(java.lang.String)>";
 "virtualinvoke <worldclock: java.awt.Color getColorParameter(java.lang.String)>"->"virtualinvoke <java.awt.Component: void setBackground(java.awt.Color)>";
 "virtualinvoke <java.awt.Component: void setBackground(java.awt.Color)>"->"virtualinvoke <worldclock: java.awt.Color getColorParameter(java.lang.String)>";
 "virtualinvoke <worldclock: java.awt.Color getColorParameter(java.lang.String)>"->"virtualinvoke <worldclock: java.awt.Color getColorParameter(java.lang.String)>";
 "virtualinvoke <worldclock: java.awt.Color getColorParameter(java.lang.String)>"->"fieldput <worldclock: java.awt.Color bgfarbe>";
 "fieldput <worldclock: java.awt.Color bgfarbe>"->"fieldget <worldclock: java.awt.Color bgfarbe>";
 "fieldget <worldclock: java.awt.Color bgfarbe>"->"fieldput <worldclock: java.awt.Color clockfarbe>";
 "fieldput <worldclock: java.awt.Color clockfarbe>"->"virtualinvoke <worldclock: java.awt.Color getColorParameter(java.lang.String)>";
 "virtualinvoke <worldclock: java.awt.Color getColorParameter(java.lang.String)>"->"virtualinvoke <worldclock: java.awt.Color getColorParameter(java.lang.String)>";
 "virtualinvoke <worldclock: java.awt.Color getColorParameter(java.lang.String)>"->"fieldput <worldclock: java.awt.Color uhrfarbe>";
 "fieldput <worldclock: java.awt.Color uhrfarbe>"->"virtualinvoke <worldclock: java.awt.Color getColorParameter(java.lang.String)>";
 "virtualinvoke <worldclock: java.awt.Color getColorParameter(java.lang.String)>"->"virtualinvoke <worldclock: java.awt.Color getColorParameter(java.lang.String)>";
 "virtualinvoke <worldclock: java.awt.Color getColorParameter(java.lang.String)>"->"fieldput <worldclock: java.awt.Color clockfarbe>";
 "fieldput <worldclock: java.awt.Color clockfarbe>"->"virtualinvoke <worldclock: java.awt.Color getColorParameter(java.lang.String)>";
 "virtualinvoke <worldclock: java.awt.Color getColorParameter(java.lang.String)>"->"virtualinvoke <worldclock: java.awt.Color getColorParameter(java.lang.String)>";
 "virtualinvoke <worldclock: java.awt.Color getColorParameter(java.lang.String)>"->"fieldput <worldclock: java.awt.Color stundecolor>";
 "fieldput <worldclock: java.awt.Color stundecolor>"->"virtualinvoke <worldclock: java.awt.Color getColorParameter(java.lang.String)>";
 "virtualinvoke <worldclock: java.awt.Color getColorParameter(java.lang.String)>"->"virtualinvoke <worldclock: java.awt.Color getColorParameter(java.lang.String)>";
 "virtualinvoke <worldclock: java.awt.Color getColorParameter(java.lang.String)>"->"fieldput <worldclock: java.awt.Color minutecolor>";
 "fieldput <worldclock: java.awt.Color minutecolor>"->"virtualinvoke <worldclock: java.awt.Color getColorParameter(java.lang.String)>";
 "virtualinvoke <worldclock: java.awt.Color getColorParameter(java.lang.String)>"->"virtualinvoke <worldclock: java.awt.Color getColorParameter(java.lang.String)>";
 "virtualinvoke <worldclock: java.awt.Color getColorParameter(java.lang.String)>"->"fieldput <worldclock: java.awt.Color secondcolor>";
 "fieldput <worldclock: java.awt.Color secondcolor>"->"virtualinvoke <worldclock: java.awt.Color getColorParameter(java.lang.String)>";
 "virtualinvoke <worldclock: java.awt.Color getColorParameter(java.lang.String)>"->"ifnull new java.awt.Panel";
 "ifnull new java.awt.Panel"->"virtualinvoke <worldclock: java.awt.Color getColorParameter(java.lang.String)>";
 "virtualinvoke <worldclock: java.awt.Color getColorParameter(java.lang.String)>"->"fieldput <worldclock: java.awt.Color ampmcolor>";
 "fieldput <worldclock: java.awt.Color ampmcolor>"->"new java.awt.Panel";
 "new java.awt.Panel"->"specialinvoke <java.awt.Panel: void <init>()>";
 "specialinvoke <java.awt.Panel: void <init>()>"->"new java.awt.GridBagLayout";
 "new java.awt.GridBagLayout"->"specialinvoke <java.awt.GridBagLayout: void <init>()>";
 "specialinvoke <java.awt.GridBagLayout: void <init>()>"->"new java.awt.GridBagConstraints";
 "new java.awt.GridBagConstraints"->"specialinvoke <java.awt.GridBagConstraints: void <init>()>";
 "specialinvoke <java.awt.GridBagConstraints: void <init>()>"->"virtualinvoke <java.awt.Container: void setLayout(java.awt.LayoutManager)>";
 "virtualinvoke <java.awt.Container: void setLayout(java.awt.LayoutManager)>"->"new java.awt.BorderLayout";
 "new java.awt.BorderLayout"->"specialinvoke <java.awt.BorderLayout: void <init>()>";
 "specialinvoke <java.awt.BorderLayout: void <init>()>"->"virtualinvoke <java.awt.Container: void setLayout(java.awt.LayoutManager)>";
 "virtualinvoke <java.awt.Container: void setLayout(java.awt.LayoutManager)>"->"new java.awt.Choice";
 "new java.awt.Choice"->"specialinvoke <java.awt.Choice: void <init>()>";
 "specialinvoke <java.awt.Choice: void <init>()>"->"fieldput <worldclock: java.awt.Choice pulldown>";
 "fieldput <worldclock: java.awt.Choice pulldown>"->"new java.awt.Font";
 "new java.awt.Font"->"specialinvoke <java.awt.Font: void <init>(java.lang.String,int,int)>";
 "specialinvoke <java.awt.Font: void <init>(java.lang.String,int,int)>"->"fieldget <worldclock: java.awt.Choice pulldown>";
 "fieldget <worldclock: java.awt.Choice pulldown>"->"virtualinvoke <java.awt.Component: void setFont(java.awt.Font)>";
 "virtualinvoke <java.awt.Component: void setFont(java.awt.Font)>"->"new java.lang.StringBuffer";
 "new java.lang.StringBuffer"->"specialinvoke <java.lang.StringBuffer: void <init>(java.lang.String)>";
 "specialinvoke <java.lang.StringBuffer: void <init>(java.lang.String)>"->"virtualinvoke <worldclock: java.lang.String getTowns(java.lang.String)>";
 "virtualinvoke <worldclock: java.lang.String getTowns(java.lang.String)>"->"virtualinvoke <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>";
 "virtualinvoke <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>"->"virtualinvoke <java.lang.StringBuffer: java.lang.String toString()>";
 "virtualinvoke <java.lang.StringBuffer: java.lang.String toString()>"->"new java.io.InputStreamReader";
 "new java.io.InputStreamReader"->"new java.net.URL";
 "new java.net.URL"->"virtualinvoke <java.applet.Applet: java.net.URL getCodeBase()>";
 "virtualinvoke <java.applet.Applet: java.net.URL getCodeBase()>"->"specialinvoke <java.net.URL: void <init>(java.net.URL,java.lang.String)>";
 "specialinvoke <java.net.URL: void <init>(java.net.URL,java.lang.String)>"->"virtualinvoke <java.net.URL: java.net.URLConnection openConnection()>";
 "virtualinvoke <java.net.URL: java.net.URLConnection openConnection()>"->"virtualinvoke <java.net.URLConnection: void setUseCaches(boolean)>";
 "virtualinvoke <java.net.URLConnection: void setUseCaches(boolean)>"->"new java.io.BufferedReader";
 "new java.io.BufferedReader"->"virtualinvoke <java.net.URLConnection: java.io.InputStream getInputStream()>";
 "virtualinvoke <java.net.URLConnection: java.io.InputStream getInputStream()>"->"specialinvoke <java.io.InputStreamReader: void <init>(java.io.InputStream)>";
 "specialinvoke <java.io.InputStreamReader: void <init>(java.io.InputStream)>"->"specialinvoke <java.io.BufferedReader: void <init>(java.io.Reader)>";
 "specialinvoke <java.io.BufferedReader: void <init>(java.io.Reader)>"->"virtualinvoke <java.io.BufferedReader: java.lang.String readLine()>";
 "virtualinvoke <java.io.BufferedReader: java.lang.String readLine()>"->"virtualinvoke <worldclock: int getInteger(java.lang.String)>";
 "virtualinvoke <worldclock: int getInteger(java.lang.String)>"->"virtualinvoke <java.io.BufferedReader: java.lang.String readLine()>";
 "virtualinvoke <java.io.BufferedReader: java.lang.String readLine()>"->"virtualinvoke <worldclock: int getInteger(java.lang.String)>";
 "virtualinvoke <worldclock: int getInteger(java.lang.String)>"->"virtualinvoke <java.io.BufferedReader: java.lang.String readLine()>";
 "virtualinvoke <java.io.BufferedReader: java.lang.String readLine()>"->"virtualinvoke <worldclock: int getInteger(java.lang.String)>";
 "virtualinvoke <worldclock: int getInteger(java.lang.String)>"->"virtualinvoke <java.io.BufferedReader: java.lang.String readLine()>";
 "virtualinvoke <java.io.BufferedReader: java.lang.String readLine()>"->"virtualinvoke <worldclock: int getInteger(java.lang.String)>";
 "virtualinvoke <worldclock: int getInteger(java.lang.String)>"->"virtualinvoke <java.io.BufferedReader: java.lang.String readLine()>";
 "virtualinvoke <java.io.BufferedReader: java.lang.String readLine()>"->"virtualinvoke <worldclock: int getInteger(java.lang.String)>";
 "virtualinvoke <worldclock: int getInteger(java.lang.String)>"->"virtualinvoke <java.io.BufferedReader: java.lang.String readLine()>";
 "virtualinvoke <java.io.BufferedReader: java.lang.String readLine()>"->"virtualinvoke <worldclock: int getInteger(java.lang.String)>";
 "virtualinvoke <worldclock: int getInteger(java.lang.String)>"->"goto load.i $r52";
 "goto load.i $r52"->"virtualinvoke <java.io.BufferedReader: void close()>";
 "virtualinvoke <java.io.BufferedReader: void close()>"->"goto load.b r7";
 "goto load.b r7"->"staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>";
 "staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>"->"staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>";
 "staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>"->"virtualinvoke <java.util.Calendar: void set(int,int,int,int,int,int)>";
 "virtualinvoke <java.util.Calendar: void set(int,int,int,int,int,int)>"->"virtualinvoke <java.util.Calendar: java.util.Date getTime()>";
 "virtualinvoke <java.util.Calendar: java.util.Date getTime()>"->"virtualinvoke <java.util.Date: long getTime()>";
 "virtualinvoke <java.util.Date: long getTime()>"->"virtualinvoke <java.util.Calendar: java.util.Date getTime()>";
 "virtualinvoke <java.util.Calendar: java.util.Date getTime()>"->"virtualinvoke <java.util.Date: long getTime()>";
 "virtualinvoke <java.util.Date: long getTime()>"->"fieldget <worldclock: java.awt.Choice pulldown>";
 "fieldget <worldclock: java.awt.Choice pulldown>"->"virtualinvoke <java.awt.Choice: void addItem(java.lang.String)>";
 "virtualinvoke <java.awt.Choice: void addItem(java.lang.String)>"->"goto load.r $r37";
 "goto load.r $r37"->"fieldput <java.awt.GridBagConstraints: int gridwidth>";
 "fieldput <java.awt.GridBagConstraints: int gridwidth>"->"fieldget <worldclock: java.awt.Choice pulldown>";
 "fieldget <worldclock: java.awt.Choice pulldown>"->"virtualinvoke <java.awt.Container: void add(java.awt.Component,java.lang.Object)>";
 "virtualinvoke <java.awt.Container: void add(java.awt.Component,java.lang.Object)>"->"new java.awt.Label";
 "new java.awt.Label"->"specialinvoke <java.awt.Label: void <init>(java.lang.String,int)>";
 "specialinvoke <java.awt.Label: void <init>(java.lang.String,int)>"->"new java.awt.Font";
 "new java.awt.Font"->"specialinvoke <java.awt.Font: void <init>(java.lang.String,int,int)>";
 "specialinvoke <java.awt.Font: void <init>(java.lang.String,int,int)>"->"fieldget <worldclock: java.awt.Color bgfarbe>";
 "fieldget <worldclock: java.awt.Color bgfarbe>"->"virtualinvoke <java.awt.Component: void setBackground(java.awt.Color)>";
 "virtualinvoke <java.awt.Component: void setBackground(java.awt.Color)>"->"virtualinvoke <java.awt.Component: void setFont(java.awt.Font)>";
 "virtualinvoke <java.awt.Component: void setFont(java.awt.Font)>"->"virtualinvoke <java.awt.Container: void add(java.awt.Component,java.lang.Object)>";
 "virtualinvoke <java.awt.Container: void add(java.awt.Component,java.lang.Object)>"->"virtualinvoke <java.awt.Container: void add(java.awt.Component,java.lang.Object)>";
 "virtualinvoke <java.awt.Container: void add(java.awt.Component,java.lang.Object)>"->"return";
"fieldget <worldclock: java.awt.Choice pulldown>";
 "fieldget <worldclock: java.awt.Choice pulldown>"->"virtualinvoke <java.awt.Choice: void addItem(java.lang.String)>";
 "virtualinvoke <java.io.BufferedReader: void close()>"->"virtualinvoke <java.lang.Throwable: void printStackTrace()>";
"virtualinvoke <java.io.BufferedReader: java.lang.String readLine()>";
 "virtualinvoke <java.io.BufferedReader: java.lang.String readLine()>"->"virtualinvoke <java.io.BufferedReader: java.lang.String readLine()>";
 "virtualinvoke <java.io.BufferedReader: java.lang.String readLine()>"->"virtualinvoke <worldclock: double getFloat(java.lang.String)>";
 "virtualinvoke <worldclock: double getFloat(java.lang.String)>"->"virtualinvoke <worldclock: int getParameterlaenge(java.lang.String)>";
 "virtualinvoke <worldclock: int getParameterlaenge(java.lang.String)>"->"virtualinvoke <worldclock: int getParameterlaenge(java.lang.String)>";
 "virtualinvoke <worldclock: int getParameterlaenge(java.lang.String)>"->"virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>";
 "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"->"fieldget <worldclock: java.awt.Choice pulldown>";
 "fieldget <worldclock: java.awt.Choice pulldown>"->"virtualinvoke <java.awt.Choice: void addItem(java.lang.String)>";
 "virtualinvoke <java.awt.Choice: void addItem(java.lang.String)>"-> "virtualinvoke <java.awt.MediaTracker: void waitForID(int)>"->}
