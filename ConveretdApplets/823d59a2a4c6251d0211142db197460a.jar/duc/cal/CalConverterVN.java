// 
// Decompiled by Procyon v0.5.30
// 

package duc.cal;

import java.util.Hashtable;

public class CalConverterVN extends CalConverter
{
    static int[] TK10;
    static int[] TK11;
    static int[] TK12;
    static int[] TK13;
    static int[] TK14;
    static int[] TK15;
    static int[] TK16;
    static int[] TK17;
    static int[] TK18;
    static int[] TK19;
    static int[] TK20;
    static int[] TK21;
    static int[] TK22;
    static int[][] ZZ_ALL;
    Hashtable h;
    
    static {
        CalConverterVN.TK10 = new int[] { 4467552, 2926310, 5415792, 4084080, 2711908, 4904240, 3562140, 5953184, 4609744, 3222232, 5655264, 4236000, 2806485, 5163344, 3724576, 2290978, 4765088, 3299050, 5789104, 4474320, 3121590, 5415600, 3975504, 2537812, 5008672, 3452268, 5942112, 4609456, 3360120, 5653872, 4215472, 2779813, 5171536, 3697312, 2284193, 4762464, 3429227, 5688000, 4253024, 2937687, 5427872, 3856720, 2577747, 5002912, 3581660, 5936592, 4606672, 3188151, 5678288, 4108896, 2732709, 5158224, 3823008, 2272161, 4756912, 3427065, 5917104, 4367536, 2927415, 5401248, 3976528, 2513747, 4991840, 3577212, 6071152, 4608368, 3236968, 5559472, 4217488, 2649765, 5134032, 3812064, 2402018, 4760288, 3393882, 5810512, 4379808, 2808615, 5289376, 3954384, 2635187, 4990416, 3642076, 6066864, 4630864, 3060953, 5549216, 4107600, 2839397, 5131184, 3810736, 2401650, 4870832, 3303802, 5790032, 4352672, 2992807, 5286752, 3951456, 2534115 };
        CalConverterVN.TK11 = new int[] { 5023088, 3560124, 5952160, 4511056, 3168985, 5527200, 4101840, 2772437, 5262032, 3712208, 2286802, 4764256, 3323242, 5680464, 4339104, 2922406, 5412272, 3951024, 2533812, 5022896, 3648092, 5925536, 4484432, 3157465, 5647184, 4100976, 2771685, 5163376, 3826864, 2315426, 4643472, 3304298, 5789392, 4335328, 2986726, 5411552, 3983712, 2414932, 4904096, 3462812, 5942688, 4478672, 3221177, 5645776, 4231856, 2665141, 5155152, 3716256, 2288289, 4631904, 3364267, 5786544, 4466096, 2904951, 5395120, 3959120, 2520403, 4876960, 3451740, 5941088, 4606816, 3057128, 5547360, 4117088, 2681445, 5035344, 3693216, 2274979, 4757200, 3295995, 5786064, 4367568, 2937559, 5286480, 3847504, 2514260, 4994464, 3446224, 2168241, 4606384, 3187961, 5530800, 4106832, 2668182, 5139280, 3681696, 2272098, 4756336, 3426684, 5687664, 4351152, 2910888, 5298768, 3824448, 2467540, 4991712, 3576544, 2020066, 4508000, 3069145 };
        CalConverterVN.TK12 = new int[] { 5559456, 3987024, 2709846, 5133776, 3811024, 2270674, 4756144, 3320186, 5810512, 4240544, 2799016, 5287248, 3954096, 2501492, 4990320, 3560112, 2151089, 4483408, 3042009, 5528224, 4107088, 2641621, 5131104, 3712368, 2442467, 4641376, 3270955, 5690704, 4348576, 2792360, 5281488, 3951328, 2533844, 4891856, 3461712, 2028114, 4502848, 3004058, 5516704, 4101584, 2836918, 5130672, 3712176, 2274484, 4745808, 3192123, 5663552, 4238176, 2987368, 5280624, 3950960, 2517364, 5002416, 3435100, 5823056, 4479680, 3124058, 5514976, 4100832, 2673382, 5163360, 3593376, 2159778, 4642128, 3299003, 5658032, 4335056, 2921431, 5411440, 3844432, 2478421, 4895904, 3454288, 2043217, 4476336, 3155433, 5547376, 4084400, 2665142, 5138768, 3697312, 2144931, 4631376, 3296123, 5786336, 4236656, 2904807, 5296736, 3860784, 2387285, 4872864, 3447632, 2119378, 4475616, 3122394, 5547216, 4117088, 2545238, 5027104, 3593888 };
        CalConverterVN.TK13 = new int[] { 2256290, 4625872, 3361244, 5786032, 4367536, 2796216, 5270096, 3847488, 2407236, 4762464, 3446192, 2118514, 4606320, 3040505, 5526704, 4090448, 2714711, 5003968, 3582816, 2328291, 4756192, 3197308, 5687648, 4248736, 2808488, 5158224, 3823264, 2403765, 4990416, 3445472, 2020018, 4499792, 3069145, 5419680, 3978576, 2643799, 5131680, 3581360, 2250100, 4739760, 3385660, 5663024, 4221600, 2796968, 5286736, 3820384, 2403044, 4892016, 3560048, 2052706, 4384048, 3042490, 5527200, 3955536, 2706134, 5130976, 3712224, 2151636, 4641376, 3200315, 5682464, 4109984, 2840233, 5264752, 3951056, 2466229, 4891824, 3451472, 2026065, 4371744, 2930090, 5417824, 4101552, 2640758, 5130608, 3695792, 2274483, 4614736, 3173179, 5659328, 4238176, 2829016, 5261792, 3843280, 2413749, 4764240, 3323168, 1897762, 4371872, 2921962, 5412272, 4082096, 2663798, 5022896, 3582544, 2144852, 4615488, 3059052, 5548896, 4232048 };
        CalConverterVN.TK14 = new int[] { 2967992, 5261680, 3826864, 2387109, 4774480, 3300000, 1889985, 4368096, 3052283, 5411552, 3983712, 2544983, 5035168, 3462480, 2184531, 4609696, 3188432, 1746385, 4231856, 2794936, 5286224, 3715744, 2339493, 4762960, 3427744, 1887137, 4367728, 3035897, 5526128, 3959088, 2517815, 5008032, 3582800, 2119507, 4606816, 3188348, 5677792, 4116832, 2681192, 5166240, 3725984, 2252453, 4740816, 3427040, 2065874, 4367056, 2937210, 5417552, 3978528, 2414407, 4894112, 3560912, 2249651, 4605360, 3187376, 1811121, 4237904, 2667865, 5139232, 3714400, 2446181, 4756336, 3425648, 2008435, 4477616, 2910826, 5298512, 3955360, 2599623, 4892384, 3560160, 2149091, 4629856, 3068603, 5558944, 4117840, 2775769, 5133984, 3712720, 2381269, 4870832, 3320016, 1893714, 4371104, 2930026, 5287248, 3952032, 2533286, 5023088, 3559856, 2204020, 4613424, 3238556, 5528224, 4107088, 2763737, 5253984, 3711856, 2380517, 4772192 };
        CalConverterVN.TK15 = new int[] { 3335344, 1864995, 4250272, 2972491, 5396176, 3943136, 2532311, 5022416, 3592528, 2021716, 4502816, 3061404, 5549472, 4085200, 2827705, 5260720, 3842736, 2271925, 4761936, 3323168, 1895073, 4238176, 2905532, 5393264, 4081008, 2511735, 5001904, 3565904, 2189652, 4479648, 3058524, 5547744, 4213472, 2663912, 5154144, 3723936, 2288294, 4642128, 3298976, 1938850, 4363728, 2902779, 5392816, 3974352, 2544343, 4895392, 3454288, 2121044, 4599200, 3052976, 1774961, 4213168, 2794745, 5137584, 3697296, 2272934, 4746064, 3287904, 1878754, 4363120, 3098987, 5294432, 3859664, 2517799, 4905632, 3431120, 2111187, 4597472, 3183328, 1626834, 4114768, 2675929, 5158048, 3585680, 2315686, 4740528, 3417552, 1877426, 4362928, 2926970, 5400912, 3830944, 2405800, 4893536, 3560368, 2108276, 4597104, 3166896, 1757873, 4090192, 2648793, 5135008, 3713872, 2248405, 4737760, 3318640, 2049251, 4248224, 2873675, 5289296 };
        CalConverterVN.TK16 = new int[] { 3954336, 2398119, 4888016, 3558112, 2140596, 4498640, 3068496, 1682081, 4109648, 2643673, 5123488, 3708336, 2378613, 4737392, 3318960, 1881268, 4352656, 2796892, 5266256, 3943264, 2528744, 4887280, 3557744, 2124132, 4510880, 2943580, 5428880, 4085456, 2829146, 5121760, 3707616, 2280150, 4770128, 3200160, 1766562, 4240784, 2905820, 5264816, 3941840, 2528183, 5018288, 3451216, 2077013, 4484256, 3059024, 1649505, 4082608, 2762233, 5252464, 3691184, 2271910, 4647248, 3304096, 1751715, 4238160, 2902907, 5393120, 3843440, 2511575, 4903520, 3463504, 1989973, 4478624, 3053264, 1725906, 4082400, 2663674, 5154000, 3723856, 2152086, 4633936, 3290528, 1878946, 4232624, 2967996, 5392752, 3974320, 2405048, 4876880, 3435840, 2075476, 4467616, 3052400, 3035890, 5523824, 3957993, 6345888, 4909648, 3619494, 5920464, 4598624, 3245539, 5673696, 4114811, 6596944, 5166240, 3725992, 6075728, 4740784, 3419556 };
        CalConverterVN.TK17 = new int[] { 5809616, 4362960, 2937522, 5417296, 3978457, 6318752, 4894032, 3561302, 6048672, 4498864, 3229043, 5657264, 4303179, 6482256, 5139104, 3714472, 6200144, 4737888, 3320548, 5809392, 4477536, 2871906, 5297488, 4020890, 6444704, 4888272, 3623382, 6048224, 4629712, 3069140, 5558864, 4117819, 6600000, 5027232, 3773864, 6198704, 4868528, 3320180, 5809328, 4368976, 2943569, 5270848, 3845563, 6433632, 5018480, 3558134, 6048112, 4613296, 3175587, 5429840, 4090715, 6575824, 5253856, 3707879, 6197984, 4770144, 3395925, 5690528, 4250192, 2962769, 5396128, 3843834, 6432208, 5018320, 3582646, 5941584, 4502688, 3062436, 5549392, 4150700, 6572960, 5154224, 3887736, 6181552, 4745520, 3306837, 5794464, 4238160, 2906962, 5393248, 4040042, 6333680, 5001824, 3467878, 5952816, 4479648, 3061411, 5543632, 4213472, 2673105, 5154000, 3723992, 6206032, 4633888, 3265861, 5680544, 4363728, 2905522, 5392816, 3974393 };
        CalConverterVN.TK18 = new int[] { 6464688, 5024336, 3650647, 6056768, 4631968, 3169124, 5673840, 4344176, 2935153, 5268656, 3828392, 6216272, 4872864, 3321541, 5809888, 4494064, 3166946, 5425504, 4052122, 6476960, 5035344, 3562327, 6051488, 4630224, 3315156, 5673680, 4237660, 2806960, 5288608, 3716520, 6204752, 4869536, 3451812, 5809520, 4477616, 3060339, 5531952, 3959483, 6449824, 5024592, 3754839, 6048608, 4629872, 3298020, 5689696, 4122940, 6608160, 5167776, 3889961, 6182608, 4868832, 3450325, 5939920, 4378960, 2943570, 5420320, 3987115, 6335904, 5002704, 3689398, 6178224, 4629168, 3199668, 5679696, 4306220, 6581024, 5156192, 3823081, 6329200, 4867440, 3450229, 5919408, 4483664, 2972242, 5397152, 4041547, 6465248, 5018336, 3589862, 6071648, 4641952, 3074725, 5559632, 4216480, 2807201, 5154256, 3887833, 6312624, 4893008, 3331413, 5812896, 4371792, 3042642, 5393824, 4040139, 6464880, 5132720, 3582327, 6055216, 4614800 };
        CalConverterVN.TK19 = new int[] { 3193507, 5679952, 4336544, 2927457, 5415792, 3953128, 6345056, 4908208, 3631398, 5823136, 4479824, 3217106, 5647072, 4104928, 2679506, 5163344, 3724630, 6075680, 4634256, 3300772, 5789136, 4335056, 2926003, 5415600, 4040887, 6334800, 4895904, 3519141, 5942608, 4478384, 3156852, 5645680, 4215545, 6574768, 5138768, 3698006, 6183584, 4631376, 3299028, 5786336, 4367728, 2966867, 5296800, 3926183, 6346064, 4872864, 3452325, 5936592, 4606688, 3058356, 5547216, 4117176, 6599312, 5027152, 3692375, 6172064, 4756944, 3296629, 5786032, 4367536, 2991283, 5270160, 3845528, 6318928, 4991840, 3511141, 5935984, 4606320, 3172708, 5432480, 3992170, 6478480, 5135056, 3746518, 6171360, 4756192, 3328725, 5687632, 4248736, 2872483, 5289616, 3823527, 6313392, 4990416, 3577269, 5935792, 4499792, 3070292, 5551264, 3978576, 2648914, 5133744, 3811190, 6169968, 4739760, 3320485, 5695824, 4221600, 2800291, 5286736 };
        CalConverterVN.TK20 = new int[] { 3951576, 6441696, 5023088, 3691733, 6083168, 4512080, 3233108, 5658272, 4233936, 2774482, 5262048, 3843510, 6333648, 4772432, 3396181, 5813568, 4380320, 2928034, 5412272, 4147575, 6572400, 5022896, 3585205, 6056528, 4615488, 3124052, 5647200, 4232560, 2904818, 5261680, 3827046, 6214816, 4778576, 3369621, 5790416, 4467552, 3114723, 5411552, 4049111, 6474064, 5035168, 3528870, 5944656, 4609696, 3253684, 5645776, 4231888, 2806450, 5286224, 3716439, 6188192, 4765008, 3494741, 5787040, 4367792, 3097971, 5526192, 3975592, 6351184, 5008032, 3583654, 5942096, 4606816, 3189476, 5678448, 4215392, 2683491, 5167424, 3726151, 6084256, 4757200, 3427797, 5917392, 4367568, 2938036, 5419600, 3986776, 6337856, 4896160, 3626406, 6067632, 4606384, 3189108, 5678256, 4237904, 2730578, 5139744, 3779911, 6204256, 4756336, 3427061, 5917040, 4482224, 2913443, 5302864, 4024920, 6444704, 4893392, 3577557, 6066912 };
        CalConverterVN.TK21 = new int[] { 4639072, 3070292, 5559456, 4119120, 2782546, 5133984, 3712935, 6202832, 4887216, 3320501, 5810512, 4371616, 2931364, 5287248, 3954137, 6441888, 5023152, 3625334, 6050416, 4614448, 3176756, 5532320, 4107600, 2775890, 5262176, 3712742, 6202592, 4772448, 3336805, 5690656, 4250272, 2971299, 5396176, 3951355, 6441424, 5022928, 3657910, 5943888, 4502816, 3071269, 5551520, 4085200, 2774450, 5261744, 3843447, 6202544, 4762192, 3387989, 5795104, 4238688, 2968419, 5395312, 4082152, 6343024, 5002416, 3631270, 5954128, 4479648, 3122852, 5548752, 4215520, 2675427, 5163344, 3724631, 6214816, 4643152, 3300693, 5789344, 4368080, 2905556, 5395120, 3975608, 6465840, 4895888, 3454630, 5942608, 4609440, 3058532, 5547376, 4215472, 2797939, 5138736, 3697463, 6187680, 4762960, 3353301, 5778272, 4367728, 3035876, 5296480, 3860824, 6346016, 4905616, 3496614, 5920464, 4598496, 3189204, 5546704, 4116816, 2681170 };
        CalConverterVN.TK22 = new int[] { 5158176, 3725095, 6204832, 4871600, 3550645, 5916080, 4498096, 3060404, 5548368, 3978585, 6449952, 5025104, 3692390, 6050672, 4736368, 3302772, 5788336, 4221264, 2783571, 5266080, 3910311, 6203088, 4868832, 3515109, 5940560, 4379296, 3007140, 5428560, 4086459, 6444704, 5019344, 3754422, 6179504, 4630736, 3200181, 5681808, 4240720, 2780498, 5262752, 3904871, 6329712, 4868528, 3451253, 5924016, 4483728, 2931348, 5401424, 4074336, 2665313, 5018992, 3689190, 6082912, 4646048, 3075365, 5560976, 4217680, 2897619, 5253856, 3838935, 6329040, 4901200, 3331414, 5813408, 4372112, 3038612, 5395888, 4072954, 6563248, 5149360, 3582646, 6056272, 4617376, 3256997, 5549392, 4216224, 2796403, 5383536, 3822455, 6312624, 4876624, 3435862, 5790368, 4369232, 3036884, 5524192, 3974512, 2647250, 5034592, 3599014, 5952848, 4610720, 3190181, 5674448, 4213456, 2795955, 5285072, 3855031, 6206032, 4764992, 3396950 };
        CalConverterVN.ZZ_ALL = new int[][] { CalConverterVN.TK10, CalConverterVN.TK11, CalConverterVN.TK12, CalConverterVN.TK13, CalConverterVN.TK14, CalConverterVN.TK15, CalConverterVN.TK16, CalConverterVN.TK17, CalConverterVN.TK18, CalConverterVN.TK19, CalConverterVN.TK20, CalConverterVN.TK21, CalConverterVN.TK22 };
    }
    
    public CalConverterVN() {
        this.h = new Hashtable();
    }
    
    public static void getDescription() {
        System.out.println("This class encodes the true historical Vietnamese calendar.");
        System.out.println("Data from 1200 to 2199 are pre-computed and stored in the format specified below.");
        System.out.println("From 1200 to 1300: Vietnamese calendar differs from Chinese calendar, but no info available");
        System.out.println("Therefore, take data from http://www.sinica.edu.tw/ftms-bin/kiwi1/luso.sh?lstype=1&yy=1200&mm=1");
        System.out.println("From 1301 to 1643: Vietnam uses Chinese calendar. Data from above source");
        System.out.println("From 1644 to 1812: Vietnam computes own lunar calendar using Dai-Thong algorithms.");
        System.out.println("Data from Hoang Xuan Han. (1789-1802: 2 different calendars used by Tay Son and Nguyen)");
        System.out.println("From 1813 to 1942: No difference between Vietnamese and Chinese calendar.");
        System.out.println("Data computed with modern algorithms, time zone GMT+7,761 until 1928 and +8 from 1929");
        System.out.println("From 1943 to 1975: different timezones (GMT+7, +8, +9) used.");
        System.out.println("Data computed with official time zone declared by political administration at the time.");
        System.out.println("(2 calendars used in North and South between 1955 and 1975)");
        System.out.println("From 1968 to 2199: data computed with modern algorithms, with time zone GMT+7");
    }
    
    private static int getEncodingForYear(final int y) {
        final int k = y / 100 - 9;
        if (k < 0 || k >= CalConverterVN.ZZ_ALL.length) {
            return 0;
        }
        return CalConverterVN.ZZ_ALL[k][y % 100];
    }
    
    public LunarYear getLunarYear(final int yy) {
        final Object k = new Integer(yy);
        LunarYear ret = this.h.get(k);
        if (ret == null) {
            final int code = getEncodingForYear(yy);
            if (code == 0) {
                if (this.getFallbackConverter() == null) {
                    ret = LunarYear.DUMMY;
                }
                else {
                    ret = this.getFallbackConverter().getLunarYear(yy);
                }
            }
            else {
                ret = new LunarYear(yy, code);
            }
            if (this.h.size() > 5) {
                this.h.clear();
            }
            this.h.put(k, ret);
        }
        return ret;
    }
}
