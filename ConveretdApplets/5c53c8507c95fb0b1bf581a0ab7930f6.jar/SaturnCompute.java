// 
// Decompiled by Procyon v0.5.30
// 

class SaturnCompute
{
    final double K = 0.017453292519943295;
    double L;
    double B;
    double R;
    double T;
    double lambda;
    double beta;
    double eps;
    double x;
    double y;
    double z;
    
    public SaturnCompute(final double JD) {
        this.T = (JD - 2451545.0) / 365250.0;
        this.eps = 0.017453292519943295 * (23.433333333333334 + (21.448 - 46.815 * this.T - 5.9E-4 * this.T * this.T + 0.001813 * this.T * this.T * this.T) / 3600.0);
        this.L = (this.L0(this.T) + this.L1(this.T) * this.T + this.L2(this.T) * this.T * this.T) / 1.0E8;
        this.B = (this.B0(this.T) + this.B1(this.T) * this.T + this.B2(this.T) * this.T * this.T) / 1.0E8;
        this.R = (this.R0(this.T) + this.R1(this.T) * this.T + this.R2(this.T) * this.T * this.T) / 1.0E8;
        final EarthCompute earthComp = new EarthCompute(JD);
        final double RE = earthComp.earthR();
        final double BE = earthComp.earthB();
        final double LE = earthComp.earthL();
        this.x = this.R * Math.cos(this.B) * Math.cos(this.L) - RE * Math.cos(BE) * Math.cos(LE);
        this.y = this.R * Math.cos(this.B) * Math.sin(this.L) - RE * Math.cos(BE) * Math.sin(LE);
        this.z = this.R * Math.sin(this.B) - RE * Math.sin(BE);
        final double tau = 0.0057755183 * Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);
        this.T = (JD - 2451545.0 - tau) / 365250.0;
        this.L = (this.L0(this.T) + this.L1(this.T) * this.T + this.L2(this.T) * this.T * this.T) / 1.0E8;
        this.B = (this.B0(this.T) + this.B1(this.T) * this.T + this.B2(this.T) * this.T * this.T) / 1.0E8;
        this.R = (this.R0(this.T) + this.R1(this.T) * this.T + this.R2(this.T) * this.T * this.T) / 1.0E8;
        this.x = this.R * Math.cos(this.B) * Math.cos(this.L) - RE * Math.cos(BE) * Math.cos(LE);
        this.y = this.R * Math.cos(this.B) * Math.sin(this.L) - RE * Math.cos(BE) * Math.sin(LE);
        this.z = this.R * Math.sin(this.B) - RE * Math.sin(BE);
        this.lambda = Math.atan2(this.y, this.x) / 0.017453292519943295;
        if (this.lambda < 0.0) {
            this.lambda += 360.0;
        }
        this.beta = Math.atan2(this.z, Math.sqrt(this.x * this.x + this.y * this.y));
    }
    
    double alpha() {
        double a = Math.atan2(Math.sin(0.017453292519943295 * this.lambda) * Math.cos(this.eps) - Math.tan(this.beta) * Math.sin(this.eps), Math.cos(0.017453292519943295 * this.lambda)) / 0.017453292519943295;
        if (a < 0.0) {
            a += 360.0;
        }
        return a;
    }
    
    double delta() {
        final double sinDelta = Math.sin(this.beta) * Math.cos(this.eps) + Math.cos(this.beta) * Math.sin(this.eps) * Math.sin(0.017453292519943295 * this.lambda);
        return Math.asin(sinDelta) / 0.017453292519943295 % 360.0;
    }
    
    double R() {
        return this.R;
    }
    
    double earthDist() {
        return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);
    }
    
    double beta() {
        return this.beta / 0.017453292519943295;
    }
    
    double lambda() {
        return this.lambda;
    }
    
    double L0(final double t) {
        final double[][] L = { { 8.7401354E7, 0.0, 0.0 }, { 1.110766E7, 3.9620509, 213.29909544 }, { 1414151.0, 4.5858152, 7.113547 }, { 398379.0, 0.52112, 206.185548 }, { 350769.0, 3.303299, 426.598191 }, { 206816.0, 0.246584, 103.092774 }, { 79271.0, 3.84007, 220.41264 }, { 23990.0, 4.66977, 110.20632 }, { 16574.0, 0.43719, 419.48464 }, { 15820.0, 0.93809, 632.78374 }, { 15054.0, 2.7167, 639.89729 }, { 14907.0, 5.76903, 316.39187 }, { 14610.0, 1.56519, 3.93215 }, { 13160.0, 4.44891, 14.22709 }, { 13005.0, 5.98119, 11.0457 }, { 10725.0, 3.1294, 202.2534 }, { 6126.0, 1.7633, 277.035 }, { 5863.0, 0.2366, 529.691 }, { 5228.0, 4.2078, 3.1814 }, { 5020.0, 3.1779, 433.7117 }, { 4593.0, 0.6198, 199.072 }, { 4006.0, 2.2448, 63.7359 }, { 3874.0, 3.2228, 138.5175 }, { 3269.0, 0.7749, 949.1756 }, { 2954.0, 0.9828, 95.9792 }, { 2461.0, 2.0316, 735.8765 }, { 1758.0, 3.2658, 522.5774 }, { 1640.0, 5.505, 846.0828 }, { 1581.0, 4.3727, 309.2783 }, { 1391.0, 4.0233, 323.5054 }, { 1124.0, 2.8373, 415.5525 }, { 1087.0, 4.1834, 2.4477 }, { 1017.0, 3.717, 227.5262 }, { 957.0, 0.507, 1265.567 }, { 853.0, 3.421, 175.166 }, { 849.0, 3.191, 209.367 }, { 789.0, 5.007, 0.963 }, { 749.0, 2.144, 853.196 }, { 744.0, 5.253, 224.345 }, { 687.0, 1.747, 1052.268 }, { 654.0, 1.599, 0.048 }, { 634.0, 2.299, 412.371 }, { 625.0, 0.97, 210.118 }, { 580.0, 3.093, 74.782 }, { 546.0, 2.127, 350.332 }, { 543.0, 1.518, 9.561 }, { 530.0, 4.449, 117.32 }, { 478.0, 2.965, 137.033 }, { 474.0, 5.475, 742.99 }, { 452.0, 1.044, 490.334 }, { 449.0, 1.29, 127.472 }, { 372.0, 2.278, 217.231 }, { 355.0, 3.013, 838.969 }, { 347.0, 1.539, 340.771 }, { 343.0, 0.246, 0.521 }, { 330.0, 0.247, 1581.959 }, { 322.0, 0.961, 203.738 }, { 322.0, 2.572, 647.011 }, { 309.0, 3.495, 216.48 }, { 287.0, 2.37, 351.817 }, { 278.0, 0.4, 211.815 }, { 249.0, 1.47, 1368.66 }, { 227.0, 4.91, 12.53 }, { 220.0, 4.204, 200.769 }, { 209.0, 1.345, 625.67 }, { 208.0, 0.483, 1162.475 }, { 208.0, 1.283, 39.357 }, { 204.0, 6.011, 265.989 }, { 185.0, 3.503, 149.563 }, { 184.0, 0.973, 4.193 }, { 182.0, 5.491, 2.921 }, { 174.0, 1.863, 0.751 }, { 165.0, 0.44, 5.417 }, { 149.0, 5.736, 52.69 }, { 148.0, 1.535, 5.629 }, { 146.0, 6.231, 195.14 }, { 140.0, 4.295, 21.341 }, { 131.0, 4.068, 10.295 }, { 125.0, 6.277, 1898.351 }, { 122.0, 1.976, 4.666 }, { 118.0, 5.341, 554.07 }, { 117.0, 2.679, 1155.361 }, { 114.0, 5.594, 1059.382 }, { 112.0, 1.105, 191.208 }, { 110.0, 0.166, 1.484 }, { 109.0, 3.438, 536.805 }, { 107.0, 4.012, 956.289 }, { 104.0, 2.192, 88.866 }, { 103.0, 1.197, 1685.052 }, { 101.0, 4.965, 269.921 } };
        double l0 = 0.0;
        for (int i = 0; i <= 89; ++i) {
            l0 += L[i][0] * Math.cos(L[i][1] + L[i][2] * t);
        }
        return l0;
    }
    
    double L1(final double t) {
        final double[][] L = { { 2.1354295596E10, 0.0, 0.0 }, { 1296855.0, 1.8282054, 213.2990954 }, { 564348.0, 2.885001, 7.113547 }, { 107679.0, 2.277699, 206.185548 }, { 98323.0, 1.0807, 426.59819 }, { 40255.0, 2.04128, 220.41264 }, { 19942.0, 1.27955, 103.09277 }, { 10512.0, 2.7488, 14.22709 }, { 6939.0, 0.4049, 639.8973 }, { 4803.0, 2.4419, 419.4846 }, { 4056.0, 2.9217, 110.2063 }, { 3769.0, 3.6497, 3.9322 }, { 3385.0, 2.4169, 3.1814 }, { 3302.0, 1.2626, 433.7117 }, { 3071.0, 2.3274, 199.072 }, { 1953.0, 3.5639, 11.0457 }, { 1249.0, 2.628, 95.9792 }, { 922.0, 1.961, 227.526 }, { 706.0, 4.417, 529.691 }, { 650.0, 6.174, 202.253 }, { 628.0, 6.111, 309.278 }, { 487.0, 6.04, 853.196 }, { 479.0, 4.988, 522.577 }, { 468.0, 4.617, 63.736 }, { 417.0, 2.117, 323.505 }, { 408.0, 1.299, 209.367 }, { 352.0, 2.317, 632.784 }, { 344.0, 3.959, 412.371 }, { 340.0, 3.634, 316.392 }, { 336.0, 3.772, 735.877 }, { 332.0, 2.861, 210.118 }, { 289.0, 2.733, 117.32 }, { 281.0, 5.744, 2.448 }, { 266.0, 0.543, 647.011 }, { 230.0, 1.644, 216.48 }, { 192.0, 2.965, 224.345 }, { 173.0, 4.077, 846.083 }, { 167.0, 2.597, 21.341 }, { 136.0, 2.286, 10.295 }, { 131.0, 3.441, 742.99 }, { 128.0, 4.095, 217.231 }, { 109.0, 6.161, 415.552 }, { 98.0, 4.73, 838.97 }, { 94.0, 3.48, 1052.27 }, { 92.0, 3.95, 88.87 }, { 87.0, 1.22, 440.83 }, { 83.0, 3.11, 625.67 }, { 78.0, 6.24, 302.16 }, { 67.0, 0.29, 4.67 }, { 66.0, 5.65, 9.56 }, { 62.0, 4.29, 127.47 }, { 62.0, 1.83, 195.14 }, { 58.0, 2.48, 191.96 }, { 57.0, 5.02, 137.03 }, { 55.0, 0.28, 74.78 }, { 54.0, 5.13, 490.33 }, { 51.0, 1.46, 536.8 }, { 47.0, 1.18, 149.56 }, { 47.0, 5.15, 515.46 }, { 46.0, 2.23, 956.29 }, { 44.0, 2.71, 5.42 }, { 40.0, 0.41, 269.92 }, { 40.0, 3.89, 728.76 }, { 38.0, 0.65, 422.67 }, { 38.0, 2.53, 12.53 }, { 37.0, 3.78, 2.92 }, { 35.0, 6.08, 5.63 }, { 34.0, 3.21, 1368.66 }, { 33.0, 4.64, 277.03 }, { 33.0, 5.43, 1066.5 }, { 33.0, 0.3, 351.82 }, { 32.0, 4.39, 1155.36 }, { 31.0, 2.43, 52.69 }, { 30.0, 2.84, 203.0 }, { 30.0, 6.19, 284.15 }, { 30.0, 3.39, 1059.38 }, { 29.0, 2.03, 330.62 }, { 28.0, 2.74, 265.99 }, { 26.0, 4.51, 340.77 } };
        double l1 = 0.0;
        for (int i = 0; i <= 78; ++i) {
            l1 += L[i][0] * Math.cos(L[i][1] + L[i][2] * t);
        }
        return l1;
    }
    
    double L2(final double t) {
        final double[][] L = { { 116441.0, 1.179879, 7.113547 }, { 91921.0, 0.07425, 213.2991 }, { 90592.0, 0.0, 0.0 }, { 15277.0, 4.06492, 206.18555 }, { 10631.0, 0.25778, 220.41264 }, { 10605.0, 5.40964, 426.59819 }, { 4265.0, 1.046, 14.2271 }, { 1216.0, 2.9186, 103.0928 }, { 1165.0, 4.6094, 639.8973 }, { 1082.0, 5.6913, 433.7117 }, { 1045.0, 4.0421, 199.072 }, { 1020.0, 0.6337, 3.1814 }, { 634.0, 4.388, 419.485 }, { 549.0, 5.573, 3.932 }, { 457.0, 1.268, 110.26 }, { 425.0, 0.209, 227.526 }, { 274.0, 4.288, 95.979 }, { 162.0, 1.381, 11.046 }, { 129.0, 1.566, 309.278 }, { 117.0, 3.881, 853.196 }, { 105.0, 4.9, 647.011 }, { 101.0, 0.893, 21.341 } };
        double l2 = 0.0;
        for (int i = 0; i <= 21; ++i) {
            l2 += L[i][0] * Math.cos(L[i][1] + L[i][2] * t);
        }
        return l2;
    }
    
    double B0(final double t) {
        final double[][] L = { { 4330678.0, 3.6028443, 213.2990954 }, { 240348.0, 2.852385, 426.598191 }, { 84746.0, 0.0, 0.0 }, { 34116.0, 0.57297, 206.18555 }, { 30863.0, 3.48442, 220.41264 }, { 14734.0, 2.11847, 639.89729 }, { 9917.0, 5.79, 419.4846 }, { 6994.0, 4.736, 7.1135 }, { 4808.0, 5.4331, 316.3919 }, { 4788.0, 4.9651, 110.2063 }, { 3432.0, 2.7326, 433.7117 }, { 1506.0, 6.013, 103.0928 }, { 1060.0, 5.631, 529.691 }, { 969.0, 5.204, 632.784 }, { 942.0, 1.396, 853.196 }, { 708.0, 3.803, 323.505 }, { 552.0, 5.131, 202.253 }, { 400.0, 3.359, 227.526 }, { 319.0, 3.626, 209.367 }, { 316.0, 1.997, 647.011 }, { 314.0, 0.465, 217.231 }, { 284.0, 4.886, 224.345 }, { 236.0, 2.139, 11.046 }, { 215.0, 5.95, 846.083 }, { 209.0, 2.12, 415.552 }, { 207.0, 0.73, 199.072 }, { 179.0, 2.954, 63.736 }, { 141.0, 0.644, 490.334 }, { 139.0, 4.595, 14.227 }, { 139.0, 1.998, 735.877 }, { 135.0, 5.245, 742.99 }, { 122.0, 3.115, 522.577 }, { 116.0, 3.109, 216.48 }, { 114.0, 0.963, 210.118 } };
        double b0 = 0.0;
        for (int i = 0; i <= 33; ++i) {
            b0 += L[i][0] * Math.cos(L[i][1] + L[i][2] * t);
        }
        return b0;
    }
    
    double B1(final double t) {
        final double[][] L = { { 397555.0, 5.3329, 213.299095 }, { 49479.0, 3.14159, 0.0 }, { 18572.0, 6.09919, 426.59819 }, { 14801.0, 2.30586, 206.18555 }, { 9644.0, 1.6967, 220.4126 }, { 3757.0, 1.2543, 419.4846 }, { 2717.0, 5.9117, 639.8973 }, { 1455.0, 0.8516, 433.7117 }, { 1291.0, 2.9177, 7.1135 }, { 853.0, 0.436, 316.392 }, { 298.0, 0.919, 632.784 }, { 292.0, 5.316, 853.196 }, { 284.0, 1.619, 227.526 }, { 275.0, 3.889, 103.093 }, { 172.0, 0.052, 647.011 }, { 166.0, 2.444, 199.072 }, { 158.0, 5.209, 110.206 }, { 128.0, 1.207, 529.691 }, { 110.0, 2.457, 217.231 }, { 82.0, 2.76, 210.12 }, { 81.0, 2.86, 14.23 }, { 69.0, 1.66, 202.25 }, { 65.0, 1.26, 216.48 }, { 61.0, 1.25, 209.37 }, { 59.0, 1.82, 323.51 }, { 46.0, 0.82, 440.83 }, { 36.0, 1.82, 224.34 }, { 34.0, 2.84, 117.32 }, { 33.0, 1.31, 412.37 }, { 32.0, 1.19, 846.08 }, { 27.0, 4.65, 1066.5 }, { 27.0, 4.44, 11.05 } };
        double b1 = 0.0;
        for (int i = 0; i <= 31; ++i) {
            b1 += L[i][0] * Math.cos(L[i][1] + L[i][2] * t);
        }
        return b1;
    }
    
    double B2(final double t) {
        final double[][] L = { { 20630.0, 0.50482, 213.2991 }, { 3720.0, 3.9983, 206.1855 }, { 1627.0, 6.1819, 220.4126 }, { 1346.0, 0.0, 0.0 }, { 706.0, 3.039, 419.485 }, { 365.0, 5.099, 426.598 }, { 330.0, 5.279, 433.712 }, { 219.0, 3.828, 639.897 }, { 139.0, 1.043, 7.114 }, { 104.0, 6.157, 227.526 } };
        double b2 = 0.0;
        for (int i = 0; i <= 9; ++i) {
            b2 += L[i][0] * Math.cos(L[i][1] + L[i][2] * t);
        }
        return b2;
    }
    
    double R0(final double t) {
        final double[][] L = { { 9.55758136E8, 0.0, 0.0 }, { 5.2921382E7, 2.3922622, 213.29909544 }, { 1873680.0, 5.2354961, 206.1855484 }, { 1464664.0, 1.6476305, 426.5981909 }, { 821891.0, 5.9352, 316.39187 }, { 547507.0, 5.015326, 103.092774 }, { 371684.0, 2.271148, 220.412642 }, { 361778.0, 3.139043, 7.113547 }, { 140618.0, 5.704067, 632.783739 }, { 108975.0, 3.293136, 110.206321 }, { 69007.0, 5.941, 419.48464 }, { 61053.0, 0.94038, 639.89729 }, { 48913.0, 1.55733, 202.2534 }, { 34144.0, 0.19519, 277.03499 }, { 32402.0, 5.47085, 949.17561 }, { 20937.0, 0.46349, 735.87651 }, { 20839.0, 1.52103, 433.71174 }, { 20747.0, 5.33256, 199.072 }, { 15298.0, 3.05944, 529.69097 }, { 14296.0, 2.60434, 323.50542 }, { 12884.0, 1.64892, 138.5175 }, { 11993.0, 5.98051, 846.08283 }, { 11380.0, 1.73106, 522.57742 }, { 9796.0, 5.2048, 1265.5675 }, { 7753.0, 5.8519, 95.9792 }, { 6771.0, 3.0043, 14.2271 }, { 6466.0, 0.1773, 1052.2684 }, { 5850.0, 1.4552, 415.5525 }, { 5307.0, 0.5974, 63.7359 }, { 4696.0, 2.1492, 227.5262 }, { 4044.0, 1.6401, 209.3669 }, { 3688.0, 0.7802, 412.3711 }, { 3461.0, 1.8509, 175.1661 }, { 3420.0, 4.9455, 1581.9593 }, { 3401.0, 0.5539, 350.3321 }, { 3376.0, 3.6953, 224.3448 }, { 2976.0, 5.6847, 210.1177 }, { 2885.0, 1.3876, 838.9693 }, { 2881.0, 0.1796, 853.1964 }, { 2508.0, 3.5385, 742.9901 }, { 2448.0, 6.1841, 1368.6603 }, { 2406.0, 2.9656, 117.3199 }, { 2174.0, 0.0151, 340.7709 }, { 2024.0, 5.0541, 11.0457 } };
        double r0 = 0.0;
        for (int i = 0; i <= 43; ++i) {
            r0 += L[i][0] * Math.cos(L[i][1] + L[i][2] * t);
        }
        return r0;
    }
    
    double R1(final double t) {
        final double[][] L = { { 6182981.0, 0.2584352, 213.2990954 }, { 506578.0, 0.711147, 206.185548 }, { 341394.0, 5.796358, 426.598191 }, { 188491.0, 0.472157, 220.412642 }, { 186262.0, 3.141593, 0.0 }, { 143891.0, 1.407449, 7.113547 }, { 49621.0, 6.01744, 103.09277 }, { 20928.0, 5.09246, 639.89729 }, { 19953.0, 1.1756, 419.48464 }, { 18840.0, 1.6082, 110.20632 }, { 13877.0, 0.75886, 199.072 }, { 12893.0, 5.9433, 433.71174 }, { 5397.0, 1.2885, 14.2271 }, { 4869.0, 0.8679, 323.5054 }, { 4247.0, 0.393, 227.5262 }, { 3252.0, 1.2585, 95.9792 }, { 3081.0, 3.4366, 522.5774 }, { 2909.0, 4.6068, 202.2534 }, { 2856.0, 2.1673, 735.8765 }, { 1988.0, 2.4505, 412.3711 }, { 1941.0, 6.0239, 209.3669 }, { 1581.0, 1.2919, 210.1177 }, { 1340.0, 4.308, 853.1964 }, { 1316.0, 1.253, 117.3199 }, { 1203.0, 1.8665, 316.3919 }, { 1091.0, 0.0753, 216.4805 }, { 966.0, 0.48, 632.784 }, { 954.0, 5.152, 647.011 }, { 898.0, 0.983, 529.691 }, { 882.0, 1.885, 1052.268 }, { 874.0, 1.402, 224.345 }, { 785.0, 3.064, 838.969 }, { 740.0, 1.382, 625.67 }, { 658.0, 4.144, 309.278 }, { 650.0, 1.725, 742.99 }, { 613.0, 3.033, 63.736 }, { 599.0, 2.549, 217.231 }, { 503.0, 2.13, 3.932 } };
        double r1 = 0.0;
        for (int i = 0; i <= 37; ++i) {
            r1 += L[i][0] * Math.cos(L[i][1] + L[i][2] * t);
        }
        return r1;
    }
    
    double R2(final double t) {
        final double[][] L = { { 436902.0, 4.786717, 213.299095 }, { 71923.0, 2.5007, 206.18555 }, { 49767.0, 4.97168, 220.41264 }, { 43221.0, 3.8694, 426.59819 }, { 29646.0, 5.9631, 7.11355 }, { 4721.0, 2.4753, 199.072 }, { 4142.0, 4.1067, 433.7117 }, { 3789.0, 3.0977, 639.8973 }, { 2964.0, 1.3721, 103.0928 }, { 2556.0, 2.8507, 419.4846 }, { 2327.0, 0.0, 0.0 }, { 2208.0, 6.2759, 110.2063 }, { 2188.0, 5.8555, 14.2271 }, { 1957.0, 4.9245, 227.5262 }, { 924.0, 5.464, 323.505 }, { 706.0, 2.971, 95.979 }, { 546.0, 4.129, 412.371 }, { 431.0, 5.178, 522.577 }, { 405.0, 4.173, 209.367 }, { 391.0, 4.481, 216.48 }, { 374.0, 5.834, 117.32 }, { 361.0, 3.277, 647.011 }, { 356.0, 3.192, 210.118 }, { 326.0, 2.269, 853.196 } };
        double r2 = 0.0;
        for (int i = 0; i <= 23; ++i) {
            r2 += L[i][0] * Math.cos(L[i][1] + L[i][2] * t);
        }
        return r2;
    }
}
