digraph "" {
"specialinvoke <java.applet.Applet: void init()>";
 "specialinvoke <java.applet.Applet: void init()>"->"new java.util.Vector";
 "new java.util.Vector"->"specialinvoke <java.util.Vector: void <init>()>";
 "specialinvoke <java.util.Vector: void <init>()>"->"fieldput <jGraph: java.util.Vector teams>";
 "fieldput <jGraph: java.util.Vector teams>"->"virtualinvoke <java.awt.Component: java.awt.Dimension size()>";
 "virtualinvoke <java.awt.Component: java.awt.Dimension size()>"->"fieldput <jGraph: java.awt.Dimension dim>";
 "fieldput <jGraph: java.awt.Dimension dim>"->"virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>";
 "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"->"virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>";
 "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"->"virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>";
 "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"->"fieldput <jGraph: java.lang.String legonoff>";
 "fieldput <jGraph: java.lang.String legonoff>"->"virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>";
 "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"->"virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>";
 "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"->"staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>";
 "staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>"->"fieldget <jGraph: java.lang.String legonoff>";
 "fieldget <jGraph: java.lang.String legonoff>"->"fieldput <jGraph: java.lang.String legonoff>";
 "fieldput <jGraph: java.lang.String legonoff>"->"staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>";
 "staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>"->"staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>";
 "staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>"->"new java.awt.Font";
 "new java.awt.Font"->"specialinvoke <java.awt.Font: void <init>(java.lang.String,int,int)>";
 "specialinvoke <java.awt.Font: void <init>(java.lang.String,int,int)>"->"fieldput <jGraph: java.awt.Font tckfont>";
 "fieldput <jGraph: java.awt.Font tckfont>"->"new java.awt.Font";
 "new java.awt.Font"->"specialinvoke <java.awt.Font: void <init>(java.lang.String,int,int)>";
 "specialinvoke <java.awt.Font: void <init>(java.lang.String,int,int)>"->"fieldput <jGraph: java.awt.Font legfont>";
 "fieldput <jGraph: java.awt.Font legfont>"->"staticinvoke <java.awt.Toolkit: java.awt.Toolkit getDefaultToolkit()>";
 "staticinvoke <java.awt.Toolkit: java.awt.Toolkit getDefaultToolkit()>"->"fieldget <jGraph: java.awt.Font tckfont>";
 "fieldget <jGraph: java.awt.Font tckfont>"->"virtualinvoke <java.awt.Toolkit: java.awt.FontMetrics getFontMetrics(java.awt.Font)>";
 "virtualinvoke <java.awt.Toolkit: java.awt.FontMetrics getFontMetrics(java.awt.Font)>"->"staticinvoke <java.awt.Toolkit: java.awt.Toolkit getDefaultToolkit()>";
 "staticinvoke <java.awt.Toolkit: java.awt.Toolkit getDefaultToolkit()>"->"fieldget <jGraph: java.awt.Font legfont>";
 "fieldget <jGraph: java.awt.Font legfont>"->"virtualinvoke <java.awt.Toolkit: java.awt.FontMetrics getFontMetrics(java.awt.Font)>";
 "virtualinvoke <java.awt.Toolkit: java.awt.FontMetrics getFontMetrics(java.awt.Font)>"->"staticinvoke <java.lang.String: java.lang.String valueOf(int)>";
 "staticinvoke <java.lang.String: java.lang.String valueOf(int)>"->"staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>";
 "staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>"->"virtualinvoke <java.lang.String: java.lang.String concat(java.lang.String)>";
 "virtualinvoke <java.lang.String: java.lang.String concat(java.lang.String)>"->"virtualinvoke <jGraph: Team getTeamParameters(java.lang.String)>";
 "virtualinvoke <jGraph: Team getTeamParameters(java.lang.String)>"->"fieldget <jGraph: java.util.Vector teams>";
 "fieldget <jGraph: java.util.Vector teams>"->"virtualinvoke <java.util.Vector: void addElement(java.lang.Object)>";
 "virtualinvoke <java.util.Vector: void addElement(java.lang.Object)>"->"virtualinvoke <Team: java.lang.String getName()>";
 "virtualinvoke <Team: java.lang.String getName()>"->"virtualinvoke <java.awt.FontMetrics: int stringWidth(java.lang.String)>";
 "virtualinvoke <java.awt.FontMetrics: int stringWidth(java.lang.String)>"->"goto load.r r0";
"virtualinvoke <jGraph: java.lang.String[] getTicksInfo(java.lang.String)>";
 "virtualinvoke <jGraph: java.lang.String[] getTicksInfo(java.lang.String)>"->"fieldput <jGraph: java.lang.String[] xticks>";
 "fieldput <jGraph: java.lang.String[] xticks>"->"virtualinvoke <jGraph: java.lang.String[] getTicksInfo(java.lang.String)>";
 "virtualinvoke <jGraph: java.lang.String[] getTicksInfo(java.lang.String)>"->"fieldput <jGraph: java.lang.String[] yticks>";
 "fieldput <jGraph: java.lang.String[] yticks>"->"virtualinvoke <jGraph: java.awt.Color getColorParameter(java.lang.String)>";
 "virtualinvoke <jGraph: java.awt.Color getColorParameter(java.lang.String)>"->"fieldput <jGraph: java.awt.Color xgrid>";
 "fieldput <jGraph: java.awt.Color xgrid>"->"virtualinvoke <jGraph: java.awt.Color getColorParameter(java.lang.String)>";
 "virtualinvoke <jGraph: java.awt.Color getColorParameter(java.lang.String)>"->"fieldput <jGraph: java.awt.Color ygrid>";
 "fieldput <jGraph: java.awt.Color ygrid>"->"virtualinvoke <jGraph: java.awt.Color getColorParameter(java.lang.String)>";
 "virtualinvoke <jGraph: java.awt.Color getColorParameter(java.lang.String)>"->"fieldput <jGraph: java.awt.Color fg>";
 "fieldput <jGraph: java.awt.Color fg>"->"virtualinvoke <jGraph: java.awt.Color getColorParameter(java.lang.String)>";
 "virtualinvoke <jGraph: java.awt.Color getColorParameter(java.lang.String)>"->"fieldput <jGraph: java.awt.Color bg>";
 "fieldput <jGraph: java.awt.Color bg>"->"virtualinvoke <jGraph: java.awt.Color getColorParameter(java.lang.String)>";
 "virtualinvoke <jGraph: java.awt.Color getColorParameter(java.lang.String)>"->"fieldput <jGraph: java.awt.Color gback>";
 "fieldput <jGraph: java.awt.Color gback>"->"fieldget <jGraph: java.lang.String legonoff>";
 "fieldget <jGraph: java.lang.String legonoff>"->"virtualinvoke <java.lang.String: boolean equals(java.lang.Object)>";
 "virtualinvoke <java.lang.String: boolean equals(java.lang.Object)>"->"ifne new java.awt.Rectangle";
 "ifne new java.awt.Rectangle"->"new java.awt.Rectangle";
 "new java.awt.Rectangle"->"fieldget <jGraph: java.awt.Dimension dim>";
 "fieldget <jGraph: java.awt.Dimension dim>"->"fieldget <java.awt.Dimension: int width>";
 "fieldget <java.awt.Dimension: int width>"->"fieldget <jGraph: java.awt.Dimension dim>";
 "fieldget <jGraph: java.awt.Dimension dim>"->"fieldget <java.awt.Dimension: int height>";
 "fieldget <java.awt.Dimension: int height>"->"virtualinvoke <java.awt.FontMetrics: int getHeight()>";
 "virtualinvoke <java.awt.FontMetrics: int getHeight()>"->"fieldget <jGraph: java.util.Vector teams>";
 "fieldget <jGraph: java.util.Vector teams>"->"virtualinvoke <java.util.Vector: int size()>";
 "virtualinvoke <java.util.Vector: int size()>"->"fieldget <jGraph: java.util.Vector teams>";
 "fieldget <jGraph: java.util.Vector teams>"->"virtualinvoke <java.util.Vector: int size()>";
 "virtualinvoke <java.util.Vector: int size()>"->"specialinvoke <java.awt.Rectangle: void <init>(int,int,int,int)>";
 "specialinvoke <java.awt.Rectangle: void <init>(int,int,int,int)>"->"goto load.r r0";
 "goto load.r r0"->"specialinvoke <GraphPlotter: void <init>(java.awt.Rectangle,Axis)>";
 "specialinvoke <GraphPlotter: void <init>(java.awt.Rectangle,Axis)>"->"virtualinvoke <java.awt.Component: void repaint()>";
 "virtualinvoke <java.awt.Component: void repaint()>"->"return";
 "ifne new java.awt.Rectangle"->"new java.awt.Rectangle";
 "new java.awt.Rectangle"->"fieldget <jGraph: java.awt.Dimension dim>";
 "fieldget <jGraph: java.awt.Dimension dim>"->"fieldget <java.awt.Dimension: int width>";
 "fieldget <java.awt.Dimension: int width>"->"fieldget <jGraph: java.awt.Dimension dim>";
 "fieldget <jGraph: java.awt.Dimension dim>"->"fieldget <java.awt.Dimension: int height>";
 "fieldget <java.awt.Dimension: int height>"->"specialinvoke <java.awt.Rectangle: void <init>(int,int,int,int)>";
 "specialinvoke <java.awt.Rectangle: void <init>(int,int,int,int)>"->}
